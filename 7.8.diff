diff --git a/.gitignore b/.gitignore
index 65f2a3e14..c559b1383 100644
--- a/.gitignore
+++ b/.gitignore
@@ -28,7 +28,6 @@
 .packages
 .pub-cache/
 .pub/
-pubspec.lock
 /build/
 
 # Codemagic
@@ -52,7 +51,6 @@ android/.project
 android/app/.classpath
 android/app/.project
 android/app/.settings/
-pubspec.lock
 
 # iOS/XCode related
 **/ios/**/*.mode1v3
diff --git a/android/app/build.gradle b/android/app/build.gradle
index 0753036fb..5f8698d3b 100644
--- a/android/app/build.gradle
+++ b/android/app/build.gradle
@@ -46,7 +46,7 @@ android {
 
     defaultConfig {
         applicationId "edu.ucsd"
-        minSdkVersion 21
+        minSdkVersion 23
         targetSdkVersion 29
         versionCode flutterVersionCode.toInteger()
         versionName flutterVersionName
diff --git a/android/app/src/main/res/drawable/app_icon.png b/android/app/src/main/res/drawable/app_icon.png
new file mode 100644
index 000000000..4a117684b
Binary files /dev/null and b/android/app/src/main/res/drawable/app_icon.png differ
diff --git a/android/build.gradle b/android/build.gradle
index 73db3cd75..d8ddb7e5a 100644
--- a/android/build.gradle
+++ b/android/build.gradle
@@ -7,7 +7,7 @@ buildscript {
 
     dependencies {
         classpath 'com.google.firebase:firebase-crashlytics-gradle:2.2.0'
-        classpath 'com.android.tools.build:gradle:3.5.3'
+        classpath 'com.android.tools.build:gradle:4.1.0'
         classpath 'com.google.gms:google-services:4.3.3'
         classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
     }
@@ -17,10 +17,7 @@ allprojects {
     repositories {
         google()
         jcenter()
-        maven {
-            // [required] background_fetch
-            url "${project(':background_fetch').projectDir}/libs"
-            }
+        maven { url "${project(':background_fetch').projectDir}/libs" }
     }
 }
 
diff --git a/android/gradle/wrapper/gradle-wrapper.properties b/android/gradle/wrapper/gradle-wrapper.properties
index 671bcd110..bc6a58afd 100644
--- a/android/gradle/wrapper/gradle-wrapper.properties
+++ b/android/gradle/wrapper/gradle-wrapper.properties
@@ -1,5 +1,6 @@
+#Fri Jun 23 08:50:38 CEST 2017
 distributionBase=GRADLE_USER_HOME
 distributionPath=wrapper/dists
 zipStoreBase=GRADLE_USER_HOME
 zipStorePath=wrapper/dists
-distributionUrl=https://services.gradle.org/distributions/gradle-5.6.2-all.zip
+distributionUrl=https\://services.gradle.org/distributions/gradle-6.7-all.zip
diff --git a/ios/Podfile b/ios/Podfile
index 12dc55f7c..3270b6df2 100644
--- a/ios/Podfile
+++ b/ios/Podfile
@@ -38,7 +38,7 @@ post_install do |installer|
   installer.pods_project.targets.each do |target|
     flutter_additional_ios_build_settings(target)
     target.build_configurations.each do |config|
-      config.build_settings['IPHONEOS_DEPLOYMENT_TARGET'] = '9.0'
+      config.build_settings['IPHONEOS_DEPLOYMENT_TARGET'] = '10.0'
       # Remove unused permissions here
       # More information: https://github.com/BaseflowIT/flutter-permission-handler/blob/develop/permission_handler/ios/Classes/PermissionHandlerEnums.h
       # e.g. 'PERMISSION_CAMERA=0' for to remove camera permission
diff --git a/ios/Podfile.lock b/ios/Podfile.lock
index bebf2066c..c9c48e359 100644
--- a/ios/Podfile.lock
+++ b/ios/Podfile.lock
@@ -1,10 +1,13 @@
 PODS:
   - "app_settings (3.0.0+1)":
     - Flutter
-  - background_fetch (0.6.0):
+  - background_fetch (1.0.0-nullsafety.2):
     - Flutter
   - beacon_broadcast (0.0.1):
     - Flutter
+  - connectivity (0.0.1):
+    - Flutter
+    - Reachability
   - device_info (0.0.1):
     - Flutter
   - Firebase/Analytics (7.3.0):
@@ -20,17 +23,18 @@ PODS:
   - Firebase/Messaging (7.3.0):
     - Firebase/CoreOnly
     - FirebaseMessaging (~> 7.3.0)
-  - firebase_analytics (7.0.1):
+  - firebase_analytics (7.1.1):
     - Firebase/Analytics (= 7.3.0)
     - firebase_core
     - Flutter
-  - firebase_core (0.7.0):
+  - firebase_core (1.0.3):
     - Firebase/CoreOnly (= 7.3.0)
     - Flutter
-  - firebase_crashlytics (0.4.0-1):
+  - firebase_crashlytics (2.0.0):
     - Firebase/Crashlytics (= 7.3.0)
     - firebase_core
-  - firebase_messaging (8.0.0-dev.15):
+    - Flutter
+  - firebase_messaging (9.1.1):
     - Firebase/Messaging (= 7.3.0)
     - firebase_core
     - Flutter
@@ -58,12 +62,12 @@ PODS:
     - GoogleDataTransport (~> 8.0)
     - nanopb (~> 2.30906.0)
     - PromisesObjC (~> 1.2)
-  - FirebaseInstallations (7.6.0):
+  - FirebaseInstallations (7.11.0):
     - FirebaseCore (~> 7.0)
     - GoogleUtilities/Environment (~> 7.0)
     - GoogleUtilities/UserDefaults (~> 7.0)
     - PromisesObjC (~> 1.2)
-  - FirebaseInstanceID (7.6.0):
+  - FirebaseInstanceID (7.11.0):
     - FirebaseCore (~> 7.0)
     - FirebaseInstallations (~> 7.0)
     - GoogleUtilities/Environment (~> 7.0)
@@ -81,7 +85,9 @@ PODS:
     - flutter_blue/Protos (= 0.0.1)
   - flutter_blue/Protos (0.0.1):
     - Flutter
-    - Protobuf (~> 3.11.4)
+    - Protobuf (~> 3.15.8)
+  - flutter_local_notifications (0.0.1):
+    - Flutter
   - flutter_scandit_plugin (0.0.1):
     - Flutter
     - ScanditBarcodeCapture (~> 6.6.0-beta.2)
@@ -103,24 +109,24 @@ PODS:
   - GoogleMaps/Base (3.9.0)
   - GoogleMaps/Maps (3.9.0):
     - GoogleMaps/Base
-  - GoogleUtilities/AppDelegateSwizzler (7.2.2):
+  - GoogleUtilities/AppDelegateSwizzler (7.4.0):
     - GoogleUtilities/Environment
     - GoogleUtilities/Logger
     - GoogleUtilities/Network
-  - GoogleUtilities/Environment (7.2.2):
+  - GoogleUtilities/Environment (7.4.0):
     - PromisesObjC (~> 1.2)
-  - GoogleUtilities/Logger (7.2.2):
+  - GoogleUtilities/Logger (7.4.0):
     - GoogleUtilities/Environment
-  - GoogleUtilities/MethodSwizzler (7.2.2):
+  - GoogleUtilities/MethodSwizzler (7.4.0):
     - GoogleUtilities/Logger
-  - GoogleUtilities/Network (7.2.2):
+  - GoogleUtilities/Network (7.4.0):
     - GoogleUtilities/Logger
     - "GoogleUtilities/NSData+zlib"
     - GoogleUtilities/Reachability
-  - "GoogleUtilities/NSData+zlib (7.2.2)"
-  - GoogleUtilities/Reachability (7.2.2):
+  - "GoogleUtilities/NSData+zlib (7.4.0)"
+  - GoogleUtilities/Reachability (7.4.0):
     - GoogleUtilities/Logger
-  - GoogleUtilities/UserDefaults (7.2.2):
+  - GoogleUtilities/UserDefaults (7.4.0):
     - GoogleUtilities/Logger
   - location (0.0.1):
     - Flutter
@@ -136,23 +142,27 @@ PODS:
   - "permission_handler (5.1.0+2)":
     - Flutter
   - PromisesObjC (1.2.12)
-  - Protobuf (3.11.4)
-  - ScanditBarcodeCapture (6.6.3):
-    - ScanditCaptureCore (= 6.6.3)
-  - ScanditCaptureCore (6.6.3)
+  - Protobuf (3.15.8)
+  - Reachability (3.2)
+  - ScanditBarcodeCapture (6.6.4):
+    - ScanditCaptureCore (= 6.6.4)
+  - ScanditCaptureCore (6.6.4)
   - shared_preferences (0.0.1):
     - Flutter
-  - uni_links (0.0.1):
+  - uni_links2 (0.0.1):
     - Flutter
   - url_launcher (0.0.1):
     - Flutter
   - webview_flutter (0.0.1):
     - Flutter
+  - wifi_connection (0.0.2):
+    - Flutter
 
 DEPENDENCIES:
   - app_settings (from `.symlinks/plugins/app_settings/ios`)
   - background_fetch (from `.symlinks/plugins/background_fetch/ios`)
   - beacon_broadcast (from `.symlinks/plugins/beacon_broadcast/ios`)
+  - connectivity (from `.symlinks/plugins/connectivity/ios`)
   - device_info (from `.symlinks/plugins/device_info/ios`)
   - firebase_analytics (from `.symlinks/plugins/firebase_analytics/ios`)
   - firebase_core (from `.symlinks/plugins/firebase_core/ios`)
@@ -160,6 +170,7 @@ DEPENDENCIES:
   - firebase_messaging (from `.symlinks/plugins/firebase_messaging/ios`)
   - Flutter (from `Flutter`)
   - flutter_blue (from `.symlinks/plugins/flutter_blue/ios`)
+  - flutter_local_notifications (from `.symlinks/plugins/flutter_local_notifications/ios`)
   - flutter_scandit_plugin (from `.symlinks/plugins/flutter_scandit_plugin/ios`)
   - flutter_secure_storage (from `.symlinks/plugins/flutter_secure_storage/ios`)
   - google_maps_flutter (from `.symlinks/plugins/google_maps_flutter/ios`)
@@ -168,9 +179,10 @@ DEPENDENCIES:
   - path_provider (from `.symlinks/plugins/path_provider/ios`)
   - permission_handler (from `.symlinks/plugins/permission_handler/ios`)
   - shared_preferences (from `.symlinks/plugins/shared_preferences/ios`)
-  - uni_links (from `.symlinks/plugins/uni_links/ios`)
+  - uni_links2 (from `.symlinks/plugins/uni_links2/ios`)
   - url_launcher (from `.symlinks/plugins/url_launcher/ios`)
   - webview_flutter (from `.symlinks/plugins/webview_flutter/ios`)
+  - wifi_connection (from `.symlinks/plugins/wifi_connection/ios`)
 
 SPEC REPOS:
   trunk:
@@ -189,6 +201,7 @@ SPEC REPOS:
     - nanopb
     - PromisesObjC
     - Protobuf
+    - Reachability
     - ScanditBarcodeCapture
     - ScanditCaptureCore
 
@@ -199,6 +212,8 @@ EXTERNAL SOURCES:
     :path: ".symlinks/plugins/background_fetch/ios"
   beacon_broadcast:
     :path: ".symlinks/plugins/beacon_broadcast/ios"
+  connectivity:
+    :path: ".symlinks/plugins/connectivity/ios"
   device_info:
     :path: ".symlinks/plugins/device_info/ios"
   firebase_analytics:
@@ -213,6 +228,8 @@ EXTERNAL SOURCES:
     :path: Flutter
   flutter_blue:
     :path: ".symlinks/plugins/flutter_blue/ios"
+  flutter_local_notifications:
+    :path: ".symlinks/plugins/flutter_local_notifications/ios"
   flutter_scandit_plugin:
     :path: ".symlinks/plugins/flutter_scandit_plugin/ios"
   flutter_secure_storage:
@@ -229,53 +246,59 @@ EXTERNAL SOURCES:
     :path: ".symlinks/plugins/permission_handler/ios"
   shared_preferences:
     :path: ".symlinks/plugins/shared_preferences/ios"
-  uni_links:
-    :path: ".symlinks/plugins/uni_links/ios"
+  uni_links2:
+    :path: ".symlinks/plugins/uni_links2/ios"
   url_launcher:
     :path: ".symlinks/plugins/url_launcher/ios"
   webview_flutter:
     :path: ".symlinks/plugins/webview_flutter/ios"
+  wifi_connection:
+    :path: ".symlinks/plugins/wifi_connection/ios"
 
 SPEC CHECKSUMS:
   app_settings: d103828c9f5d515c4df9ee754dabd443f7cedcf3
-  background_fetch: 9221ccc02b41aff8a52b2090d9f791c5ed82eaee
+  background_fetch: 67b227578932e795dbe3ea6d3f7c006e45f3ce66
   beacon_broadcast: 2c2562111f7b7e0f1ab59487f6bc805805e3c9f3
+  connectivity: c4130b2985d4ef6fd26f9702e886bd5260681467
   device_info: d7d233b645a32c40dfdc212de5cf646ca482f175
   Firebase: 26223c695fe322633274198cb19dca8cb7e54416
-  firebase_analytics: 41043f6e14fc9bc27c3f05217ab7f2b0ad9b41eb
-  firebase_core: 91b27774a52f41f8b58484a75edf71197ac01c59
-  firebase_crashlytics: e6ecb908f6249ce3757d18a812819a41495bf1cb
-  firebase_messaging: caf0273c76e54f0a10dfe5048ac47b89e75bb78a
+  firebase_analytics: ee4abb07bfa857e7c95d97144efe9eb68be414cd
+  firebase_core: b5d81dfd4fb2d6f700e67de34d9a633ae325c4e9
+  firebase_crashlytics: 3b8018f6c88a59be95f9e2f38f04e5c0f05e0c6a
+  firebase_messaging: 7547c99f31466371f9cfcb733d5a1bf32a819872
   FirebaseAnalytics: 2580c2d62535ae7b644143d48941fcc239ea897a
   FirebaseCore: 4d3c72622ce0e2106aaa07bb4b2935ba2c370972
   FirebaseCoreDiagnostics: d50e11039e5984d92c8a512be2395f13df747350
   FirebaseCrashlytics: d31325312c92e2cb2f0386d589b9aa44e303d99b
-  FirebaseInstallations: 6e4e77396559bc2ae0504823837ed737b1c7e47f
-  FirebaseInstanceID: cf243611700eddc916b093353adbd4da822cfa63
+  FirebaseInstallations: a58d4f72ec5861840b84df489f2668d970df558a
+  FirebaseInstanceID: ad5135045a498d7775903efd39762d2cdfa1be27
   FirebaseMessaging: 68d1bcb14880189558a8ae57167abe0b7e417232
-  Flutter: 0e3d915762c693b495b44d77113d4970485de6ec
-  flutter_blue: eeb381dc4727a0954dede73515f683865494b370
+  Flutter: 434fef37c0980e73bb6479ef766c45957d4b510c
+  flutter_blue: 0c6281e67dd48996820a5fd1b98d6d532a1e5efb
+  flutter_local_notifications: 0c0b1ae97e741e1521e4c1629a459d04b9aec743
   flutter_scandit_plugin: 99b341bc008c38d7a2590ed924e4c106ac76841e
   flutter_secure_storage: 7953c38a04c3fdbb00571bcd87d8e3b5ceb9daec
   google_maps_flutter: c7f9c73576de1fbe152a227bfd6e6c4ae8088619
   GoogleAppMeasurement: 8d3c0aeede16ab7764144b5a4ca8e1d4323841b7
   GoogleDataTransport: 116c84c4bdeb76be2a7a46de51244368f9794eab
   GoogleMaps: 4b5346bddfe6911bb89155d43c903020170523ac
-  GoogleUtilities: 31c5b01f978a70c6cff2afc6272b3f1921614b43
+  GoogleUtilities: 284cddc7fffc14ae1907efb6f78ab95c1fccaedc
   location: 3a2eed4dd2fab25e7b7baf2a9efefe82b512d740
   nanopb: 1bf24dd71191072e120b83dd02d08f3da0d65e53
   package_info: 873975fc26034f0b863a300ad47e7f1ac6c7ec62
   path_provider: abfe2b5c733d04e238b0d8691db0cfd63a27a93c
   permission_handler: ccb20a9fad0ee9b1314a52b70b76b473c5f8dab0
   PromisesObjC: 3113f7f76903778cf4a0586bd1ab89329a0b7b97
-  Protobuf: 176220c526ad8bd09ab1fb40a978eac3fef665f7
-  ScanditBarcodeCapture: 4bf4801b6a2358be88dda23c604eaf133d53cc94
-  ScanditCaptureCore: 66a461d5a4589845910b71a21b86412e6bb2ae68
-  shared_preferences: 430726339841afefe5142b9c1f50cb6bd7793e01
-  uni_links: d97da20c7701486ba192624d99bffaaffcfc298a
-  url_launcher: a1c0cc845906122c4784c542523d8cacbded5626
-  webview_flutter: d2b4d6c66968ad042ad94cbb791f5b72b4678a96
+  Protobuf: adb85cd18a15bd1a777c158af9fd6e612a0e6d69
+  Reachability: 33e18b67625424e47b6cde6d202dce689ad7af96
+  ScanditBarcodeCapture: 8de10f1d79cb4c669b75c61ddaed60c7c7daa7f4
+  ScanditCaptureCore: 7118e29ef970e70ca1ea6512fa8414e5a3761497
+  shared_preferences: af6bfa751691cdc24be3045c43ec037377ada40d
+  uni_links2: fbc37081577fc19c6e0f7e6cdbd3baa150023635
+  url_launcher: 6fef411d543ceb26efce54b05a0a40bfd74cbbef
+  webview_flutter: 9f491a9b5a66f2573946a389b2677987b0ff8c0b
+  wifi_connection: cbd6d42bbd0cb9302ea325efe5bd3945576266cc
 
-PODFILE CHECKSUM: b652aab8f496e0b73e65fb9d327673c821cb4dd7
+PODFILE CHECKSUM: 4ce335bd3d39b2b13951c6130618e51c5ed4085e
 
-COCOAPODS: 1.9.3
+COCOAPODS: 1.10.1
diff --git a/ios/Runner.xcodeproj/project.pbxproj b/ios/Runner.xcodeproj/project.pbxproj
index c7b67f519..87941e467 100644
--- a/ios/Runner.xcodeproj/project.pbxproj
+++ b/ios/Runner.xcodeproj/project.pbxproj
@@ -315,20 +315,20 @@
 				"${BUILT_PRODUCTS_DIR}/FirebaseInstallations/FirebaseInstallations.framework",
 				"${BUILT_PRODUCTS_DIR}/FirebaseInstanceID/FirebaseInstanceID.framework",
 				"${BUILT_PRODUCTS_DIR}/FirebaseMessaging/FirebaseMessaging.framework",
-				"${PODS_ROOT}/../Flutter/Flutter.framework",
 				"${BUILT_PRODUCTS_DIR}/GoogleDataTransport/GoogleDataTransport.framework",
 				"${BUILT_PRODUCTS_DIR}/GoogleUtilities/GoogleUtilities.framework",
 				"${BUILT_PRODUCTS_DIR}/PromisesObjC/FBLPromises.framework",
-				"${BUILT_PRODUCTS_DIR}/Protobuf/protobuf.framework",
+				"${BUILT_PRODUCTS_DIR}/Protobuf/Protobuf.framework",
+				"${BUILT_PRODUCTS_DIR}/Reachability/Reachability.framework",
 				"${PODS_ROOT}/ScanditBarcodeCapture/ScanditBarcodeCapture.framework",
-				"${PODS_ROOT}/ScanditBarcodeCapture/ScanditBarcodeCapture.framework.dSYM",
 				"${PODS_ROOT}/ScanditCaptureCore/ScanditCaptureCore.framework",
-				"${PODS_ROOT}/ScanditCaptureCore/ScanditCaptureCore.framework.dSYM",
 				"${BUILT_PRODUCTS_DIR}/app_settings/app_settings.framework",
 				"${BUILT_PRODUCTS_DIR}/background_fetch/background_fetch.framework",
 				"${BUILT_PRODUCTS_DIR}/beacon_broadcast/beacon_broadcast.framework",
+				"${BUILT_PRODUCTS_DIR}/connectivity/connectivity.framework",
 				"${BUILT_PRODUCTS_DIR}/device_info/device_info.framework",
 				"${BUILT_PRODUCTS_DIR}/flutter_blue/flutter_blue.framework",
+				"${BUILT_PRODUCTS_DIR}/flutter_local_notifications/flutter_local_notifications.framework",
 				"${BUILT_PRODUCTS_DIR}/flutter_scandit_plugin/flutter_scandit_plugin.framework",
 				"${BUILT_PRODUCTS_DIR}/flutter_secure_storage/flutter_secure_storage.framework",
 				"${BUILT_PRODUCTS_DIR}/location/location.framework",
@@ -336,9 +336,10 @@
 				"${BUILT_PRODUCTS_DIR}/package_info/package_info.framework",
 				"${BUILT_PRODUCTS_DIR}/path_provider/path_provider.framework",
 				"${BUILT_PRODUCTS_DIR}/shared_preferences/shared_preferences.framework",
-				"${BUILT_PRODUCTS_DIR}/uni_links/uni_links.framework",
+				"${BUILT_PRODUCTS_DIR}/uni_links2/uni_links2.framework",
 				"${BUILT_PRODUCTS_DIR}/url_launcher/url_launcher.framework",
 				"${BUILT_PRODUCTS_DIR}/webview_flutter/webview_flutter.framework",
+				"${BUILT_PRODUCTS_DIR}/wifi_connection/wifi_connection.framework",
 			);
 			name = "[CP] Embed Pods Frameworks";
 			outputPaths = (
@@ -348,20 +349,20 @@
 				"${TARGET_BUILD_DIR}/${FRAMEWORKS_FOLDER_PATH}/FirebaseInstallations.framework",
 				"${TARGET_BUILD_DIR}/${FRAMEWORKS_FOLDER_PATH}/FirebaseInstanceID.framework",
 				"${TARGET_BUILD_DIR}/${FRAMEWORKS_FOLDER_PATH}/FirebaseMessaging.framework",
-				"${TARGET_BUILD_DIR}/${FRAMEWORKS_FOLDER_PATH}/Flutter.framework",
 				"${TARGET_BUILD_DIR}/${FRAMEWORKS_FOLDER_PATH}/GoogleDataTransport.framework",
 				"${TARGET_BUILD_DIR}/${FRAMEWORKS_FOLDER_PATH}/GoogleUtilities.framework",
 				"${TARGET_BUILD_DIR}/${FRAMEWORKS_FOLDER_PATH}/FBLPromises.framework",
-				"${TARGET_BUILD_DIR}/${FRAMEWORKS_FOLDER_PATH}/protobuf.framework",
+				"${TARGET_BUILD_DIR}/${FRAMEWORKS_FOLDER_PATH}/Protobuf.framework",
+				"${TARGET_BUILD_DIR}/${FRAMEWORKS_FOLDER_PATH}/Reachability.framework",
 				"${TARGET_BUILD_DIR}/${FRAMEWORKS_FOLDER_PATH}/ScanditBarcodeCapture.framework",
-				"${DWARF_DSYM_FOLDER_PATH}/ScanditBarcodeCapture.framework.dSYM",
 				"${TARGET_BUILD_DIR}/${FRAMEWORKS_FOLDER_PATH}/ScanditCaptureCore.framework",
-				"${DWARF_DSYM_FOLDER_PATH}/ScanditCaptureCore.framework.dSYM",
 				"${TARGET_BUILD_DIR}/${FRAMEWORKS_FOLDER_PATH}/app_settings.framework",
 				"${TARGET_BUILD_DIR}/${FRAMEWORKS_FOLDER_PATH}/background_fetch.framework",
 				"${TARGET_BUILD_DIR}/${FRAMEWORKS_FOLDER_PATH}/beacon_broadcast.framework",
+				"${TARGET_BUILD_DIR}/${FRAMEWORKS_FOLDER_PATH}/connectivity.framework",
 				"${TARGET_BUILD_DIR}/${FRAMEWORKS_FOLDER_PATH}/device_info.framework",
 				"${TARGET_BUILD_DIR}/${FRAMEWORKS_FOLDER_PATH}/flutter_blue.framework",
+				"${TARGET_BUILD_DIR}/${FRAMEWORKS_FOLDER_PATH}/flutter_local_notifications.framework",
 				"${TARGET_BUILD_DIR}/${FRAMEWORKS_FOLDER_PATH}/flutter_scandit_plugin.framework",
 				"${TARGET_BUILD_DIR}/${FRAMEWORKS_FOLDER_PATH}/flutter_secure_storage.framework",
 				"${TARGET_BUILD_DIR}/${FRAMEWORKS_FOLDER_PATH}/location.framework",
@@ -369,9 +370,10 @@
 				"${TARGET_BUILD_DIR}/${FRAMEWORKS_FOLDER_PATH}/package_info.framework",
 				"${TARGET_BUILD_DIR}/${FRAMEWORKS_FOLDER_PATH}/path_provider.framework",
 				"${TARGET_BUILD_DIR}/${FRAMEWORKS_FOLDER_PATH}/shared_preferences.framework",
-				"${TARGET_BUILD_DIR}/${FRAMEWORKS_FOLDER_PATH}/uni_links.framework",
+				"${TARGET_BUILD_DIR}/${FRAMEWORKS_FOLDER_PATH}/uni_links2.framework",
 				"${TARGET_BUILD_DIR}/${FRAMEWORKS_FOLDER_PATH}/url_launcher.framework",
 				"${TARGET_BUILD_DIR}/${FRAMEWORKS_FOLDER_PATH}/webview_flutter.framework",
+				"${TARGET_BUILD_DIR}/${FRAMEWORKS_FOLDER_PATH}/wifi_connection.framework",
 			);
 			runOnlyForDeploymentPostprocessing = 0;
 			shellPath = /bin/sh;
diff --git a/ios/Runner.xcodeproj/project.xcworkspace/contents.xcworkspacedata b/ios/Runner.xcodeproj/project.xcworkspace/contents.xcworkspacedata
index 1d526a16e..919434a62 100644
--- a/ios/Runner.xcodeproj/project.xcworkspace/contents.xcworkspacedata
+++ b/ios/Runner.xcodeproj/project.xcworkspace/contents.xcworkspacedata
@@ -2,6 +2,6 @@
 <Workspace
    version = "1.0">
    <FileRef
-      location = "group:Runner.xcodeproj">
+      location = "self:">
    </FileRef>
 </Workspace>
diff --git a/ios/Runner/AppDelegate.swift b/ios/Runner/AppDelegate.swift
index d822806be..f4b9147e1 100644
--- a/ios/Runner/AppDelegate.swift
+++ b/ios/Runner/AppDelegate.swift
@@ -1,6 +1,6 @@
 import UIKit
 import Flutter
-import GoogleMaps
+ import GoogleMaps
 import Firebase
 
 @UIApplicationMain
diff --git a/ios/Runner/Runner.entitlements b/ios/Runner/Runner.entitlements
index 903def2af..75e36a143 100644
--- a/ios/Runner/Runner.entitlements
+++ b/ios/Runner/Runner.entitlements
@@ -4,5 +4,7 @@
 <dict>
 	<key>aps-environment</key>
 	<string>development</string>
+	<key>com.apple.developer.networking.wifi-info</key>
+	<true/>
 </dict>
 </plist>
diff --git a/lib/app_constants.dart b/lib/app_constants.dart
index 27da9ff44..b88f2bc59 100644
--- a/lib/app_constants.dart
+++ b/lib/app_constants.dart
@@ -33,13 +33,6 @@ class RoutePaths {
   static const String DiningViewAll = 'dining/dining_list_view';
   static const String DiningDetailView = 'dining/dining_detail_view';
   static const String DiningNutritionView = 'dining/dining_nutrition_view';
-  static const String SurfView = 'surfing/surf_view';
-  static const String SpecialEventsListView =
-      'special_events/special_events_list_view';
-  static const String SpecialEventsFilterView =
-      'special_events/special_events_filter_view';
-  static const String SpecialEventsDetailView =
-      'special_events/special_events_detail_view';
   static const String ScannerView = 'scanner/scanner_view';
   static const String ScanditScanner = 'scanner/scandit_scanner';
   static const String Parking = "parking/parking_view";
@@ -68,9 +61,6 @@ class RouteTitles {
     'dining/dining_list_view': 'Dining',
     'dining/dining_detail_view': 'Dining',
     'dining/dining_nutrition_view': 'Dining',
-    'special_events/special_events_list_view': 'Special Events',
-    'special_events/special_events_filter_view': 'Special Events',
-    'special_events/special_events_detail_view': 'Special Events',
   };
 }
 
@@ -91,9 +81,10 @@ class ErrorConstants {
   static const authorizedPutErrors = 'Failed to update data: ';
   static const invalidBearerToken = 'Invalid bearer token';
   static const duplicateRecord =
-      'DioError [DioErrorType.RESPONSE]: Http status error [409]';
+      'DioError [DioErrorType.response]: Http status error [409]';
   static const invalidMedia =
-      'DioError [DioErrorType.RESPONSE]: Http status error [415]';
+      'DioError [DioErrorType.response]: Http status error [415]';
+  static const silentLoginFailed = "Silent login failed";
 }
 
 class ScannerConstants {
@@ -114,6 +105,9 @@ class ScannerConstants {
 }
 
 class LoginConstants {
+  static const silentLoginFailedTitle = 'Oops! You\'re not logged in.';
+  static const silentLoginFailedDesc =
+      'The system has logged you out (probably by mistake). Go to Profile to log back in.';
   static const loginFailedTitle = 'Sorry, unable to sign you in.';
   static const loginFailedDesc =
       'Be sure you are using the correct credentials; TritonLink login if you are a student, SSO (AD or Active Directory) if you are a Faculty/Staff.';
@@ -152,15 +146,12 @@ class DataPersistence {
 /// Maps Card IDs to Card titles
 class CardTitleConstants {
   static const titleMap = {
-    'QRScanner': 'Scanner', // Web Scanner
     'NativeScanner': 'Scanner',
     'MyStudentChart': 'MyStudentChart',
     'MyUCSDChart': 'MyUCSDChart',
-    'staff_info': 'COVID-19 Info',
-    'campus_info': "Campus Information",
-    'student_info': 'COVID-19 Info',
     'student_survey': 'Student Survey',
     'student_id': 'Student ID',
+    'speed_test': "Speed Test",
     'employee_id': 'Employee ID',
     'finals': 'Finals',
     'schedule': 'Classes',
@@ -170,7 +161,6 @@ class CardTitleConstants {
     'events': 'Events',
     'news': 'News',
     'parking': 'Parking',
-    'special_events': 'Special Events',
     'weather': 'Weather',
   };
 }
diff --git a/lib/app_networking.dart b/lib/app_networking.dart
index 3957b0f02..472bdd723 100644
--- a/lib/app_networking.dart
+++ b/lib/app_networking.dart
@@ -1,13 +1,20 @@
 import 'dart:async';
+import 'dart:ui';
 
 import 'package:campus_mobile_experimental/app_constants.dart';
 import 'package:dio/dio.dart';
+import 'package:flutter/material.dart';
+import 'package:get/get.dart';
 
 class NetworkHelper {
   ///TODO: inside each service that file place a switch statement to handle all
   ///TODO: different errors thrown by the Dio client DioErrorType.RESPONSE
   const NetworkHelper();
 
+  static const int SSO_REFRESH_MAX_RETRIES = 3;
+  static const int SSO_REFRESH_RETRY_INCREMENT = 5000;
+  static const int SSO_REFRESH_RETRY_MULTIPLIER = 3;
+
   Future<dynamic> fetchData(String url) async {
     Dio dio = new Dio();
     dio.options.connectTimeout = 20000;
@@ -46,6 +53,64 @@ class NetworkHelper {
     }
   }
 
+  Widget getSilentLoginDialog() {
+    return AlertDialog(
+      title: const Text(LoginConstants.silentLoginFailedTitle),
+      content: Text(LoginConstants.silentLoginFailedDesc),
+      actions: [
+        FlatButton(
+          onPressed: () {
+            Get.back(closeOverlays: true);
+          },
+          child: const Text('OK'),
+        ),
+      ],
+    );
+  }
+
+  // method for implementing exponential backoff for silentLogin
+  // mimicking existing code from React Native versions of campus-mobile
+  Future<dynamic> authorizedPublicPost(
+      String url, Map<String, String> headers, dynamic body) async {
+      print("SILENTLOGIN: in authorizedPublicPost");
+      int retries = 0;
+      int waitTime = 0;
+      try {
+        var response = await authorizedPost(url, headers, body);
+        return response;
+      }
+      catch(e) {
+        // exponential backoff here
+        retries++;
+        waitTime = SSO_REFRESH_RETRY_INCREMENT;
+        while(retries <= SSO_REFRESH_MAX_RETRIES) {
+          print("SILENTLOGIN: Retrying in ${waitTime} ms...");
+
+          // wait for the wait time to elapse
+          await Future.delayed(Duration(milliseconds: waitTime));
+
+          // calculate new wait time (not exponential for now, mimicking previous code)
+          waitTime *= SSO_REFRESH_RETRY_MULTIPLIER;
+          // try to log in again
+          try {
+            print("SILENTLOGIN: Retrying now...");
+            var response = await authorizedPost(url, headers, body);
+
+            // no exception thrown, success, return response
+            return response;
+          }
+          catch(e) {
+            // still raising an exception, increment retries and try again
+            retries++;
+          }
+        }
+      }
+      // if here, silent login has failed
+      // throw exception to inform caller
+      await Get.dialog(getSilentLoginDialog());
+      throw new Exception(ErrorConstants.silentLoginFailed);
+  }
+
   Future<dynamic> authorizedPost(
       String url, Map<String, String> headers, dynamic body) async {
     Dio dio = new Dio();
@@ -123,7 +188,8 @@ class NetworkHelper {
         throw Exception('Failed to delete data: ' + _response.data);
       }
     } on TimeoutException catch (e) {
-      // Display an alert, no internet
+      // Display an alert - i.e. no internet
+      print(e);
     } catch (err) {
       print(err);
       return null;
diff --git a/lib/app_provider.dart b/lib/app_provider.dart
index 579790498..8236f55bd 100644
--- a/lib/app_provider.dart
+++ b/lib/app_provider.dart
@@ -14,9 +14,10 @@ import 'package:campus_mobile_experimental/core/providers/notices.dart';
 import 'package:campus_mobile_experimental/core/providers/notifications.dart';
 import 'package:campus_mobile_experimental/core/providers/notifications_freefood.dart';
 import 'package:campus_mobile_experimental/core/providers/parking.dart';
-import 'package:campus_mobile_experimental/core/providers/scanner_message.dart';
 import 'package:campus_mobile_experimental/core/providers/scanner.dart';
+import 'package:campus_mobile_experimental/core/providers/scanner_message.dart';
 import 'package:campus_mobile_experimental/core/providers/shuttle.dart';
+import 'package:campus_mobile_experimental/core/providers/speed_test.dart';
 import 'package:campus_mobile_experimental/core/providers/student_id.dart';
 import 'package:campus_mobile_experimental/core/providers/survey.dart';
 import 'package:campus_mobile_experimental/core/providers/user.dart';
@@ -25,12 +26,9 @@ import 'package:campus_mobile_experimental/core/providers/weather.dart';
 import 'package:campus_mobile_experimental/ui/navigator/top.dart';
 import 'package:firebase_analytics/firebase_analytics.dart';
 import 'package:firebase_analytics/observer.dart';
-import 'package:flutter/cupertino.dart';
 import 'package:provider/provider.dart';
 import 'package:provider/single_child_widget.dart';
 
-import 'core/providers/scanner.dart';
-
 List<SingleChildWidget> providers = [
   ...independentServices,
   ...dependentServices,
@@ -114,6 +112,7 @@ List<SingleChildWidget> dependentServices = [
     diningDataProvider.populateDistances();
     return diningDataProvider;
   }),
+
   ChangeNotifierProxyProvider<Coordinates, MapsDataProvider>(create: (_) {
     var mapsDataProvider = MapsDataProvider();
     return mapsDataProvider;
@@ -239,19 +238,18 @@ List<SingleChildWidget> dependentServices = [
   }),
   ChangeNotifierProxyProvider<UserDataProvider, ScannerMessageDataProvider>(
       create: (_) {
-        print("CreateProvider: ScannerMessageDataProvider");
-        var scannerMessageDataProvider = ScannerMessageDataProvider();
-        return scannerMessageDataProvider;
-      }, update: (_, userDataProvider, scannerMessageDataProvider) {
-      print("UpdateProvider: ScannerMessageDataProvider");
-      scannerMessageDataProvider.userDataProvider = userDataProvider;
-      //Verify that the user is logged in
-      if (userDataProvider.isLoggedIn && !scannerMessageDataProvider.isLoading) {
-        scannerMessageDataProvider.fetchData();
-      }
-      return scannerMessageDataProvider;
+    print("CreateProvider: ScannerMessageDataProvider");
+    var scannerMessageDataProvider = ScannerMessageDataProvider();
+    return scannerMessageDataProvider;
+  }, update: (_, userDataProvider, scannerMessageDataProvider) {
+    print("UpdateProvider: ScannerMessageDataProvider");
+    scannerMessageDataProvider.userDataProvider = userDataProvider;
+    //Verify that the user is logged in
+    if (userDataProvider.isLoggedIn && !scannerMessageDataProvider.isLoading) {
+      scannerMessageDataProvider.fetchData();
     }
-  ),
+    return scannerMessageDataProvider;
+  }),
   ChangeNotifierProxyProvider<UserDataProvider, AvailabilityDataProvider>(
       create: (_) {
     print("CreateProvider: AvailabilityDataProvider");
@@ -274,6 +272,15 @@ List<SingleChildWidget> dependentServices = [
     shuttleDataProvider.userDataProvider = userDataProvider;
     return shuttleDataProvider;
   }),
+  ChangeNotifierProxyProvider2<Coordinates, UserDataProvider, SpeedTestProvider>(create: (_){
+    SpeedTestProvider speedTestProvider = SpeedTestProvider();
+    speedTestProvider.init();
+    return speedTestProvider;
+  }, update: (_, coordinates, userDataProvider, speedTestProvider){
+    speedTestProvider.coordinates = coordinates;
+    speedTestProvider.userDataProvider = userDataProvider;
+    return speedTestProvider;
+  }),
   ChangeNotifierProxyProvider<UserDataProvider, ParkingDataProvider>(
       create: (_) {
     print("CreateProvider: ParkingDataProvider");
diff --git a/lib/app_router.dart b/lib/app_router.dart
index 41407b919..62c8fcce9 100644
--- a/lib/app_router.dart
+++ b/lib/app_router.dart
@@ -60,7 +60,6 @@ class Router {
       case RoutePaths.Profile:
         return MaterialPageRoute(builder: (_) => Profile());
       case RoutePaths.NewsViewAll:
-        NewsModel data = settings.arguments as NewsModel;
         return MaterialPageRoute(builder: (_) {
           Provider.of<CustomAppBar>(_).changeTitle(settings.name);
           return NewsList();
@@ -150,6 +149,8 @@ class Router {
         return MaterialPageRoute(builder: (_) => BeaconView());
       case RoutePaths.ScanditScanner:
         return MaterialPageRoute(builder: (_) => ScanditScanner());
+      default:
+        return MaterialPageRoute(builder: (_) => Home());
     }
   }
 }
diff --git a/lib/core/models/notices.dart b/lib/core/models/notices.dart
index 220e3b1e7..2823c7e14 100644
--- a/lib/core/models/notices.dart
+++ b/lib/core/models/notices.dart
@@ -1,8 +1,5 @@
 import 'dart:convert';
 
-import 'package:flutter/cupertino.dart';
-import 'package:flutter/material.dart';
-
 String noticeTitleKey = "notice-title";
 String noticeBannerImageKey = "notice-banner-image";
 String noticeBannerLinkKey = "notice-banner-link";
diff --git a/lib/core/models/shuttle.dart b/lib/core/models/shuttle.dart
index efabfd76d..2937160e5 100644
--- a/lib/core/models/shuttle.dart
+++ b/lib/core/models/shuttle.dart
@@ -22,7 +22,7 @@ class ShuttleModel {
   String description;
   String routeType;
   Color color;
-  List<ShuttleStopModel> stops = List<ShuttleStopModel>();
+  List<ShuttleStopModel> stops = [];
 
   ShuttleModel(
       {this.displayOrder,
@@ -66,7 +66,7 @@ class ShuttleModel {
 
   List<ShuttleModel> getListOfShuttles(String str) {
     Map<String, dynamic> list = json.decode(str);
-    List<ShuttleModel> ret = List<ShuttleModel>();
+    List<ShuttleModel> ret = [];
     list.forEach((key, value) {
       ret.add(ShuttleModel(
           displayOrder:
diff --git a/lib/core/models/shuttle_arrival.dart b/lib/core/models/shuttle_arrival.dart
index 2372c217b..5e16ec6d5 100644
--- a/lib/core/models/shuttle_arrival.dart
+++ b/lib/core/models/shuttle_arrival.dart
@@ -2,7 +2,7 @@ import 'dart:convert';
 
 List<ArrivingShuttle> getArrivingShuttles(String str) {
   var shuttles = json.decode(str);
-  List<ArrivingShuttle> arrivingShuttles = List<ArrivingShuttle>();
+  List<ArrivingShuttle> arrivingShuttles = [];
   shuttles.forEach((shuttle) {
     arrivingShuttles.add(ArrivingShuttle.fromJson(shuttle));
   });
diff --git a/lib/core/models/shuttle_stop.dart b/lib/core/models/shuttle_stop.dart
index d59a44d83..9470e458d 100644
--- a/lib/core/models/shuttle_stop.dart
+++ b/lib/core/models/shuttle_stop.dart
@@ -3,7 +3,7 @@ import 'dart:core';
 
 List<ShuttleStopModel> shuttleStopModelFromJson(String str) {
   Map<String, dynamic> list = json.decode(str);
-  List<ShuttleStopModel> ret = List<ShuttleStopModel>();
+  List<ShuttleStopModel> ret = [];
   list.forEach((key, value) {
     ret.add(ShuttleStopModel(
         lat: value["lat"] == null ? null : value["lat"].toDouble(),
diff --git a/lib/core/models/speed_test.dart b/lib/core/models/speed_test.dart
new file mode 100644
index 000000000..59823dc0a
--- /dev/null
+++ b/lib/core/models/speed_test.dart
@@ -0,0 +1,90 @@
+import 'dart:convert';
+import 'dart:io';
+
+import 'package:wifi_connection/WifiInfo.dart';
+
+class SpeedTestModel {
+  bool isUCSDWifi;
+  String uploadUrl;
+  String downloadUrl;
+  String platform;
+  String ssid;
+  String bssid;
+  String ipAddress;
+  String macAddress;
+  String linkSpeed;
+  String signalStrength;
+  String frequency;
+  String networkID;
+  String isHiddenSSID;
+  String routerIP;
+  String channel;
+  double latitude;
+  double longitude;
+  String timeStamp;
+  double downloadSpeed;
+  double uploadSpeed;
+
+  SpeedTestModel(
+      {this.isUCSDWifi,
+      this.uploadUrl,
+      this.downloadUrl,
+      this.platform,
+      this.ssid,
+      this.bssid,
+      this.ipAddress,
+      this.macAddress,
+      this.linkSpeed,
+      this.signalStrength,
+      this.frequency,
+      this.networkID,
+      this.isHiddenSSID,
+      this.routerIP,
+      this.channel,
+      this.latitude,
+      this.longitude,
+      this.timeStamp,
+      this.downloadSpeed,
+      this.uploadSpeed});
+
+  factory SpeedTestModel.fromJson(
+      WifiInfo wifiInfo,
+      Map<String, dynamic> downloadJson,
+      Map<String, dynamic> uploadJson,
+      bool isUCSDWifi) {
+    if (wifiInfo == null) {
+      return SpeedTestModel(isUCSDWifi: false);
+    }
+    return SpeedTestModel(
+        isUCSDWifi: isUCSDWifi,
+        uploadUrl: uploadJson["signed_url"],
+        downloadUrl: downloadJson["signed_url"],
+        platform: Platform.isAndroid ? "Android" : "iOS",
+        ssid: wifiInfo.ssid == null ? "" : wifiInfo.ssid,
+        bssid: wifiInfo.bssid == null ? "" : wifiInfo.bssid,
+        ipAddress: wifiInfo.ipAddress == null ? "" : wifiInfo.ipAddress,
+        macAddress: wifiInfo.macAddress == null ? "" : wifiInfo.macAddress,
+        linkSpeed: wifiInfo.linkSpeed == null ? "" : wifiInfo.linkSpeed,
+        signalStrength:
+            wifiInfo.signalStrength == null ? "" : wifiInfo.signalStrength,
+        frequency: wifiInfo.frequency == null ? "" : wifiInfo.frequency,
+        networkID: wifiInfo.networkId == null ? "" : wifiInfo.networkId,
+        isHiddenSSID:
+            wifiInfo.isHiddenSSID == null ? "" : wifiInfo.isHiddenSSID,
+        routerIP: wifiInfo.routerIp == null ? "" : wifiInfo.routerIp,
+        channel: wifiInfo.channel == null ? "" : wifiInfo.channel,
+        latitude: 0.0,
+        longitude: 0.0,
+        timeStamp: DateTime.fromMillisecondsSinceEpoch(
+                DateTime.now().millisecondsSinceEpoch)
+            .toString(),
+        downloadSpeed: 0.0,
+        uploadSpeed: 0.0);
+  }
+}
+
+SpeedTestModel speedTestModelFromJson(
+    WifiInfo wifiInfo, String downloadUrl, String uploadUrl, bool isUCSDWifi) {
+  return SpeedTestModel.fromJson(
+      wifiInfo, json.decode(downloadUrl), json.decode(uploadUrl), isUCSDWifi);
+}
diff --git a/lib/core/models/user_profile.dart b/lib/core/models/user_profile.dart
index 25258a08b..f8d89922b 100644
--- a/lib/core/models/user_profile.dart
+++ b/lib/core/models/user_profile.dart
@@ -60,14 +60,14 @@ class UserProfileModel extends HiveObject {
             json["latestTimeStamp"] == null ? null : json["latestTimeStamp"],
         pid: json["pid"] == null ? null : json["pid"],
         selectedLots: json["selectedLots"] == null
-            ? List<String>()
+            ? []
             : List<String>.from(json["selectedLots"].map((x) => x)),
         selectedOccuspaceLocations: json["selectedOccuspaceLocations"] == null
-            ? List<String>()
+            ? []
             : List<String>.from(
                 json["selectedOccuspaceLocations"].map((x) => x)),
         subscribedTopics: json["subscribedTopics"] == null
-            ? List<String>()
+            ? []
             : List<String>.from(json["subscribedTopics"].map((x) => x)),
         ucsdaffiliation:
             json["ucsdaffiliation"] == null ? null : json["ucsdaffiliation"],
@@ -81,11 +81,11 @@ class UserProfileModel extends HiveObject {
             : Map<String, bool>.from(json["selectedParkingSpots"]
                 .map((x, y) => MapEntry<String, bool>(x, y))),
         selectedStops: json["selectedStops"] == null
-            ? List<int>()
+            ? []
             : List<int>.from(json["selectedStops"].map((x) => x)),
         surveyCompletion: json["surveyCompletion"] == null
-            ? List<String>()
-            : List<String>.from(json["surveyCompletion"].map((x) => x))
+            ? []
+            : List<String>.from(json["surveyCompletion"].map((x) => x)),
       );
 
   Map<String, dynamic> toJson() => {
diff --git a/lib/core/providers/availability.dart b/lib/core/providers/availability.dart
index a8341a66b..8a11c6c0d 100644
--- a/lib/core/providers/availability.dart
+++ b/lib/core/providers/availability.dart
@@ -87,7 +87,7 @@ class AvailabilityDataProvider extends ChangeNotifier {
     }
 
     ///create an empty list that will be returned
-    List<AvailabilityModel> orderedListOfLots = List<AvailabilityModel>();
+    List<AvailabilityModel> orderedListOfLots = [];
     Map<String, AvailabilityModel> tempMap = Map<String, AvailabilityModel>();
     tempMap.addAll(_availabilityModels);
 
@@ -155,12 +155,12 @@ class AvailabilityDataProvider extends ChangeNotifier {
       }
       return _availabilityModels.values.toList();
     }
-    return List<AvailabilityModel>();
+    return [];
   }
 
   /// get all locations
   List<String> locations() {
-    List<String> locationsToReturn = List<String>();
+    List<String> locationsToReturn = [];
     for (AvailabilityModel model in _availabilityModels ?? []) {
       locationsToReturn.add(model.locationName);
     }
diff --git a/lib/core/providers/cards.dart b/lib/core/providers/cards.dart
index dbed683cc..95ba6ad65 100644
--- a/lib/core/providers/cards.dart
+++ b/lib/core/providers/cards.dart
@@ -11,47 +11,49 @@ class CardsDataProvider extends ChangeNotifier {
     _isLoading = false;
     _cardStates = {};
     _webCards = {};
+
+    // Default card order for native cards
     _cardOrder = [
-      'QRScanner',
       'NativeScanner',
       'MyStudentChart',
       'MyUCSDChart',
-      'student_id',
-      'campus_info',
-      'employee_id',
-      'staff_info',
-      'student_info',
-      'student_survey',
       'finals',
       'schedule',
-      'shuttle',
-      'dining',
-      'parking',
+      'student_survey',
+      'student_id',
+      'employee_id',
+      'speed_test',
       'availability',
+      'dining',
       'events',
+      'shuttle',
+      'parking',
       'news',
       'weather',
     ];
 
+    // Native student cards
     _studentCards = [
+      'finals',
+      'schedule',
       'student_survey',
-      'student_info',
       'student_id',
-      'finals',
-      'schedule'
+      'speed_test',
     ];
 
+    // Native staff cards
     _staffCards = [
       'MyUCSDChart',
       'staff_info',
       'employee_id',
+      'speed_test',
     ];
 
     for (String card in CardTitleConstants.titleMap.keys.toList()) {
       _cardStates[card] = true;
     }
 
-    /// temporary fix that prevents the student cards from causing issues on launch
+    /// temporary fix that prevents authenticated cards from causing issues on launch
     _cardOrder.removeWhere((element) => _studentCards.contains(element));
     _cardStates.removeWhere((key, value) => _studentCards.contains(key));
 
@@ -149,7 +151,7 @@ class CardsDataProvider extends ChangeNotifier {
   /// Update the [_cardOrder] stored in state
   /// overwrite the [_cardOrder] in persistent storage with the model passed in
   Future updateCardOrder(List<String> newOrder) async {
-    if(_userDataProvider.isInSilentLogin) {
+    if (_userDataProvider != null && _userDataProvider.isInSilentLogin) {
       return;
     }
     try {
@@ -166,7 +168,7 @@ class CardsDataProvider extends ChangeNotifier {
   /// Load [_cardOrder] from persistent storage
   /// Will create persistent storage if no data is found
   Future _loadCardOrder() async {
-    if(_userDataProvider.isInSilentLogin) {
+    if (_userDataProvider != null && _userDataProvider.isInSilentLogin) {
       return;
     }
     _cardOrderBox = await Hive.openBox(DataPersistence.cardOrder);
@@ -198,7 +200,7 @@ class CardsDataProvider extends ChangeNotifier {
   /// Update the [_cardStates] stored in state
   /// overwrite the [_cardStates] in persistent storage with the model passed in
   Future updateCardStates(List<String> activeCards) async {
-    if(_userDataProvider.isInSilentLogin) {
+    if (_userDataProvider != null && _userDataProvider.isInSilentLogin) {
       return;
     }
     for (String activeCard in activeCards) {
@@ -239,7 +241,6 @@ class CardsDataProvider extends ChangeNotifier {
     // TODO: test w/o this
     _cardOrder = List.from(_cardOrder.toSet().toList());
 
-
     for (String card in _studentCards) {
       _cardStates[card] = true;
     }
@@ -308,7 +309,6 @@ class CardsDataProvider extends ChangeNotifier {
 
   set userDataProvider(UserDataProvider value) => _userDataProvider = value;
 
-
   ///SIMPLE GETTERS
   bool get isLoading => _isLoading;
   String get error => _error;
diff --git a/lib/core/providers/classes.dart b/lib/core/providers/classes.dart
index cf61e400f..864049671 100644
--- a/lib/core/providers/classes.dart
+++ b/lib/core/providers/classes.dart
@@ -13,29 +13,29 @@ class ClassScheduleDataProvider extends ChangeNotifier {
     _selectedCourse = 0;
     nextDayWithClass = 'Monday';
     _enrolledClasses = {
-      'MO': List<SectionData>(),
-      'TU': List<SectionData>(),
-      'WE': List<SectionData>(),
-      'TH': List<SectionData>(),
-      'FR': List<SectionData>(),
-      'SA': List<SectionData>(),
-      'SU': List<SectionData>(),
-      'OTHER': List<SectionData>(),
+      'MO': [],
+      'TU': [],
+      'WE': [],
+      'TH': [],
+      'FR': [],
+      'SA': [],
+      'SU': [],
+      'OTHER': [],
     };
     _finals = {
-      'MO': List<SectionData>(),
-      'TU': List<SectionData>(),
-      'WE': List<SectionData>(),
-      'TH': List<SectionData>(),
-      'FR': List<SectionData>(),
-      'SA': List<SectionData>(),
-      'SU': List<SectionData>(),
-      'OTHER': List<SectionData>(),
+      'MO': [],
+      'TU': [],
+      'WE': [],
+      'TH': [],
+      'FR': [],
+      'SA': [],
+      'SU': [],
+      'OTHER': [],
     };
 
     _midterms = {
-      'MI': List<SectionData>(),
-      'OTHER': List<SectionData>(),
+      'MI': [],
+      'OTHER': [],
     };
 
     ///INITIALIZE SERVICES
@@ -80,7 +80,7 @@ class ClassScheduleDataProvider extends ChangeNotifier {
         /// fetch grad courses
         if (await _classScheduleService.fetchGRCourses(
             headers, _academicTermModel.termCode)) {
-          _classScheduleModel = _classScheduleService.GRdata;
+          _classScheduleModel = _classScheduleService.grData;
         } else {
           _error = _classScheduleService.error.toString();
         }
@@ -89,9 +89,9 @@ class ClassScheduleDataProvider extends ChangeNotifier {
         if (await _classScheduleService.fetchUNCourses(
             headers, _academicTermModel.termCode)) {
           if (_classScheduleModel.data != null) {
-            _classScheduleModel.data.addAll(_classScheduleService.UNdata.data);
+            _classScheduleModel.data.addAll(_classScheduleService.unData.data);
           } else {
-            _classScheduleModel = _classScheduleService.UNdata;
+            _classScheduleModel = _classScheduleService.unData;
           }
           _error = null;
         } else {
@@ -105,30 +105,30 @@ class ClassScheduleDataProvider extends ChangeNotifier {
 
         /// remove all old classes
         _enrolledClasses = {
-          'MO': List<SectionData>(),
-          'TU': List<SectionData>(),
-          'WE': List<SectionData>(),
-          'TH': List<SectionData>(),
-          'FR': List<SectionData>(),
-          'SA': List<SectionData>(),
-          'SU': List<SectionData>(),
-          'OTHER': List<SectionData>(),
+          'MO': [],
+          'TU': [],
+          'WE': [],
+          'TH': [],
+          'FR': [],
+          'SA': [],
+          'SU': [],
+          'OTHER': [],
         };
 
         _finals = {
-          'MO': List<SectionData>(),
-          'TU': List<SectionData>(),
-          'WE': List<SectionData>(),
-          'TH': List<SectionData>(),
-          'FR': List<SectionData>(),
-          'SA': List<SectionData>(),
-          'SU': List<SectionData>(),
-          'OTHER': List<SectionData>(),
+          'MO': [],
+          'TU': [],
+          'WE': [],
+          'TH': [],
+          'FR': [],
+          'SA': [],
+          'SU': [],
+          'OTHER': [],
         };
 
         _midterms = {
-          'MI': List<SectionData>(),
-          'OTHER': List<SectionData>(),
+          'MI': [],
+          'OTHER': [],
         };
         try {
           _createMapOfClasses();
@@ -147,7 +147,7 @@ class ClassScheduleDataProvider extends ChangeNotifier {
   }
 
   void _createMapOfClasses() {
-    List<ClassData> enrolledCourses = List<ClassData>();
+    List<ClassData> enrolledCourses = [];
 
     /// add only enrolled classes because api returns wait-listed and dropped
     /// courses as well
@@ -267,7 +267,7 @@ class ClassScheduleDataProvider extends ChangeNotifier {
 
   List<SectionData> get upcomingCourses {
     /// get weekday and return [List<SectionData>] associated with current weekday
-    List<SectionData> listToReturn = List<SectionData>();
+    List<SectionData> listToReturn = [];
     String today = DateFormat('EEEE')
         .format(DateTime.now())
         .toString()
diff --git a/lib/core/providers/dining.dart b/lib/core/providers/dining.dart
index 0a1f481b1..fa88d59f1 100644
--- a/lib/core/providers/dining.dart
+++ b/lib/core/providers/dining.dart
@@ -138,7 +138,7 @@ class DiningDataProvider extends ChangeNotifier {
     } else {
       menuItems = _diningMenuItemModels[id].menuItems;
     }
-    List<MenuItem> filteredMenuItems = List<MenuItem>();
+    List<MenuItem> filteredMenuItems = [];
     if (filters != null) {
       for (var menuItem in menuItems) {
         int matched = 0;
@@ -166,6 +166,6 @@ class DiningDataProvider extends ChangeNotifier {
       }
       return _diningModels.values.toList();
     }
-    return List<DiningModel>();
+    return [];
   }
 }
diff --git a/lib/core/providers/events.dart b/lib/core/providers/events.dart
index 263653283..1783dbe73 100644
--- a/lib/core/providers/events.dart
+++ b/lib/core/providers/events.dart
@@ -10,7 +10,7 @@ class EventsDataProvider extends ChangeNotifier {
     ///INITIALIZE SERVICES
     _eventsService = EventsService();
 
-    _eventsModels = List<EventModel>();
+    _eventsModels = [];
   }
 
   ///STATES
diff --git a/lib/core/providers/map.dart b/lib/core/providers/map.dart
index d8778f952..b667bdbdf 100644
--- a/lib/core/providers/map.dart
+++ b/lib/core/providers/map.dart
@@ -15,7 +15,7 @@ class MapsDataProvider extends ChangeNotifier {
     ///INITIALIZE SERVICES
     _mapSearchService = MapSearchService();
 
-    _mapSearchModels = List<MapSearchModel>();
+    _mapSearchModels = [];
   }
 
   ///STATES
@@ -25,25 +25,26 @@ class MapsDataProvider extends ChangeNotifier {
   bool _noResults;
 
   ///MODELS
-  List<MapSearchModel> _mapSearchModels = List<MapSearchModel>();
+  List<MapSearchModel> _mapSearchModels = [];
 
   Coordinates _coordinates;
   Map<MarkerId, Marker> _markers = Map<MarkerId, Marker>();
   TextEditingController _searchBarController = TextEditingController();
   GoogleMapController _mapController;
 
-  List<String> _searchHistory = List<String>();
+  List<String> _searchHistory = [];
 
   ///SERVICES
   MapSearchService _mapSearchService;
 
-   void addMarker(int listIndex) {
+  void addMarker(int listIndex) {
     final Marker marker = Marker(
       markerId: MarkerId(_mapSearchModels[listIndex].mkrMarkerid.toString()),
       position: LatLng(_mapSearchModels[listIndex].mkrLat,
           _mapSearchModels[listIndex].mkrLong),
-      infoWindow: InfoWindow(title: _mapSearchModels[listIndex].title, snippet: _mapSearchModels[listIndex].description),
-
+      infoWindow: InfoWindow(
+          title: _mapSearchModels[listIndex].title,
+          snippet: _mapSearchModels[listIndex].description),
     );
     _markers.clear();
     _markers[marker.markerId] = marker;
@@ -55,13 +56,14 @@ class MapsDataProvider extends ChangeNotifier {
   void updateMapPosition() {
     if (_markers.isNotEmpty && _mapController != null) {
       _mapController
-          .animateCamera(CameraUpdate.newLatLng(_markers.values.toList()[0].position))
+          .animateCamera(
+              CameraUpdate.newLatLng(_markers.values.toList()[0].position))
           .then((_) async {
         await Future.delayed(Duration(seconds: 1));
         try {
-          _mapController.showMarkerInfoWindow(_markers.values.toList()[0].markerId);
-        }
-        catch(e) {}
+          _mapController
+              .showMarkerInfoWindow(_markers.values.toList()[0].markerId);
+        } catch (e) {}
       });
     }
   }
diff --git a/lib/core/providers/messages.dart b/lib/core/providers/messages.dart
index a2fab630c..0f8168a52 100644
--- a/lib/core/providers/messages.dart
+++ b/lib/core/providers/messages.dart
@@ -10,7 +10,7 @@ class MessagesDataProvider extends ChangeNotifier {
   MessagesDataProvider() {
     /// DEFAULT STATES
     _isLoading = false;
-    _messages = List<MessageElement>();
+    _messages = [];
     _messageService = MessageService();
     _statusText = NotificationsConstants.statusFetching;
     _hasMoreMessagesToLoad = false;
@@ -63,7 +63,7 @@ class MessagesDataProvider extends ChangeNotifier {
   }
 
   void _clearMessages() {
-    _messages = List<MessageElement>();
+    _messages = [];
     _hasMoreMessagesToLoad = false;
     _previousTimestamp = DateTime.now().millisecondsSinceEpoch;
   }
@@ -102,6 +102,8 @@ class MessagesDataProvider extends ChangeNotifier {
       notifyListeners();
       return true;
     }
+
+    return false;
   }
 
   Future<bool> retrieveMoreTopicMessages() async {
@@ -174,6 +176,6 @@ class MessagesDataProvider extends ChangeNotifier {
     if (_messages != null) {
       return _messages;
     }
-    return List<MessageElement>();
+    return [];
   }
 }
diff --git a/lib/core/providers/notices.dart b/lib/core/providers/notices.dart
index 03c4dee6a..bceb250c7 100644
--- a/lib/core/providers/notices.dart
+++ b/lib/core/providers/notices.dart
@@ -9,7 +9,7 @@ class NoticesDataProvider extends ChangeNotifier {
 
     ///INITIALIZE SERVICES
     _noticesService = NoticesService();
-    _noticesModel = List<NoticesModel>();
+    _noticesModel = [];
   }
 
   ///STATES
diff --git a/lib/core/providers/notifications.dart b/lib/core/providers/notifications.dart
index e8a52058c..1ddbae43b 100644
--- a/lib/core/providers/notifications.dart
+++ b/lib/core/providers/notifications.dart
@@ -1,9 +1,11 @@
 import 'dart:io';
-
+import 'dart:async';
 import 'package:campus_mobile_experimental/app_constants.dart';
 import 'package:campus_mobile_experimental/core/models/topics.dart';
 import 'package:campus_mobile_experimental/core/providers/bottom_nav.dart';
 import 'package:campus_mobile_experimental/core/providers/messages.dart';
+import 'package:flutter/cupertino.dart';
+import 'package:flutter_local_notifications/flutter_local_notifications.dart';
 import 'package:campus_mobile_experimental/core/services/notifications.dart';
 import 'package:device_info/device_info.dart';
 import 'package:firebase_messaging/firebase_messaging.dart';
@@ -20,6 +22,9 @@ class PushNotificationDataProvider extends ChangeNotifier {
     initState();
   }
 
+  ///Context as Global Variable
+  BuildContext context;
+
   ///Models
   FirebaseMessaging _fcm;
   DeviceInfoPlugin deviceInfoPlugin;
@@ -38,7 +43,7 @@ class PushNotificationDataProvider extends ChangeNotifier {
   /// invokes [fetchTopicsList]
   initState() async {
     fetchTopicsList();
-
+    //onDidReceiveLocalNotification: onDidReceiveLocalNotification);
     if (Platform.isAndroid) {
       _deviceData = _readAndroidBuildData(await deviceInfoPlugin.androidInfo);
     } else if (Platform.isIOS) {
@@ -59,13 +64,34 @@ class PushNotificationDataProvider extends ChangeNotifier {
     );
   }
 
+  FlutterLocalNotificationsPlugin flutterLocalNotificationsPlugin =
+      FlutterLocalNotificationsPlugin();
+
   /// Configures the [_fcm] object to receive push notifications
   Future<void> initPlatformState(BuildContext context) async {
     try {
+      /// Initialize flutter notification settings
+      this.context = context;
+      const AndroidInitializationSettings initializationSettingsAndroid =
+          AndroidInitializationSettings("@drawable/ic_notif_round");
+      final IOSInitializationSettings initializationSettingsIOS =
+          IOSInitializationSettings();
+      final InitializationSettings initializationSettings =
+          InitializationSettings(
+              android: initializationSettingsAndroid,
+              iOS: initializationSettingsIOS);
+      await flutterLocalNotificationsPlugin.initialize(initializationSettings,
+          onSelectNotification: selectNotification);
+
+      /// Foreground messaging
       FirebaseMessaging.onMessage.listen((RemoteMessage message) {
-        /// TODO: Implement foreground messaging via flutter_local_notifications
         print('FCM: onMessage: foreground message:');
         print(message);
+
+        /// foreground messaging callback via flutter_local_notifications
+        showNotification(message);
+
+        /// Fetch in-app messages
         Provider.of<MessagesDataProvider>(context, listen: false)
             .fetchMessages(true);
       });
@@ -93,6 +119,44 @@ class PushNotificationDataProvider extends ChangeNotifier {
     }
   }
 
+  ///Handles notification when selected
+  Future selectNotification(String payload) async {
+    /// Fetch in-app messages
+    Provider.of<MessagesDataProvider>(this.context, listen: false)
+        .fetchMessages(true);
+
+    /// Navigate to Notifications tab
+    Navigator.of(this.context).pushNamedAndRemoveUntil(
+        RoutePaths.BottomNavigationBar, (Route<dynamic> route) => false);
+
+    /// Set tab bar index to the Notifications tab
+    Provider.of<BottomNavigationBarProvider>(this.context, listen: false)
+        .currentIndex = NavigatorConstants.NotificationsTab;
+    print("Local Notification Clicked");
+  }
+
+  ///Displays the notification
+  showNotification(RemoteMessage message) async {
+    const AndroidNotificationDetails androidPlatformChannelSpecifics =
+        AndroidNotificationDetails(
+            'your channel id', 'your channel name', 'your channel description',
+            icon: '@drawable/ic_notif_round',
+            largeIcon:
+                const DrawableResourceAndroidBitmap('@drawable/app_icon'),
+            importance: Importance.max,
+            priority: Priority.high,
+            showWhen: false);
+    const IOSNotificationDetails();
+    const NotificationDetails platformChannelSpecifics = NotificationDetails(
+        android: androidPlatformChannelSpecifics,
+        iOS: IOSNotificationDetails());
+    //This is where you put info from firebase
+    await flutterLocalNotificationsPlugin.show(0, message.notification.title,
+        message.notification.body, platformChannelSpecifics,
+        payload: 'This is the payload');
+    print("Local Notification Displayed");
+  }
+
   /// Fetches topics from endpoint
   /// Deletes topics that are no longer supported
   /// Transfers over previous subscriptions
@@ -274,12 +338,13 @@ class PushNotificationDataProvider extends ChangeNotifier {
         }
       }
     }
+    return 'Topic not found';
   }
 
   /// Get student only topics
   List<String> studentTopics() {
     print('FCM: studentTopics');
-    List<String> topicsToReturn = List<String>();
+    List<String> topicsToReturn = [];
     for (TopicsModel model in _notificationService.topicsModel ?? []) {
       if (model.audienceId == 'student') {
         for (Topic topic in model.topics) {
@@ -294,7 +359,7 @@ class PushNotificationDataProvider extends ChangeNotifier {
   /// Get staff only topics
   List<String> staffTopics() {
     print('FCM: staffTopics');
-    List<String> topicsToReturn = List<String>();
+    List<String> topicsToReturn = [];
     for (TopicsModel model in _notificationService.topicsModel ?? []) {
       if (model.audienceId == 'staff') {
         for (Topic topic in model.topics) {
@@ -309,7 +374,7 @@ class PushNotificationDataProvider extends ChangeNotifier {
   /// Get all public topics
   List<String> publicTopics() {
     print('FCM: publicTopics');
-    List<String> topicsToReturn = List<String>();
+    List<String> topicsToReturn = [];
     for (TopicsModel model in _topicsModel ?? []) {
       if (model.audienceId == 'all') {
         for (Topic topic in model.topics) {
diff --git a/lib/core/providers/notifications_freefood.dart b/lib/core/providers/notifications_freefood.dart
index 8ab5030c5..3b704627b 100644
--- a/lib/core/providers/notifications_freefood.dart
+++ b/lib/core/providers/notifications_freefood.dart
@@ -42,7 +42,7 @@ class FreeFoodDataProvider extends ChangeNotifier {
   void initializeValues() {
     _messageToCount = new HashMap<String, int>();
     _messageToMaxCount = new HashMap<String, int>();
-    _registeredEvents = new List<String>();
+    _registeredEvents = [];
   }
 
   void removeId(String id) {
diff --git a/lib/core/providers/parking.dart b/lib/core/providers/parking.dart
index 99f3bd7fb..27552205f 100644
--- a/lib/core/providers/parking.dart
+++ b/lib/core/providers/parking.dart
@@ -9,8 +9,6 @@ import 'package:flutter/material.dart';
 class ParkingDataProvider extends ChangeNotifier {
   ParkingDataProvider() {
     ///DEFAULT STATES
-    _isLoadingLots = false;
-    _isLoadingSpots = false;
     _isLoading = false;
 
     _parkingService = ParkingService();
@@ -20,12 +18,10 @@ class ParkingDataProvider extends ChangeNotifier {
   UserDataProvider _userDataProvider;
 
   ///STATES
-  bool _isLoadingLots;
-  bool _isLoadingSpots;
   bool _isLoading;
   DateTime _lastUpdated;
   String _error;
-  int selected_lots, selected_spots;
+  int selectedLots, selectedSpots;
   static const MAX_SELECTED_LOTS = 10;
   static const MAX_SELECTED_SPOTS = 3;
   Map<String, bool> _parkingViewState = <String, bool>{};
@@ -41,8 +37,8 @@ class ParkingDataProvider extends ChangeNotifier {
 
   void fetchParkingData() async {
     _isLoading = true;
-    selected_spots = 0;
-    selected_lots = 0;
+    selectedSpots = 0;
+    selectedLots = 0;
     _error = null;
     notifyListeners();
 
@@ -68,7 +64,7 @@ class ParkingDataProvider extends ChangeNotifier {
       //Update number of lots selected
       _parkingViewState.forEach((key, value) {
         if (value) {
-          selected_lots++;
+          selectedLots++;
         }
       });
 
@@ -99,7 +95,7 @@ class ParkingDataProvider extends ChangeNotifier {
       //Update number of spots selected
       _selectedSpotTypesState.forEach((key, value) {
         if (value) {
-          selected_spots++;
+          selectedSpots++;
         }
       });
     } else {
@@ -117,7 +113,7 @@ class ParkingDataProvider extends ChangeNotifier {
     if (_parkingModels != null) {
       return _parkingModels.values.toList();
     }
-    return List<ParkingModel>();
+    return [];
   }
 
   SpotTypeModel get spotTypeModel {
@@ -129,13 +125,13 @@ class ParkingDataProvider extends ChangeNotifier {
 
 // add or remove location availability display from card based on user selection, Limit to MAX_SELECTED
   void toggleLot(String location) {
-    if (selected_lots < MAX_SELECTED_LOTS) {
+    if (selectedLots < MAX_SELECTED_LOTS) {
       _parkingViewState[location] = !_parkingViewState[location];
-      _parkingViewState[location] ? selected_lots++ : selected_lots--;
+      _parkingViewState[location] ? selectedLots++ : selectedLots--;
     } else {
       //prevent select
       if (_parkingViewState[location]) {
-        selected_lots--;
+        selectedLots--;
         _parkingViewState[location] = !_parkingViewState[location];
       }
     }
@@ -145,13 +141,13 @@ class ParkingDataProvider extends ChangeNotifier {
   }
 
   void toggleSpotSelection(String spotKey) {
-    if (selected_spots < MAX_SELECTED_SPOTS) {
+    if (selectedSpots < MAX_SELECTED_SPOTS) {
       _selectedSpotTypesState[spotKey] = !_selectedSpotTypesState[spotKey];
-      _selectedSpotTypesState[spotKey] ? selected_spots++ : selected_spots--;
+      _selectedSpotTypesState[spotKey] ? selectedSpots++ : selectedSpots--;
     } else {
       //prevent select
       if (_selectedSpotTypesState[spotKey]) {
-        selected_spots--;
+        selectedSpots--;
         _selectedSpotTypesState[spotKey] = !_selectedSpotTypesState[spotKey];
       }
     }
diff --git a/lib/core/providers/scanner.dart b/lib/core/providers/scanner.dart
index 53366f2aa..cd238b0af 100644
--- a/lib/core/providers/scanner.dart
+++ b/lib/core/providers/scanner.dart
@@ -31,9 +31,9 @@ class ScannerDataProvider extends ChangeNotifier {
   bool _successfulSubmission;
   bool _isValidBarcode;
   String errorText;
-  PermissionStatus cameraPermissionsStatus = PermissionStatus.undetermined;
+  PermissionStatus cameraPermissionsStatus;
   ScanditController _controller;
-  List<String> scannedCodes = new List<String>();
+  List<String> scannedCodes = [];
 
   void initState() {
     if (Platform.isIOS) {
@@ -53,7 +53,7 @@ class ScannerDataProvider extends ChangeNotifier {
     isLoading = false;
     _isDuplicate = false;
     _isValidBarcode = true;
-    scannedCodes = new List<String>();
+    scannedCodes = [];
     notifyListeners();
   }
 
diff --git a/lib/core/providers/shuttle.dart b/lib/core/providers/shuttle.dart
index 5494a1518..3d1ab0b58 100644
--- a/lib/core/providers/shuttle.dart
+++ b/lib/core/providers/shuttle.dart
@@ -8,8 +8,6 @@ import 'package:campus_mobile_experimental/core/services/shuttle.dart';
 import 'package:flutter/material.dart';
 import 'package:location/location.dart';
 
-import '../models/shuttle_stop.dart';
-
 class ShuttleDataProvider extends ChangeNotifier {
   ShuttleDataProvider() {
     /// DEFAULT STATES
@@ -80,7 +78,7 @@ class ShuttleDataProvider extends ChangeNotifier {
     }
 
     ///create an empty list that will be returned
-    List<ShuttleStopModel> orderedListOfStops = List<ShuttleStopModel>();
+    List<ShuttleStopModel> orderedListOfStops = [];
 
     /// remove lots as we add them to the ordered list
     for (int stopID in order) {
@@ -200,7 +198,7 @@ class ShuttleDataProvider extends ChangeNotifier {
       if (userDataProvider.userProfileModel != null)
         return makeOrderedList(userDataProvider.userProfileModel.selectedStops);
     }
-    return List<ShuttleStopModel>();
+    return [];
   }
 
   Map<int, ShuttleStopModel> get stopsNotSelected {
diff --git a/lib/core/providers/speed_test.dart b/lib/core/providers/speed_test.dart
new file mode 100644
index 000000000..e93d43fbf
--- /dev/null
+++ b/lib/core/providers/speed_test.dart
@@ -0,0 +1,365 @@
+import 'dart:convert';
+import 'dart:io';
+
+import 'package:campus_mobile_experimental/app_constants.dart';
+import 'package:campus_mobile_experimental/app_networking.dart';
+import 'package:campus_mobile_experimental/core/models/location.dart';
+import 'package:campus_mobile_experimental/core/models/speed_test.dart';
+import 'package:campus_mobile_experimental/core/providers/user.dart';
+import 'package:campus_mobile_experimental/core/services/speed_test.dart';
+import 'package:dio/dio.dart';
+import 'package:flutter/cupertino.dart';
+import 'package:path_provider/path_provider.dart';
+
+class SpeedTestProvider extends ChangeNotifier {
+  bool _onSimulator;
+  bool _isLoading;
+  bool _isUCSDWifi = true;
+  Coordinates _coordinates;
+  String _error;
+  NetworkHelper _networkHelper = new NetworkHelper();
+  Dio dio = new Dio();
+  Stopwatch _timer = new Stopwatch();
+  double _speedDownload;
+  double _speedUpload;
+  double _percentDownloaded = 0.0;
+  double _percentUploaded = 0.0;
+  CancelToken _cancelTokenDownload;
+  CancelToken _cancelTokenUpload;
+  bool _speedTestDone = false;
+  int _secondsElapsedDownload = 0;
+  int _secondsElapsedUpload = 0;
+  SpeedTestService _speedTestService;
+  SpeedTestModel _speedTestModel;
+  bool isUCSDWiFi = true;
+  Map wiFiLog;
+  UserDataProvider _userDataProvider;
+  final Map<String, String> headers = {
+    "accept": "application/json",
+  };
+  Map<String, String> offloadDataHeader;
+  String mobileLoggerApi =
+      'https://api-qa.ucsd.edu:8243/mobileapplogger/v1.1.0/log';
+
+  SpeedTestProvider() {
+    _isLoading = false;
+    init();
+  }
+
+  ///This setter is only used in provider to supply an updated Coordinates object
+  set coordinates(Coordinates value) {
+    _coordinates = value;
+  }
+
+  set userDataProvider(UserDataProvider userDataProvider) {
+    _userDataProvider = userDataProvider;
+  }
+
+  void init() async {
+    _speedTestService = SpeedTestService();
+
+    if (await _speedTestService.checkSimulation()) {
+      _onSimulator = true;
+      notifyListeners();
+      return;
+    } else {
+      _onSimulator = false;
+    }
+    _isLoading = true;
+    await _speedTestService.fetchSignedUrls();
+    _isLoading = false;
+    _speedTestModel = _speedTestService.speedTestModel;
+    connectedToUCSDWifi();
+    resetSpeedTest();
+  }
+
+  void connectedToUCSDWifi() async {
+    isUCSDWiFi = _speedTestModel.isUCSDWifi;
+    notifyListeners();
+  }
+
+  void speedTest() async {
+    resetSpeedTest();
+    downloadSpeedTest().then((value) {
+      _timer.reset();
+      uploadSpeedTest().then((value) {
+        if (_percentUploaded == 1.0 && _percentDownloaded == 1.0) {
+          _speedTestDone = true;
+          notifyListeners();
+        }
+      });
+    });
+  }
+
+  Future uploadSpeedTest() async {
+    String path = (await getApplicationDocumentsDirectory()).path;
+    var tempDownload = File(path + "/temp.html").readAsBytesSync();
+
+    FormData formData = new FormData.fromMap(
+        {"file": MultipartFile.fromBytes(tempDownload, filename: "temp.html")});
+    notifyListeners();
+    try {
+      _cancelTokenUpload = new CancelToken();
+      _timer.start();
+      await dio.put(_speedTestModel.uploadUrl,
+          data: formData,
+          onSendProgress: _progressCallbackUpload,
+          cancelToken: _cancelTokenUpload);
+    } catch (e) {}
+    _timer.stop();
+    notifyListeners();
+  }
+
+  Future downloadSpeedTest() async {
+    String path = (await getApplicationDocumentsDirectory()).path;
+    //create file
+    File tempDownload = File(path + "/temp.html");
+    // _timer.start();
+    notifyListeners();
+    try {
+      _cancelTokenDownload = new CancelToken();
+      _timer.start();
+      await dio.download(_speedTestModel.downloadUrl, (tempDownload.path),
+          onReceiveProgress: _progressCallbackDownload,
+          cancelToken: _cancelTokenDownload);
+    } catch (e) {}
+    _timer.stop();
+    notifyListeners();
+  }
+
+  _progressCallbackDownload(int bytesDownloaded, int totalBytes) {
+    _secondsElapsedDownload = _timer.elapsed.inSeconds;
+    double speedInBytes = (bytesDownloaded / _timer.elapsed.inSeconds);
+    _speedDownload = _convertToMbps(speedInBytes);
+
+    _percentDownloaded = bytesDownloaded / totalBytes;
+
+    notifyListeners();
+  }
+
+  _progressCallbackUpload(int bytesDownloaded, int totalBytes) {
+    _secondsElapsedUpload = _timer.elapsed.inSeconds;
+    double speedInBytes = (bytesDownloaded / _timer.elapsed.inSeconds);
+    _speedUpload = _convertToMbps(speedInBytes);
+    _percentUploaded = bytesDownloaded / totalBytes;
+    notifyListeners();
+  }
+
+  double _convertToMbps(double speed) {
+    return speed / 125000;
+  }
+
+  void resetSpeedTest() {
+    _speedTestDone = false;
+    _secondsElapsedUpload = 0;
+    _secondsElapsedDownload = 0;
+    _timer.reset();
+    _percentDownloaded = 0.0;
+    _percentUploaded = 0.0;
+    _speedDownload = 0.00;
+    _speedUpload = 0.0;
+    notifyListeners();
+  }
+
+  void cancelDownload() {
+    try {
+      if (_timer.isRunning) {
+        _timer.stop();
+        _cancelTokenDownload.cancel("cancelled");
+      }
+    } catch (e) {}
+  }
+
+  void cancelUpload() {
+    try {
+      if (_timer.isRunning) {
+        _timer.stop();
+        _cancelTokenUpload.cancel("cancelled");
+      }
+    } catch (e) {}
+  }
+
+  Future<bool> sendNetworkDiagnostics(int lastSpeed) async {
+    bool sentSuccessfully = false;
+
+    wiFiLog = {
+      "Platform": _speedTestModel.platform,
+      "SSID": _speedTestModel.ssid,
+      "BSSID": _speedTestModel.bssid,
+      "IPAddress": _speedTestModel.ipAddress,
+      "MacAddress": _speedTestModel.macAddress,
+      "LinkSpeed": _speedTestModel.linkSpeed,
+      "SignalStrength": _speedTestModel.signalStrength,
+      "Frequency": _speedTestModel.frequency,
+      "NetworkID": _speedTestModel.networkID,
+      "IsHiddenSSID": _speedTestModel.isHiddenSSID,
+      "RouterIP": _speedTestModel.routerIP,
+      "Channel": _speedTestModel.channel,
+      "Latitude": _coordinates.lat,
+      "Longitude": _coordinates.lon,
+      "TimeStamp": _speedTestModel.timeStamp,
+      "DownloadSpeed": lastSpeed != null
+          ? lastSpeed.toStringAsPrecision(3)
+          : _speedDownload.toStringAsPrecision(3),
+      "UploadSpeed": _speedUpload.toStringAsPrecision(3),
+    };
+
+    sentSuccessfully = true;
+    sendLogs(wiFiLog);
+    return sentSuccessfully; //Due to failed submission or not connected to wifi
+  }
+
+  Future<void> sendLogs(Map log) async {
+    mobileLoggerApi =
+        "https://api-qa.ucsd.edu:8243/mobileapplogger/v1.1.0/log" +
+            "?type=WIFI";
+    offloadDataHeader = {
+      'Authorization':
+          'Bearer ${_userDataProvider?.authenticationModel?.accessToken}'
+    };
+    if (_userDataProvider.isLoggedIn) {
+      if (offloadDataHeader == null) {
+        offloadDataHeader = {
+          'Authorization':
+              'Bearer ${_userDataProvider?.authenticationModel?.accessToken}'
+        };
+      }
+      // Send to offload API
+      try {
+        var response = _networkHelper
+            .authorizedPost(
+                mobileLoggerApi, offloadDataHeader, json.encode(log.toString()))
+            .then((value) {
+          return value;
+        });
+      } catch (Exception) {
+        if (Exception.toString().contains(ErrorConstants.invalidBearerToken)) {
+          _userDataProvider.silentLogin();
+          offloadDataHeader = {
+            'Authorization':
+                'Bearer ${_userDataProvider?.authenticationModel?.accessToken}'
+          };
+          _networkHelper.authorizedPost(
+              mobileLoggerApi, offloadDataHeader, json.encode(log.toString()));
+        }
+      }
+    } else {
+      try {
+        getNewToken().then((value) {
+          _networkHelper.authorizedPost(
+              mobileLoggerApi, headers, json.encode(log.toString()));
+        });
+      } catch (Exception) {
+        getNewToken().then((value) {
+          _networkHelper.authorizedPost(
+              mobileLoggerApi, headers, json.encode(log.toString()));
+        });
+      }
+    }
+  }
+
+  Future<void> reportIssue() async {
+    mobileLoggerApi =
+        "https://api-qa.ucsd.edu:8243/mobileapplogger/v1.1.0/log" +
+            "?type=WIFIREPORT";
+
+    offloadDataHeader = {
+      'Authorization':
+          'Bearer ${_userDataProvider?.authenticationModel?.accessToken}'
+    };
+    wiFiLog = {
+      "userId": (_userDataProvider.userProfileModel.pid) == null
+          ? ""
+          : _userDataProvider.userProfileModel.pid,
+      "userEmail": (_userDataProvider.userProfileModel.username) == null
+          ? ""
+          : _userDataProvider.userProfileModel.username + "@ucsd.edu",
+      "Platform": _speedTestModel.platform,
+      "SSID": _speedTestModel.ssid,
+      "BSSID": _speedTestModel.bssid,
+      "IPAddress": _speedTestModel.ipAddress,
+      "MacAddress": _speedTestModel.macAddress,
+      "LinkSpeed": _speedTestModel.linkSpeed,
+      "SignalStrength": _speedTestModel.signalStrength,
+      "Frequency": _speedTestModel.frequency,
+      "NetworkID": _speedTestModel.networkID,
+      "IsHiddenSSID": _speedTestModel.isHiddenSSID,
+      "RouterIP": _speedTestModel.routerIP,
+      "Channel": _speedTestModel.channel,
+      "Latitude": _coordinates.lat,
+      "Longitude": _coordinates.lon,
+      "TimeStamp": _speedTestModel.timeStamp,
+      "DownloadSpeed": wiFiLog['DownloadSpeed'],
+      "UploadSpeed": _speedUpload.toStringAsPrecision(3),
+    };
+    if (_userDataProvider.isLoggedIn) {
+      if (offloadDataHeader == null) {
+        offloadDataHeader = {
+          'Authorization':
+              'Bearer ${_userDataProvider?.authenticationModel?.accessToken}'
+        };
+      }
+      // Send to offload API
+      try {
+        _networkHelper.authorizedPost(
+            mobileLoggerApi, offloadDataHeader, json.encode(wiFiLog));
+      } catch (Exception) {
+        if (Exception.toString().contains(ErrorConstants.invalidBearerToken)) {
+          _userDataProvider.silentLogin();
+          offloadDataHeader = {
+            'Authorization':
+                'Bearer ${_userDataProvider?.authenticationModel?.accessToken}'
+          };
+          _networkHelper.authorizedPost(mobileLoggerApi, offloadDataHeader,
+              json.encode(wiFiLog.toString()));
+        }
+      }
+    } else {
+      try {
+        getNewToken().then((value) {
+          _networkHelper.authorizedPost(
+              mobileLoggerApi, headers, json.encode(wiFiLog.toString()));
+        });
+      } catch (Exception) {
+        getNewToken().then((value) {
+          var response = _networkHelper.authorizedPost(
+              mobileLoggerApi, headers, json.encode(wiFiLog.toString()));
+        });
+      }
+    }
+  }
+
+  Future<bool> getNewToken() async {
+    final String tokenEndpoint = "https://api-qa.ucsd.edu:8243/token";
+    final Map<String, String> tokenHeaders = {
+      "content-type": 'application/x-www-form-urlencoded',
+      "Authorization":
+          "Basic djJlNEpYa0NJUHZ5akFWT0VRXzRqZmZUdDkwYTp2emNBZGFzZWpmaWZiUDc2VUJjNDNNVDExclVh"
+    };
+    try {
+      return _networkHelper
+          .authorizedPost(
+              tokenEndpoint, tokenHeaders, "grant_type=client_credentials")
+          .then((response) {
+        headers["Authorization"] = "Bearer " + response["access_token"];
+        return true;
+      });
+    } catch (e) {
+      return false;
+    }
+  }
+
+  bool get isLoading => _isLoading;
+  String get error => _error;
+  double get speed => _speedDownload;
+  set speed(double lastSpeed) => _speedDownload = lastSpeed;
+  double get uploadSpeed => _speedUpload;
+  Stopwatch get timer => _timer;
+  double get percentDownloaded => _percentDownloaded;
+  double get percentUploaded => _percentUploaded;
+  bool get speedTestDone => _speedTestDone;
+  int get timeElapsedDownload => _secondsElapsedDownload;
+  int get timeElapsedUpload => _secondsElapsedUpload;
+  bool get isUCSDNetwork => isUCSDWiFi;
+  bool get onSimulator => _onSimulator;
+}
diff --git a/lib/core/providers/user.dart b/lib/core/providers/user.dart
index f2b447160..e233e9003 100644
--- a/lib/core/providers/user.dart
+++ b/lib/core/providers/user.dart
@@ -3,7 +3,6 @@ import 'dart:typed_data';
 
 import 'package:campus_mobile_experimental/core/models/authentication.dart';
 import 'package:campus_mobile_experimental/core/models/user_profile.dart';
-import 'package:campus_mobile_experimental/core/providers/availability.dart';
 import 'package:campus_mobile_experimental/core/providers/cards.dart';
 import 'package:campus_mobile_experimental/core/providers/notifications.dart';
 import 'package:campus_mobile_experimental/core/services/authentication.dart';
@@ -47,7 +46,6 @@ class UserDataProvider extends ChangeNotifier {
   UserProfileService _userProfileService;
   PushNotificationDataProvider _pushNotificationDataProvider;
   CardsDataProvider _cardsDataProvider;
-  AvailabilityDataProvider _availabilityDataProvider;
 
   /// Update the [AuthenticationModel] stored in state
   /// overwrite the [AuthenticationModel] in persistent storage with the model passed in
@@ -88,8 +86,6 @@ class UserDataProvider extends ChangeNotifier {
     var authBox =
         await Hive.openBox<AuthenticationModel>('AuthenticationModel');
 
-    int boxLength = authBox.length;
-
     AuthenticationModel temp = AuthenticationModel.fromJson({});
     //check to see if we have added the authentication model into the box already
     if (authBox.get('AuthenticationModel') == null) {
@@ -184,10 +180,9 @@ class UserDataProvider extends ChangeNotifier {
       _encryptAndSaveCredentials(username, password);
 
       if (await silentLogin()) {
-        if(_userProfileModel.classifications.student) {
+        if (_userProfileModel.classifications.student) {
           _cardsDataProvider.showAllStudentCards();
-        }
-        else if(_userProfileModel.classifications.staff) {
+        } else if (_userProfileModel.classifications.staff) {
           _cardsDataProvider.showAllStaffCards();
         }
         _isLoading = false;
@@ -223,14 +218,14 @@ class UserDataProvider extends ChangeNotifier {
           base64.encode(utf8.encode(username + ':' + encryptedPassword));
 
       if (await _authenticationService
-          .login(base64EncodedWithEncryptedPassword)) {
+          .silentLogin(base64EncodedWithEncryptedPassword)) {
         print('UserDataProvider:silentLogin:SUCCESS');
         await updateAuthenticationModel(_authenticationService.data);
 
         await fetchUserProfile();
 
         CardsDataProvider _cardsDataProvider = CardsDataProvider();
-        print(_cardsDataProvider.cardOrder.toString());        // _cardsDataProvider
+        print(_cardsDataProvider.cardOrder.toString()); // _cardsDataProvider
         //     .updateAvailableCards(_userProfileModel.ucsdaffiliation);
 
         _subscribeToPushNotificationTopics(userProfileModel.subscribedTopics);
@@ -466,7 +461,6 @@ class UserDataProvider extends ChangeNotifier {
 
   CardsDataProvider get cardsDataProvider => _cardsDataProvider;
 
-
   ///GETTERS FOR STATES
   String get error => _error;
 
@@ -479,5 +473,4 @@ class UserDataProvider extends ChangeNotifier {
   bool get isInSilentLogin => _isInSilentLogin;
 
   set cardsDataProvider(CardsDataProvider value) => _cardsDataProvider = value;
-
 }
diff --git a/lib/core/providers/wayfinding.dart b/lib/core/providers/wayfinding.dart
index cc0a9e5d4..8e5f06ab4 100644
--- a/lib/core/providers/wayfinding.dart
+++ b/lib/core/providers/wayfinding.dart
@@ -10,7 +10,6 @@ import 'package:background_fetch/background_fetch.dart';
 import 'package:campus_mobile_experimental/app_constants.dart';
 import 'package:campus_mobile_experimental/app_networking.dart';
 import 'package:campus_mobile_experimental/core/providers/user.dart';
-import 'package:dio/dio.dart';
 import 'package:flutter/material.dart';
 import 'package:flutter_blue/flutter_blue.dart';
 import 'package:flutter_secure_storage/flutter_secure_storage.dart';
@@ -68,7 +67,7 @@ class AdvancedWayfindingSingleton extends ChangeNotifier {
   String bluetoothCharacteristicsEndpoint =
       "https://api-qa.ucsd.edu:8243/bluetoothdevicecharacteristic/v1.0.0/servicenames/1";
   String offloadLoggerEndpoint =
-      "https://api-qa.ucsd.edu:8243/mobileapplogger/v1.0.0/log";
+      "https://api-qa.ucsd.edu:8243/mobileapplogger/v1.1.0/log?type=WAYFINDING";
 
   //Thresholds for logging location
   int qualifiedDevicesThreshold = 0;
@@ -313,7 +312,7 @@ class AdvancedWayfindingSingleton extends ChangeNotifier {
   /// Sends BT LE logs to API
   ///
   /// Will attach access token if logged in
-  void sendLogs(Map log) {
+  Future<void> sendLogs(Map log) async {
     // Attach token from user if logged in
     if (userDataProvider.isLoggedIn) {
       if (offloadDataHeader == null) {
@@ -344,6 +343,7 @@ class AdvancedWayfindingSingleton extends ChangeNotifier {
     } else {
       // Send logs to API for visitors
       try {
+        getNewToken();
         _networkHelper.authorizedPost(
             offloadLoggerEndpoint, headers, json.encode(log));
       } catch (Exception) {
@@ -726,7 +726,7 @@ class AdvancedWayfindingSingleton extends ChangeNotifier {
     return String.fromCharCodes(codeUnits);
   }
 
-  // Start a background scan
+  // Start Background Scanning
   void _onBackgroundFetch(String taskID) async {
     String lastTimeStamp = await _storage.read(key: "lastBackgroundScan");
 
@@ -767,6 +767,7 @@ class AdvancedWayfindingSingleton extends ChangeNotifier {
           key: _randomValue(), value: '[BackgroundFetch] configure ERROR: $e');
     });
   }
+  // End Background Scanning
 
   //Parse advertisement data
   String calculateHexFromArray(decimalArray) {
diff --git a/lib/core/services/authentication.dart b/lib/core/services/authentication.dart
index 054a371ed..9ca310fec 100644
--- a/lib/core/services/authentication.dart
+++ b/lib/core/services/authentication.dart
@@ -12,22 +12,53 @@ class AuthenticationService {
 
   final NetworkHelper _networkHelper = NetworkHelper();
 
-  final String AUTH_SERVICE_API_URL =
+  final String authServiceApiUrl =
       "https://3hepzvdimd.execute-api.us-west-2.amazonaws.com/qa/v2/access-profile";
-  final String AUTH_SERVICE_API_KEY =
-      'eKFql1kJAj53iyU2fNKyH4jI2b7t70MZ5YbAuPBZ';
+  final String authServiceApiKey = 'eKFql1kJAj53iyU2fNKyH4jI2b7t70MZ5YbAuPBZ';
+
+  Future<bool> silentLogin(String base64EncodedWithEncryptedPassword) async {
+    _error = null;
+    try {
+      final Map<String, String> authServiceHeaders = {
+        'x-api-key': authServiceApiKey,
+        'Authorization': base64EncodedWithEncryptedPassword,
+      };
+
+      /// fetch data
+      /// MODIFIED TO USE EXPONENTIAL RETRY
+      var response = await _networkHelper.authorizedPublicPost(
+          authServiceApiUrl, authServiceHeaders, null);
+
+      /// check to see if response has an error
+      if (response['errorMessage'] != null) {
+        throw (response['errorMessage']);
+      }
+
+      /// parse data
+      final authenticationModel = AuthenticationModel.fromJson(response);
+      _data = authenticationModel;
+      _lastUpdated = DateTime.now();
+      return true;
+    } catch (e) {
+      ///TODO: handle errors thrown by the network class for different types of error responses
+      _error = e.toString();
+      print("authentication error:" + _error);
+      return false;
+    }
+  }
 
   Future<bool> login(String base64EncodedWithEncryptedPassword) async {
     _error = null;
     try {
       final Map<String, String> authServiceHeaders = {
-        'x-api-key': AUTH_SERVICE_API_KEY,
+        'x-api-key': authServiceApiKey,
         'Authorization': base64EncodedWithEncryptedPassword,
       };
 
       /// fetch data
+      /// MODIFIED TO USE EXPONENTIAL RETRY
       var response = await _networkHelper.authorizedPost(
-          AUTH_SERVICE_API_URL, authServiceHeaders, null);
+          authServiceApiUrl, authServiceHeaders, null);
 
       /// check to see if response has an error
       if (response['errorMessage'] != null) {
diff --git a/lib/core/services/availability.dart b/lib/core/services/availability.dart
index b34ae8865..f3e812e28 100644
--- a/lib/core/services/availability.dart
+++ b/lib/core/services/availability.dart
@@ -2,7 +2,7 @@ import 'package:campus_mobile_experimental/app_networking.dart';
 import 'package:campus_mobile_experimental/core/models/availability.dart';
 
 class AvailabilityService {
-  AvailabilityService() {}
+  AvailabilityService();
   bool _isLoading = false;
   DateTime _lastUpdated;
   String _error;
diff --git a/lib/core/services/cards.dart b/lib/core/services/cards.dart
index 98e618420..09312068e 100644
--- a/lib/core/services/cards.dart
+++ b/lib/core/services/cards.dart
@@ -20,7 +20,8 @@ class CardsService {
     /// API Manager Service
     try {
       String cardListEndpoint =
-          "https://api-qa.ucsd.edu:8243/defaultcards/v5.0.0/defaultcards?ucsdaffiliation=${ucsdAffiliation}";
+          "https://api-qa.ucsd.edu:8243/defaultcards/v6.0.0/defaultcards?ucsdaffiliation=" +
+              ucsdAffiliation;
       String _response =
           await _networkHelper.authorizedFetch(cardListEndpoint, headers);
       _cardsModel = cardsModelFromJson(_response);
diff --git a/lib/core/services/classes.dart b/lib/core/services/classes.dart
index ba53e8309..e211cc30b 100644
--- a/lib/core/services/classes.dart
+++ b/lib/core/services/classes.dart
@@ -10,8 +10,8 @@ class ClassScheduleService {
   bool _isLoading = false;
   DateTime _lastUpdated;
   String _error;
-  ClassScheduleModel _UNdata = ClassScheduleModel();
-  ClassScheduleModel _GRdata = ClassScheduleModel();
+  ClassScheduleModel _unData = ClassScheduleModel();
+  ClassScheduleModel _grData = ClassScheduleModel();
   AcademicTermModel _academicTermModel;
 
   final NetworkHelper _networkHelper = NetworkHelper();
@@ -26,7 +26,7 @@ class ClassScheduleService {
           headers);
 
       /// parse data
-      _UNdata = classScheduleModelFromJson(_response);
+      _unData = classScheduleModelFromJson(_response);
       _isLoading = false;
       return true;
     } catch (e) {
@@ -46,7 +46,7 @@ class ClassScheduleService {
           headers);
 
       /// parse data
-      _GRdata = classScheduleModelFromJson(_response);
+      _grData = classScheduleModelFromJson(_response);
       _isLoading = false;
       return true;
     } catch (e) {
@@ -71,8 +71,8 @@ class ClassScheduleService {
   }
 
   String get error => _error;
-  ClassScheduleModel get UNdata => _UNdata;
-  ClassScheduleModel get GRdata => _GRdata;
+  ClassScheduleModel get unData => _unData;
+  ClassScheduleModel get grData => _grData;
   AcademicTermModel get academicTermModel => _academicTermModel;
   bool get isLoading => _isLoading;
   DateTime get lastUpdated => _lastUpdated;
diff --git a/lib/core/services/map.dart b/lib/core/services/map.dart
index 4a153b5de..91b15df4c 100644
--- a/lib/core/services/map.dart
+++ b/lib/core/services/map.dart
@@ -7,7 +7,7 @@ class MapSearchService {
   bool _isLoading = false;
   DateTime _lastUpdated;
   String _error;
-  List<MapSearchModel> _results = List<MapSearchModel>();
+  List<MapSearchModel> _results = [];
   final NetworkHelper _networkHelper = NetworkHelper();
   final String baseEndpoint =
       "https://vkil1id5r5.execute-api.us-west-2.amazonaws.com/dev/map/search";
@@ -24,7 +24,7 @@ class MapSearchService {
         final data = mapSearchModelFromJson(_response);
         _results = data;
       } else {
-        _results = List<MapSearchModel>();
+        _results = [];
         _isLoading = false;
         return false;
       }
diff --git a/lib/core/services/messages.dart b/lib/core/services/messages.dart
index 62fd717cb..5a9005ca3 100644
--- a/lib/core/services/messages.dart
+++ b/lib/core/services/messages.dart
@@ -4,9 +4,9 @@ import 'package:campus_mobile_experimental/app_networking.dart';
 import 'package:campus_mobile_experimental/core/models/notifications.dart';
 
 class MessageService {
-  final String mymessages_endpoint =
+  final String myMessagesApiUrl =
       'https://api-qa.ucsd.edu:8243/mp-mymessages/1.0.0/messages?start=';
-  final String topics_endpoint =
+  final String topicsApiUrl =
       'https://bvgjvzaakl.execute-api.us-west-2.amazonaws.com/dev/topics?';
 
   bool _isLoading = false;
@@ -24,7 +24,7 @@ class MessageService {
     try {
       /// fetch data
       String _response = await _networkHelper.authorizedFetch(
-          mymessages_endpoint + timestamp.toString(), authHeaders);
+          myMessagesApiUrl + timestamp.toString(), authHeaders);
 
       /// parse data
       final data = messagesFromJson(_response);
@@ -48,7 +48,7 @@ class MessageService {
     try {
       /// fetch data
       String _response = await _networkHelper
-          .fetchData(topics_endpoint + topicsEndpoint + timestampEndpoint);
+          .fetchData(topicsApiUrl + topicsEndpoint + timestampEndpoint);
 
       /// parse data
       final data = messagesFromJson(_response);
diff --git a/lib/core/services/notices.dart b/lib/core/services/notices.dart
index f2dc17b1b..55157706a 100644
--- a/lib/core/services/notices.dart
+++ b/lib/core/services/notices.dart
@@ -12,7 +12,7 @@ class NoticesService {
   final String endpoint =
       'https://mobile.ucsd.edu/replatform/v1/qa/notices-v2.json';
 
-  List<NoticesModel> _noticesModel = List<NoticesModel>();
+  List<NoticesModel> _noticesModel = [];
 
   Future<bool> fetchData() async {
     _error = null;
diff --git a/lib/core/services/notifications_freefood.dart b/lib/core/services/notifications_freefood.dart
index eee2b8cd7..2b021a500 100644
--- a/lib/core/services/notifications_freefood.dart
+++ b/lib/core/services/notifications_freefood.dart
@@ -2,7 +2,7 @@ import 'package:campus_mobile_experimental/app_networking.dart';
 import 'package:campus_mobile_experimental/core/models/notifications_freefood.dart';
 
 class FreeFoodService {
-  final String base_endpoint =
+  final String baseEndpoint =
       'https://api-qa.ucsd.edu:8243/campusevents/1.0.0/';
 
   bool _isLoading = false;
@@ -21,11 +21,9 @@ class FreeFoodService {
     _error = null;
     _isLoading = true;
     try {
-      String _url = base_endpoint + 'events/' + id + '/rsvpCount';
-
       /// fetch data
       var _response = await _networkHelper.authorizedFetch(
-          base_endpoint + 'events/' + id + '/rsvpCount', headers);
+          baseEndpoint + 'events/' + id + '/rsvpCount', headers);
 
       /// parse data
       final data = freeFoodModelFromJson(_response);
@@ -52,7 +50,7 @@ class FreeFoodService {
     _error = null;
     _isLoading = true;
     try {
-      String _url = base_endpoint + 'events/' + id + '/rsvpLimit';
+      String _url = baseEndpoint + 'events/' + id + '/rsvpLimit';
 
       /// fetch data
       var _response = await _networkHelper.authorizedFetch(_url, headers);
@@ -81,7 +79,7 @@ class FreeFoodService {
     _isLoading = true;
 
     try {
-      String _url = base_endpoint + 'events/' + id;
+      String _url = baseEndpoint + 'events/' + id;
 
       /// update count
       var _response = await _networkHelper.authorizedPut(_url, headers, body);
diff --git a/lib/core/services/parking.dart b/lib/core/services/parking.dart
index 67577d2a8..178451fce 100644
--- a/lib/core/services/parking.dart
+++ b/lib/core/services/parking.dart
@@ -15,7 +15,7 @@ class ParkingService {
   };
 
   final String endpoint =
-      "https://mobile.ucsd.edu/replatform/v1/qa/webview/parking-v2/parking_lots.json";
+      "https://mobile.ucsd.edu/replatform/v1/qa/webview/parking-v3/parking_lots.json";
 
   Future<bool> fetchParkingLotData() async {
     _error = null;
diff --git a/lib/core/services/shuttle.dart b/lib/core/services/shuttle.dart
index b48584819..85b67db88 100644
--- a/lib/core/services/shuttle.dart
+++ b/lib/core/services/shuttle.dart
@@ -7,7 +7,7 @@ class ShuttleService {
   bool _isLoading = false;
   DateTime _lastUpdated;
   String _error;
-  List<ShuttleStopModel> _data = List<ShuttleStopModel>();
+  List<ShuttleStopModel> _data = [];
 
   /// add state related things for view model here
   /// add any type of data manipulation here so it can be accessed via provider
diff --git a/lib/core/services/speed_test.dart b/lib/core/services/speed_test.dart
new file mode 100644
index 000000000..b4f4e8875
--- /dev/null
+++ b/lib/core/services/speed_test.dart
@@ -0,0 +1,122 @@
+import 'dart:io';
+
+import 'package:campus_mobile_experimental/app_networking.dart';
+import 'package:campus_mobile_experimental/core/models/speed_test.dart';
+import 'package:connectivity/connectivity.dart';
+import 'package:device_info/device_info.dart';
+import 'package:wifi_connection/WifiConnection.dart';
+import 'package:wifi_connection/WifiInfo.dart';
+
+class SpeedTestService {
+  DeviceInfoPlugin deviceInfo = DeviceInfoPlugin();
+
+  SpeedTestService();
+  Future<bool> checkSimulation() async {
+    try {
+      if (Platform.isAndroid) {
+        AndroidDeviceInfo androidInfo = await deviceInfo.androidInfo;
+        if (!androidInfo.isPhysicalDevice) {
+          return true;
+        }
+      } else if (Platform.isIOS) {
+        IosDeviceInfo iosInfo = await deviceInfo.iosInfo;
+        if (!iosInfo.isPhysicalDevice) {
+          return true;
+        }
+      }
+    } catch (exception) {
+      print(exception.toString());
+    }
+    return false;
+  }
+
+  Connectivity _connectivity = Connectivity();
+  final NetworkHelper _networkHelper = NetworkHelper();
+
+  SpeedTestModel _speedTestModel;
+  bool _isLoading = false;
+  String _error;
+  final Map<String, String> header = {
+    "accept": "application/json",
+  };
+
+  Future<bool> fetchSignedUrls() async {
+    _error = null;
+    _isLoading = true;
+    try {
+      await getNewToken();
+      // Get download & upload urls
+      String _downloadResponse = await _networkHelper.authorizedFetch(
+          "https://api-qa.ucsd.edu:8243/wifi_test/v1.0.0/generateDownloadUrl",
+          header);
+      String _uploadResponse = await _networkHelper.authorizedFetch(
+          "https://api-qa.ucsd.edu:8243/wifi_test/v1.0.0/generateUploadUrl?name=temp.html",
+          header);
+
+      /// parse data
+      await fetchNetworkDiagnostics().then((WifiInfo data) {
+        _speedTestModel = speedTestModelFromJson(
+            data, _downloadResponse, _uploadResponse, data != null);
+      });
+      _isLoading = false;
+      return true;
+    } catch (exception) {
+      // Occurs when there is no connection
+      _speedTestModel = SpeedTestModel.fromJson(null, null, null, false);
+      _error = exception.toString();
+      _isLoading = false;
+      return false;
+    }
+  }
+
+  Future<WifiInfo> fetchNetworkDiagnostics() async {
+    // Check connected to wifi
+    if (await _connectivity.checkConnectivity() != ConnectivityResult.wifi) {
+      return null;
+    }
+    bool isUCSDWIFI;
+    // Check for UCSD wifi
+    WifiInfo wiFiInfo = await WifiConnection.wifiInfo.then((value) {
+      if ((!value.ssid.contains("UCSD-PROTECTED")) &&
+          (!value.ssid.contains("UCSD-GUEST")) &&
+          (!value.ssid.contains("ResNet"))) {
+        isUCSDWIFI = false;
+        return null;
+      }
+      isUCSDWIFI = true;
+      return value;
+    });
+
+    if (!isUCSDWIFI) {
+      return null;
+    }
+
+    return wiFiInfo;
+  }
+
+  bool get isLoading => _isLoading;
+
+  String get error => _error;
+
+  SpeedTestModel get speedTestModel => _speedTestModel;
+
+  Future<bool> getNewToken() async {
+    final String tokenEndpoint = "https://api-qa.ucsd.edu:8243/token";
+    final Map<String, String> tokenHeaders = {
+      "content-type": 'application/x-www-form-urlencoded',
+      "Authorization":
+          "Basic djJlNEpYa0NJUHZ5akFWT0VRXzRqZmZUdDkwYTp2emNBZGFzZWpmaWZiUDc2VUJjNDNNVDExclVh"
+    };
+    try {
+      var response = await _networkHelper.authorizedPost(
+          tokenEndpoint, tokenHeaders, "grant_type=client_credentials");
+
+      header["Authorization"] = "Bearer " + response["access_token"];
+
+      return true;
+    } catch (e) {
+      _error = e.toString();
+      return false;
+    }
+  }
+}
diff --git a/lib/core/services/spot_types.dart b/lib/core/services/spot_types.dart
index 1b38e2841..c1009a66e 100644
--- a/lib/core/services/spot_types.dart
+++ b/lib/core/services/spot_types.dart
@@ -16,7 +16,7 @@ class SpotTypesService {
   SpotTypeModel _spotTypeModel = SpotTypeModel();
 
   final String endpoint =
-      "https://mobile.ucsd.edu/replatform/v1/qa/webview/parking-v2/spot_types.json";
+      "https://mobile.ucsd.edu/replatform/v1/qa/webview/parking-v3/spot_types.json";
   Future<bool> fetchSpotTypesData() async {
     _error = null;
     _isLoading = true;
diff --git a/lib/core/services/student_id.dart b/lib/core/services/student_id.dart
index 74c5217a9..44cbe2449 100644
--- a/lib/core/services/student_id.dart
+++ b/lib/core/services/student_id.dart
@@ -5,9 +5,9 @@ import 'package:campus_mobile_experimental/core/models/student_id_photo.dart';
 import 'package:campus_mobile_experimental/core/models/student_id_profile.dart';
 
 class StudentIdService {
-  final String MY_STUDENT_PROFILE_API_URL =
+  final String myStudentProfileApiUrl =
       'https://api-qa.ucsd.edu:8243/student/my/v1';
-  final String MY_STUDENT_CONTACT_API_URL =
+  final String myStudentContactApiUrl =
       'https://api-qa.ucsd.edu:8243/student/my/student_contact_info/v1';
 
   bool _isLoading = false;
@@ -27,7 +27,7 @@ class StudentIdService {
     try {
       /// fetch data
       String _response = await _networkHelper.authorizedFetch(
-          MY_STUDENT_CONTACT_API_URL + '/barcode', headers);
+          myStudentContactApiUrl + '/barcode', headers);
 
       /// parse data
       _studentIdBarcodeModel = studentIdBarcodeModelFromJson(_response);
@@ -47,7 +47,7 @@ class StudentIdService {
     try {
       /// fetch data
       String _response = await _networkHelper.authorizedFetch(
-          MY_STUDENT_CONTACT_API_URL + '/display_name', headers);
+          myStudentContactApiUrl + '/display_name', headers);
 
       /// parse data
       _studentIdNameModel = studentIdNameModelFromJson(_response);
@@ -67,7 +67,7 @@ class StudentIdService {
     try {
       /// fetch data
       String _response = await _networkHelper.authorizedFetch(
-          MY_STUDENT_CONTACT_API_URL + '/photo', headers);
+          myStudentContactApiUrl + '/photo', headers);
 
       /// parse data
       _studentIdPhotoModel = studentIdPhotoModelFromJson(_response);
@@ -87,7 +87,7 @@ class StudentIdService {
     try {
       /// fetch data
       String _response = await _networkHelper.authorizedFetch(
-          MY_STUDENT_PROFILE_API_URL + '/profile', headers);
+          myStudentProfileApiUrl + '/profile', headers);
 
       _studentIdProfileModel = studentIdProfileModelFromJson(_response);
       _isLoading = false;
diff --git a/lib/core/services/user.dart b/lib/core/services/user.dart
index 548c041b8..b3a3583f4 100644
--- a/lib/core/services/user.dart
+++ b/lib/core/services/user.dart
@@ -49,8 +49,7 @@ class UserProfileService {
   ///if attribute does not exists in db then it will be created
   List<Map<String, dynamic>> createAttributeValueJson(
       Map<String, dynamic> json) {
-    List<Map<String, dynamic>> correctlyFormattedData =
-        List<Map<String, dynamic>>();
+    List<Map<String, dynamic>> correctlyFormattedData = [];
     json.forEach((key, value) {
       correctlyFormattedData.add({"attribute": key, "value": value});
     });
diff --git a/lib/core/wrappers/push_notifications.dart b/lib/core/wrappers/push_notifications.dart
index e92f8efbc..4516c02df 100644
--- a/lib/core/wrappers/push_notifications.dart
+++ b/lib/core/wrappers/push_notifications.dart
@@ -3,7 +3,7 @@ import 'package:flutter/material.dart';
 import 'package:provider/provider.dart';
 
 class PushNotificationWrapper extends StatefulWidget {
-  PushNotificationWrapper({Widget this.child});
+  PushNotificationWrapper({this.child});
   final Widget child;
 
   @override
diff --git a/lib/main.dart b/lib/main.dart
index 228e4f681..f302dab4d 100644
--- a/lib/main.dart
+++ b/lib/main.dart
@@ -1,5 +1,3 @@
-import 'dart:async';
-
 import 'package:campus_mobile_experimental/app_constants.dart';
 import 'package:campus_mobile_experimental/app_provider.dart';
 import 'package:campus_mobile_experimental/app_router.dart'
@@ -7,17 +5,15 @@ import 'package:campus_mobile_experimental/app_router.dart'
 import 'package:campus_mobile_experimental/app_styles.dart';
 import 'package:campus_mobile_experimental/core/models/authentication.dart';
 import 'package:campus_mobile_experimental/core/models/user_profile.dart';
-import 'package:campus_mobile_experimental/core/providers/bottom_nav.dart';
-import 'package:campus_mobile_experimental/core/providers/map.dart';
 import 'package:firebase_core/firebase_core.dart';
 import 'package:firebase_crashlytics/firebase_crashlytics.dart';
 import 'package:flutter/material.dart';
 import 'package:flutter_secure_storage/flutter_secure_storage.dart';
+import 'package:get/get.dart';
 import 'package:hive/hive.dart';
 import 'package:hive_flutter/hive_flutter.dart';
 import 'package:provider/provider.dart';
 import 'package:shared_preferences/shared_preferences.dart';
-import 'package:uni_links/uni_links.dart';
 
 bool showOnboardingScreen;
 
@@ -68,37 +64,11 @@ clearHiveStorage() async {
 }
 
 class CampusMobile extends StatelessWidget {
-  StreamSubscription _sub;
-
-  Future<Null> initUniLinks(BuildContext context) async {
-    // deep links are received by this method
-    // the specific host needs to be added in AndroidManifest.xml and Info.plist
-    // currently, this method handles executing custom map query
-    _sub = getLinksStream().listen((String link) async {
-      // handling for map query
-      String initialLink = await getInitialLink();
-      if (initialLink != null) {
-        if (initialLink.contains("deeplinking.searchmap")) {
-          var uri = Uri.dataFromString(initialLink);
-          var query = uri.queryParameters['query'];
-          // redirect query to maps tab and search with query
-          Provider.of<MapsDataProvider>(context, listen: false)
-              .searchBarController
-              .text = query;
-          Provider.of<MapsDataProvider>(context, listen: false)
-              .fetchLocations();
-          Provider.of<BottomNavigationBarProvider>(context, listen: false)
-              .currentIndex = NavigatorConstants.MapTab;
-        }
-      }
-    });
-  }
-
   @override
   Widget build(BuildContext context) {
     return MultiProvider(
       providers: providers,
-      child: MaterialApp(
+      child: GetMaterialApp(
         debugShowCheckedModeBanner: true,
         title: 'UC San Diego',
         theme: ThemeData(
diff --git a/lib/ui/availability/availability_card.dart b/lib/ui/availability/availability_card.dart
index baea56065..a8f86f8fa 100644
--- a/lib/ui/availability/availability_card.dart
+++ b/lib/ui/availability/availability_card.dart
@@ -1,5 +1,4 @@
 import 'package:campus_mobile_experimental/app_constants.dart';
-import 'package:campus_mobile_experimental/app_router.dart';
 import 'package:campus_mobile_experimental/core/models/availability.dart';
 import 'package:campus_mobile_experimental/core/providers/availability.dart';
 import 'package:campus_mobile_experimental/core/providers/cards.dart';
@@ -43,7 +42,7 @@ class _AvailabilityCardState extends State<AvailabilityCard> {
   }
 
   Widget buildAvailabilityCard(List<AvailabilityModel> data) {
-    List<Widget> locationsList = List<Widget>();
+    List<Widget> locationsList = [];
     for (AvailabilityModel model in data) {
       if (model != null) {
         if (_availabilityDataProvider.locationViewState[model.locationName]) {
@@ -75,8 +74,11 @@ class _AvailabilityCardState extends State<AvailabilityCard> {
   }
 
   List<Widget> buildActionButtons() {
-    List<Widget> actionButtons = List<Widget>();
-    actionButtons.add(FlatButton(
+    List<Widget> actionButtons = [];
+    actionButtons.add(TextButton(
+      style: TextButton.styleFrom(
+        primary: Theme.of(context).buttonColor,
+      ),
       child: Text(
         'Manage Locations',
       ),
diff --git a/lib/ui/availability/availability_display.dart b/lib/ui/availability/availability_display.dart
index 04e64343f..59054c50e 100644
--- a/lib/ui/availability/availability_display.dart
+++ b/lib/ui/availability/availability_display.dart
@@ -48,7 +48,7 @@ class AvailabilityDisplay extends StatelessWidget {
   }
 
   Widget buildAvailabilityBars(BuildContext context) {
-    List<Widget> locations = List<Widget>();
+    List<Widget> locations = [];
 
     if (model.subLocations.isNotEmpty) {
       for (AvailabilityModel subLocation in model.subLocations) {
diff --git a/lib/ui/availability/manage_availability_view.dart b/lib/ui/availability/manage_availability_view.dart
index 85e658811..acd72302d 100644
--- a/lib/ui/availability/manage_availability_view.dart
+++ b/lib/ui/availability/manage_availability_view.dart
@@ -28,7 +28,7 @@ class ManageAvailabilityView extends StatelessWidget {
     }
     List<AvailabilityModel> newOrder =
         _availabilityDataProvider.availabilityModels;
-    List<AvailabilityModel> toRemove = List<AvailabilityModel>();
+    List<AvailabilityModel> toRemove = [];
 
     for (AvailabilityModel item in newOrder) {
       if (_availabilityDataProvider.availabilityModels == null) {
@@ -38,7 +38,7 @@ class ManageAvailabilityView extends StatelessWidget {
     newOrder.removeWhere((element) => toRemove.contains(element));
     AvailabilityModel item = newOrder.removeAt(oldIndex);
     newOrder.insert(newIndex, item);
-    List<String> orderedLocationNames = List<String>();
+    List<String> orderedLocationNames = [];
     for (AvailabilityModel item in newOrder) {
       orderedLocationNames.add(item.locationName);
     }
@@ -46,7 +46,7 @@ class ManageAvailabilityView extends StatelessWidget {
   }
 
   List<Widget> createList(BuildContext context) {
-    List<Widget> list = List<Widget>();
+    List<Widget> list = [];
     for (AvailabilityModel model
         in _availabilityDataProvider.availabilityModels) {
       if (model != null) {
diff --git a/lib/ui/classes/classes_card.dart b/lib/ui/classes/classes_card.dart
index 787d1ff5c..22429a09e 100644
--- a/lib/ui/classes/classes_card.dart
+++ b/lib/ui/classes/classes_card.dart
@@ -14,8 +14,11 @@ const String cardId = 'schedule';
 
 class ClassScheduleCard extends StatelessWidget {
   List<Widget> buildActionButtons(BuildContext context) {
-    List<Widget> actionButtons = List<Widget>();
-    actionButtons.add(FlatButton(
+    List<Widget> actionButtons = [];
+    actionButtons.add(TextButton(
+      style: TextButton.styleFrom(
+        primary: Theme.of(context).buttonColor,
+      ),
       child: Text(
         'View All',
       ),
diff --git a/lib/ui/classes/classes_list.dart b/lib/ui/classes/classes_list.dart
index 935f203ac..67c661484 100644
--- a/lib/ui/classes/classes_list.dart
+++ b/lib/ui/classes/classes_list.dart
@@ -15,7 +15,7 @@ class ClassList extends StatelessWidget {
   }
 
   Widget buildSchedule(BuildContext context) {
-    List<Widget> list = List<Widget>();
+    List<Widget> list = [];
     Provider.of<ClassScheduleDataProvider>(context)
         .enrolledClasses
         .addAll(Provider.of<ClassScheduleDataProvider>(context).midterms);
diff --git a/lib/ui/common/build_info.dart b/lib/ui/common/build_info.dart
index 312f6cf06..95fbdac15 100644
--- a/lib/ui/common/build_info.dart
+++ b/lib/ui/common/build_info.dart
@@ -12,6 +12,7 @@ class _BuildInfoState extends State<BuildInfo> {
     appName: 'Unknown',
     version: 'Unknown',
     buildNumber: 'Unknown',
+    packageName: 'Unknown',
   );
 
   @override
diff --git a/lib/ui/common/card_container.dart b/lib/ui/common/card_container.dart
index f0b7cabca..a336d7b03 100644
--- a/lib/ui/common/card_container.dart
+++ b/lib/ui/common/card_container.dart
@@ -136,8 +136,7 @@ class CardContainer extends StatelessWidget {
   Widget buildMenu() {
     if (hideMenu ?? false) {
       return null;
-    }
-    else if(titleText == "Scanner") {
+    } else if (titleText == "Scanner") {
       return ButtonBar(
         mainAxisSize: MainAxisSize.min,
         children: [
@@ -159,7 +158,7 @@ class CardContainer extends StatelessWidget {
   }
 
   Widget buildMenuOptions(Map<String, Function> menuOptions) {
-    List<DropdownMenuItem<String>> menu = List<DropdownMenuItem<String>>();
+    List<DropdownMenuItem<String>> menu = [];
     menuOptions.forEach((menuOption, func) {
       Widget item = DropdownMenuItem<String>(
         value: menuOption,
diff --git a/lib/ui/common/linkify_with_catch.dart b/lib/ui/common/linkify_with_catch.dart
index f97baf2d5..cb9b77cef 100644
--- a/lib/ui/common/linkify_with_catch.dart
+++ b/lib/ui/common/linkify_with_catch.dart
@@ -27,7 +27,7 @@ class LinkifyWithCatch extends StatelessWidget {
         try {
           await launch(link.url, forceSafariVC: true);
         } catch (e) {
-          Scaffold.of(context).showSnackBar(SnackBar(
+          ScaffoldMessenger.of(context).showSnackBar(SnackBar(
             content: Text('Could not open.'),
           ));
         }
diff --git a/lib/ui/common/webview_container.dart b/lib/ui/common/webview_container.dart
index 230f5ffe8..36752525c 100644
--- a/lib/ui/common/webview_container.dart
+++ b/lib/ui/common/webview_container.dart
@@ -113,17 +113,18 @@ class _WebViewContainerState extends State<WebViewContainer>
     return Container(
       height: _contentHeight,
       child: WebView(
-        opaque: false,
         javascriptMode: JavascriptMode.unrestricted,
         initialUrl: webCardUrl,
         onWebViewCreated: (controller) {
           _webViewController = controller;
         },
+        navigationDelegate: null,
         javascriptChannels: <JavascriptChannel>[
           _linksChannel(context),
           _heightChannel(context),
           _mapChannel(context),
-          _refreshTokenChannel(context)
+          _refreshTokenChannel(context),
+          _permanentRedirect(context)
         ].toSet(),
       ),
     );
@@ -145,7 +146,7 @@ class _WebViewContainerState extends State<WebViewContainer>
   }
 
   Widget buildMenuOptions(Map<String, Function> menuOptions) {
-    List<DropdownMenuItem<String>> menu = List<DropdownMenuItem<String>>();
+    List<DropdownMenuItem<String>> menu = [];
     menuOptions.forEach((menuOption, func) {
       Widget item = DropdownMenuItem<String>(
         value: menuOption,
@@ -241,6 +242,20 @@ class _WebViewContainerState extends State<WebViewContainer>
     );
   }
 
+  // javascript channel for redirecting the user to a new webcard URL
+  JavascriptChannel _permanentRedirect(BuildContext context) {
+    return JavascriptChannel(
+      name: 'Redirect',
+      onMessageReceived: (JavascriptMessage message) async {
+        webCardUrl = message.message;
+        _webViewController.loadUrl(message.message);
+      },
+    );
+  }
+
+
+
+
   // this function checks to see if the current url of the state is different
   // to the webViewController's url, and loads in the new url if so
   void checkWebURL() async {
diff --git a/lib/ui/dining/dining_card.dart b/lib/ui/dining/dining_card.dart
index e7a0e3d68..a3a803edf 100644
--- a/lib/ui/dining/dining_card.dart
+++ b/lib/ui/dining/dining_card.dart
@@ -1,5 +1,4 @@
 import 'package:campus_mobile_experimental/app_constants.dart';
-import 'package:campus_mobile_experimental/app_router.dart';
 import 'package:campus_mobile_experimental/core/models/dining.dart';
 import 'package:campus_mobile_experimental/core/providers/cards.dart';
 import 'package:campus_mobile_experimental/core/providers/dining.dart';
@@ -42,8 +41,11 @@ class DiningCard extends StatelessWidget {
   }
 
   List<Widget> buildActionButtons(BuildContext context) {
-    List<Widget> actionButtons = List<Widget>();
-    actionButtons.add(FlatButton(
+    List<Widget> actionButtons = [];
+    actionButtons.add(TextButton(
+      style: TextButton.styleFrom(
+        primary: Theme.of(context).buttonColor,
+      ),
       child: Text(
         'View All',
       ),
diff --git a/lib/ui/dining/dining_detail_view.dart b/lib/ui/dining/dining_detail_view.dart
index ba9af435f..5bfe2fe25 100644
--- a/lib/ui/dining/dining_detail_view.dart
+++ b/lib/ui/dining/dining_detail_view.dart
@@ -52,7 +52,10 @@ class DiningDetailView extends StatelessWidget {
   Widget buildDirectionsButton(
       BuildContext context, prefix0.DiningModel model) {
     if (model.distance != null)
-      return FlatButton(
+      return TextButton(
+        style: TextButton.styleFrom(
+          primary: Theme.of(context).buttonColor,
+        ),
         child: Row(
           mainAxisAlignment: MainAxisAlignment.spaceBetween,
           children: <Widget>[
@@ -88,9 +91,13 @@ class DiningDetailView extends StatelessWidget {
 
   Widget buildWebsiteButton(BuildContext context, prefix0.DiningModel model) {
     if (model.url != null && model.url != '') {
-      return RaisedButton(
-        child: Text('Visit Website'),
-        textColor: Theme.of(context).textTheme.button.color,
+      return ElevatedButton(
+        style: ElevatedButton.styleFrom(
+          onPrimary: Theme.of(context).primaryColor, // foreground
+          primary: Theme.of(context).buttonColor,
+        ),
+        child: Text('Visit Website',
+            style: TextStyle(color: Theme.of(context).textTheme.button.color)),
         onPressed: () {
           try {
             launch(model.url, forceSafariVC: true);
@@ -105,9 +112,15 @@ class DiningDetailView extends StatelessWidget {
 
   Widget buildMenu(BuildContext context, prefix0.DiningModel model) {
     if (model.menuWebsite != null && model.menuWebsite.isNotEmpty) {
-      return RaisedButton(
-        child: Text('View Menu'),
-        textColor: Theme.of(context).textTheme.button.color,
+      return ElevatedButton(
+        style: ElevatedButton.styleFrom(
+          onPrimary: Theme.of(context).primaryColor, // foreground
+          primary: Theme.of(context).buttonColor,
+        ),
+        child: Text(
+          'View Menu',
+          style: TextStyle(color: Theme.of(context).textTheme.button.color),
+        ),
         onPressed: () {
           try {
             launch(model.menuWebsite, forceSafariVC: true);
@@ -152,8 +165,8 @@ class DiningDetailView extends StatelessWidget {
     return RichText(
       text: TextSpan(
         style: TextStyle(
-            fontSize: Theme.of(context).textTheme.body1.fontSize,
-            color: Theme.of(context).textTheme.body1.color),
+            fontSize: Theme.of(context).textTheme.bodyText2.fontSize,
+            color: Theme.of(context).textTheme.bodyText2.color),
         children: [
           TextSpan(
             text: "Payment Options:\n",
@@ -166,7 +179,7 @@ class DiningDetailView extends StatelessWidget {
   }
 
   Widget buildPictures(prefix0.DiningModel model) {
-    List<ImageLoader> images = List<ImageLoader>();
+    List<ImageLoader> images = [];
     if (model.images != null && model.images.length > 0) {
       for (prefix0.Image item in model.images) {
         images.add(ImageLoader(
diff --git a/lib/ui/dining/dining_list.dart b/lib/ui/dining/dining_list.dart
index c082617f2..898c3efb6 100644
--- a/lib/ui/dining/dining_list.dart
+++ b/lib/ui/dining/dining_list.dart
@@ -25,7 +25,7 @@ class DiningList extends StatelessWidget {
   }
 
   Widget buildDiningList(List<DiningModel> listOfDiners, BuildContext context) {
-    final List<Widget> diningTiles = List<Widget>();
+    final List<Widget> diningTiles = [];
 
     /// check to see if we want to display only a limited number of elements
     /// if no constraint is given on the size of the list then all elements
@@ -150,7 +150,10 @@ class DiningList extends StatelessWidget {
   }
 
   Widget buildIconWithDistance(DiningModel data, BuildContext context) {
-    return FlatButton(
+    return TextButton(
+      style: TextButton.styleFrom(
+        primary: Theme.of(context).buttonColor,
+      ),
       onPressed: () {
         try {
           launch(
@@ -163,12 +166,17 @@ class DiningList extends StatelessWidget {
       child: Column(
         crossAxisAlignment: CrossAxisAlignment.center,
         children: [
-          Icon(Icons.directions_walk),
-          Text(
-            data.distance != null
-                ? (num.parse(data.distance.toStringAsFixed(1)).toString() +
-                    ' mi')
-                : '--',
+          Expanded(
+            child: Icon(Icons.directions_walk),
+          ),
+          Padding(padding: EdgeInsets.only(bottom: 7.0)),
+          Expanded(
+            child: Text(
+              data.distance != null
+                  ? (num.parse(data.distance.toStringAsFixed(1)).toString() +
+                      ' mi')
+                  : '--',
+            ),
           ),
         ],
       ),
diff --git a/lib/ui/dining/dining_menu_list.dart b/lib/ui/dining/dining_menu_list.dart
index ccda64111..83a44d22d 100644
--- a/lib/ui/dining/dining_menu_list.dart
+++ b/lib/ui/dining/dining_menu_list.dart
@@ -27,7 +27,7 @@ class _DiningMenuListState extends State<DiningMenuList> {
     DiningMenuItemsModel menu =
         Provider.of<DiningDataProvider>(context, listen: false)
             .getMenuData(widget.model.id);
-    List<String> filters = List<String>();
+    List<String> filters = [];
     if (Provider.of<DiningDataProvider>(context, listen: false)
         .filtersSelected[0]) {
       filters.add('VT');
@@ -54,7 +54,7 @@ class _DiningMenuListState extends State<DiningMenuList> {
       List<MenuItem> menuList =
           Provider.of<DiningDataProvider>(context, listen: false)
               .getMenuItems(widget.model.id, filters);
-      List<Widget> list = List<Widget>();
+      List<Widget> list = [];
       if (menuList.length > 0) {
         for (MenuItem item in menuList) {
           list.add(GestureDetector(
@@ -72,7 +72,7 @@ class _DiningMenuListState extends State<DiningMenuList> {
                   TextSpan(
                     text: " (\$${item.price})",
                     style: TextStyle(
-                        color: Theme.of(context).textTheme.body1.color),
+                        color: Theme.of(context).textTheme.bodyText2.color),
                   )
                 ],
               ),
diff --git a/lib/ui/employee_id/employee_id_card.dart b/lib/ui/employee_id/employee_id_card.dart
index 372d88984..a753d2ad6 100644
--- a/lib/ui/employee_id/employee_id_card.dart
+++ b/lib/ui/employee_id/employee_id_card.dart
@@ -130,12 +130,13 @@ class _EmployeeIdCardState extends State<EmployeeIdCard> {
                             padding: EdgeInsets.all(
                                 ScalingUtility.verticalSafeBlock * .9),
                           ),
-                          FlatButton(
+                          TextButton(
+                            style: TextButton.styleFrom(
+                              padding: EdgeInsets.all(0),
+                              tapTargetSize: MaterialTapTargetSize.shrinkWrap,
+                            ),
                             child: returnBarcodeContainer(
                                 employeeIdModel.barcode, false, context),
-                            padding: EdgeInsets.all(0),
-                            materialTapTargetSize:
-                                MaterialTapTargetSize.shrinkWrap,
                             onPressed: () {
                               createAlertDialog(
                                   context,
@@ -216,7 +217,7 @@ class _EmployeeIdCardState extends State<EmployeeIdCard> {
                       employeeIdModel.employeePreferredDisplayName,
                       style: TextStyle(
                           fontWeight: FontWeight.bold,
-                          fontSize: TabletFontSize(
+                          fontSize: tabletFontSize(
                               employeeIdModel.employeePreferredDisplayName,
                               "name")),
                       textAlign: TextAlign.left,
@@ -233,7 +234,7 @@ class _EmployeeIdCardState extends State<EmployeeIdCard> {
                       style: TextStyle(
                           color: Colors.grey,
                           fontSize:
-                              TabletFontSize(employeeIdModel.department, "")),
+                              tabletFontSize(employeeIdModel.department, "")),
                       textAlign: TextAlign.left,
                       softWrap: false,
                       maxLines: 1,
@@ -245,7 +246,7 @@ class _EmployeeIdCardState extends State<EmployeeIdCard> {
                     child: Text(
                       "Employee ID " + employeeIdModel.employeeId,
                       style: TextStyle(
-                          fontSize: TabletFontSize(
+                          fontSize: tabletFontSize(
                               "Employee ID " + employeeIdModel.employeeId, "")),
                       textAlign: TextAlign.left,
                       softWrap: false,
@@ -256,10 +257,12 @@ class _EmployeeIdCardState extends State<EmployeeIdCard> {
                   Padding(
                     padding: EdgeInsets.only(top: 15),
                   ),
-                  FlatButton(
+                  TextButton(
+                    style: TextButton.styleFrom(
+                      padding: EdgeInsets.all(0),
+                    ),
                     child: returnBarcodeContainerTablet(
                         employeeIdModel.barcode, false, context),
-                    padding: EdgeInsets.all(0),
                     onPressed: () {
                       createAlertDialog(
                           context,
@@ -306,7 +309,7 @@ class _EmployeeIdCardState extends State<EmployeeIdCard> {
               child: checkForRotation(image, context, cardNumber, rotated),
             ),
             actions: <Widget>[
-              FlatButton(
+              TextButton(
                   child: Icon(
                     Icons.close,
                     color: Colors.black,
@@ -551,7 +554,7 @@ class _EmployeeIdCardState extends State<EmployeeIdCard> {
     return base;
   }
 
-  double TabletFontSize(String input, String textField) {
+  double tabletFontSize(String input, String textField) {
     /// Base font size
     double base = letterSpacingForTablet();
 
diff --git a/lib/ui/events/events_card.dart b/lib/ui/events/events_card.dart
index 076927257..fd5020434 100644
--- a/lib/ui/events/events_card.dart
+++ b/lib/ui/events/events_card.dart
@@ -1,5 +1,4 @@
 import 'package:campus_mobile_experimental/app_constants.dart';
-import 'package:campus_mobile_experimental/app_router.dart';
 import 'package:campus_mobile_experimental/core/models/events.dart';
 import 'package:campus_mobile_experimental/core/providers/cards.dart';
 import 'package:campus_mobile_experimental/core/providers/events.dart';
@@ -16,8 +15,11 @@ class EventsCard extends StatelessWidget {
   }
 
   List<Widget> buildActionButtons(BuildContext context, List<EventModel> data) {
-    List<Widget> actionButtons = List<Widget>();
-    actionButtons.add(FlatButton(
+    List<Widget> actionButtons = [];
+    actionButtons.add(TextButton(
+      style: TextButton.styleFrom(
+        primary: Theme.of(context).buttonColor,
+      ),
       child: Text(
         'View All',
       ),
diff --git a/lib/ui/events/events_detail_view.dart b/lib/ui/events/events_detail_view.dart
index d851fe85c..de4b3074c 100644
--- a/lib/ui/events/events_detail_view.dart
+++ b/lib/ui/events/events_detail_view.dart
@@ -30,7 +30,7 @@ class EventDetailView extends StatelessWidget {
       Text(
         data.title,
         textAlign: TextAlign.center,
-        style: Theme.of(context).textTheme.title,
+        style: Theme.of(context).textTheme.headline6,
       ),
       Divider(),
       data.location != null && data.location.isNotEmpty
@@ -66,18 +66,21 @@ class LearnMoreButton extends StatelessWidget {
   Widget build(BuildContext context) {
     return Padding(
       padding: const EdgeInsets.symmetric(horizontal: 8.0),
-      child: FlatButton(
+      child: ElevatedButton(
+          style: ElevatedButton.styleFrom(
+            onPrimary: Theme.of(context).primaryColor, // foreground
+            primary: Theme.of(context).buttonColor,
+          ),
           child: Text(
             'Learn More',
             style: TextStyle(
                 fontSize: 16, color: Theme.of(context).textTheme.button.color),
           ),
-          color: Theme.of(context).buttonColor,
           onPressed: () async {
             try {
               await launch(link, forceSafariVC: true);
             } catch (e) {
-              Scaffold.of(context).showSnackBar(SnackBar(
+              ScaffoldMessenger.of(context).showSnackBar(SnackBar(
                 content: Text('Could not open.'),
               ));
             }
diff --git a/lib/ui/events/events_list.dart b/lib/ui/events/events_list.dart
index 08b16005b..d10518902 100644
--- a/lib/ui/events/events_list.dart
+++ b/lib/ui/events/events_list.dart
@@ -21,7 +21,7 @@ class EventsList extends StatelessWidget {
   }
 
   Widget buildEventsList(List<EventModel> listOfEvents, BuildContext context) {
-    final List<Widget> eventTiles = List<Widget>();
+    final List<Widget> eventTiles = [];
 
     /// check to see if we want to display only a limited number of elements
     /// if no constraint is given on the size of the list then all elements
diff --git a/lib/ui/finals/finals_card.dart b/lib/ui/finals/finals_card.dart
index ad3963a0f..99a8af85a 100644
--- a/lib/ui/finals/finals_card.dart
+++ b/lib/ui/finals/finals_card.dart
@@ -62,7 +62,7 @@ class FinalsCard extends StatelessWidget {
 
   Widget buildFinalsCard(Map<String, List<SectionData>> finalsData,
       DateTime lastUpdated, String nextDayWithClasses, BuildContext context) {
-    List<Widget> listToReturn = List<Widget>();
+    List<Widget> listToReturn = [];
     finalsData.forEach((key, value) {
       for (SectionData data in value) {
         listToReturn.add(ListTile(
diff --git a/lib/ui/home/home.dart b/lib/ui/home/home.dart
index 52099c2fd..7e31b89cf 100644
--- a/lib/ui/home/home.dart
+++ b/lib/ui/home/home.dart
@@ -24,16 +24,16 @@ import 'package:campus_mobile_experimental/ui/news/news_card.dart';
 import 'package:campus_mobile_experimental/ui/notices/notices_card.dart';
 import 'package:campus_mobile_experimental/ui/parking/parking_card.dart';
 import 'package:campus_mobile_experimental/ui/scanner/native_scanner_card.dart';
-import 'package:campus_mobile_experimental/ui/scanner/web_scanner_card.dart';
 import 'package:campus_mobile_experimental/ui/shuttle/shuttle_card.dart';
 import 'package:campus_mobile_experimental/ui/student_id/student_id_card.dart';
 import 'package:campus_mobile_experimental/ui/survey/survey_card.dart';
 import 'package:campus_mobile_experimental/ui/weather/weather_card.dart';
+import 'package:campus_mobile_experimental/ui/wifi/wifi_card.dart';
 import 'package:flutter/cupertino.dart';
 import 'package:flutter/material.dart';
 import 'package:provider/provider.dart';
 import 'package:shared_preferences/shared_preferences.dart';
-import 'package:uni_links/uni_links.dart';
+import 'package:uni_links2/uni_links.dart';
 
 class Home extends StatefulWidget {
   @override
@@ -41,12 +41,13 @@ class Home extends StatefulWidget {
 }
 
 class _HomeState extends State<Home> {
-  StreamSubscription _sub;
 
   Future<Null> initUniLinks(BuildContext context) async {
+
     // deep links are received by this method
     // the specific host needs to be added in AndroidManifest.xml and Info.plist
     // currently, this method handles executing custom map query
+    StreamSubscription _sub;
 
     // Used to handle links on cold app start
     String initialLink = await getInitialLink();
@@ -60,13 +61,15 @@ class _HomeState extends State<Home> {
     }
 
     // used to handle links while app is in foreground/background
-    _sub = getLinksStream().listen((String link) async {
+    _sub = linkStream.listen((String link) async {
       // handling for map query
       if (link.contains("deeplinking.searchmap")) {
         var uri = Uri.dataFromString(link);
         var query = uri.queryParameters['query'];
         // redirect query to maps tab and search with query
         executeQuery(context, query);
+        // received deeplink, cancel stream to prevent memory leaks
+        _sub.cancel();
       }
     });
   }
@@ -105,7 +108,7 @@ class _HomeState extends State<Home> {
   }
 
   List<Widget> getNoticesCardsList(List<NoticesModel> notices) {
-    List<Widget> noticesCards = List<Widget>();
+    List<Widget> noticesCards = [];
     for (NoticesModel notice in notices) {
       noticesCards.add(NoticesCard(notice: notice));
     }
@@ -113,16 +116,13 @@ class _HomeState extends State<Home> {
   }
 
   List<Widget> getOrderedCardsList(List<String> order) {
-    List<Widget> orderedCards = List<Widget>();
+    List<Widget> orderedCards = [];
     Map<String, CardsModel> webCards =
         Provider.of<CardsDataProvider>(context, listen: false).webCards;
 
     for (String card in order) {
       if (!webCards.containsKey(card)) {
         switch (card) {
-          case 'QRScanner':
-            orderedCards.insert(0, ScannerCard());
-            break;
           case 'NativeScanner':
             orderedCards.insert(0, NativeScannerCard());
             break;
@@ -165,6 +165,9 @@ class _HomeState extends State<Home> {
           case 'parking':
             orderedCards.add(ParkingCard());
             break;
+          case 'speed_test':
+            orderedCards.add(WiFiCard());
+            break;
           case 'shuttle':
             orderedCards.add(ShuttleCard());
             break;
diff --git a/lib/ui/map/directions_button.dart b/lib/ui/map/directions_button.dart
index dc6fd5866..0a8fc1880 100644
--- a/lib/ui/map/directions_button.dart
+++ b/lib/ui/map/directions_button.dart
@@ -1,5 +1,5 @@
-import 'package:campus_mobile_experimental/core/providers/map.dart';
 import 'package:campus_mobile_experimental/app_constants.dart';
+import 'package:campus_mobile_experimental/core/providers/map.dart';
 import 'package:flutter/material.dart';
 import 'package:google_maps_flutter/google_maps_flutter.dart';
 import 'package:provider/provider.dart';
diff --git a/lib/ui/map/map.dart b/lib/ui/map/map.dart
index 4c2c62781..8560f0a33 100644
--- a/lib/ui/map/map.dart
+++ b/lib/ui/map/map.dart
@@ -1,28 +1,27 @@
 import 'dart:async';
 
+import 'package:campus_mobile_experimental/app_constants.dart';
 import 'package:campus_mobile_experimental/core/providers/bottom_nav.dart';
 import 'package:campus_mobile_experimental/core/providers/map.dart';
+import 'package:campus_mobile_experimental/ui/map/directions_button.dart';
 import 'package:campus_mobile_experimental/ui/map/map_search_bar_ph.dart';
 import 'package:campus_mobile_experimental/ui/map/more_results_list.dart';
 import 'package:campus_mobile_experimental/ui/map/my_location_button.dart';
-import 'package:campus_mobile_experimental/ui/map/directions_button.dart';
 import 'package:flutter/material.dart';
 import 'package:google_maps_flutter/google_maps_flutter.dart';
 import 'package:provider/provider.dart';
-import 'package:uni_links/uni_links.dart';
-
-import '../../app_constants.dart';
+import 'package:uni_links2/uni_links.dart';
 
 class Maps extends StatelessWidget {
   Widget resultsList(BuildContext context) {
     if (Provider.of<MapsDataProvider>(context).markers.isNotEmpty) {
       WidgetsBinding.instance.addPostFrameCallback((_) {
-        Scaffold.of(context).removeCurrentSnackBar();
+        ScaffoldMessenger.of(context).removeCurrentSnackBar();
       });
       return MoreResultsList();
     } else if (Provider.of<MapsDataProvider>(context).noResults) {
       WidgetsBinding.instance.addPostFrameCallback((_) {
-        Scaffold.of(context)
+        ScaffoldMessenger.of(context)
           ..removeCurrentSnackBar()
           ..showSnackBar(
               SnackBar(content: Text('No results found for your search.')));
@@ -36,7 +35,7 @@ class Maps extends StatelessWidget {
     double width = MediaQuery.of(context).size.width;
 
     return Positioned(
-      bottom: width * 0.05,
+      bottom: height * 0.05,
       right: width * 0.05,
       child: Column(
         children: [
@@ -52,13 +51,12 @@ class Maps extends StatelessWidget {
     );
   }
 
-  StreamSubscription _sub;
-
   Future<Null> initUniLinks(BuildContext context) async {
     // deep links are received by this method
     // the specific host needs to be added in AndroidManifest.xml and Info.plist
     // currently, this method handles executing custom map query
-    _sub = getLinksStream().listen((String link) async {
+    StreamSubscription _sub;
+    _sub = linkStream.listen((String link) async {
       // handling for map query
       if (link.contains("deeplinking.searchmap")) {
         var uri = Uri.dataFromString(link);
@@ -70,6 +68,8 @@ class Maps extends StatelessWidget {
         Provider.of<MapsDataProvider>(context, listen: false).fetchLocations();
         Provider.of<BottomNavigationBarProvider>(context, listen: false)
             .currentIndex = NavigatorConstants.MapTab;
+        // received deeplink, cancel stream to prevent memory leaks
+        _sub.cancel();
       }
     });
   }
diff --git a/lib/ui/map/more_results_list.dart b/lib/ui/map/more_results_list.dart
index 47a7d5fca..47f510af1 100644
--- a/lib/ui/map/more_results_list.dart
+++ b/lib/ui/map/more_results_list.dart
@@ -11,7 +11,7 @@ class MoreResultsList extends StatelessWidget {
   Widget build(BuildContext context) {
     return Align(
       alignment: Alignment.bottomCenter,
-      child: RaisedButton(
+      child: ElevatedButton(
         onPressed: () {
           showModalBottomSheet(
             context: context,
@@ -67,7 +67,9 @@ class MoreResultsList extends StatelessWidget {
             ),
           );
         },
-        color: Theme.of(context).buttonColor,
+        style: ElevatedButton.styleFrom(
+          primary: Theme.of(context).buttonColor,
+        ),
         child: Text(
           'Show More Results',
           style: TextStyle(color: Theme.of(context).textTheme.button.color),
diff --git a/lib/ui/map/quick_search_icons.dart b/lib/ui/map/quick_search_icons.dart
index adeacb50f..1ca4d2e9c 100644
--- a/lib/ui/map/quick_search_icons.dart
+++ b/lib/ui/map/quick_search_icons.dart
@@ -82,16 +82,16 @@ class LabeledIconButton extends StatelessWidget {
     return Column(
       crossAxisAlignment: CrossAxisAlignment.center,
       children: <Widget>[
-        FlatButton(
-          padding: EdgeInsets.symmetric(vertical: 12.0),
+        MaterialButton(
           onPressed: onPressed,
-          shape: CircleBorder(),
           color: Colors.red,
+          textColor: Colors.white,
           child: Icon(
             icon,
             size: 28,
-            color: Colors.white,
           ),
+          padding: EdgeInsets.all(12),
+          shape: CircleBorder(),
         ),
         SizedBox(height: 6),
         Text(text),
diff --git a/lib/ui/my_chart/my_chart_card.dart b/lib/ui/my_chart/my_chart_card.dart
index 8fc629d26..52c333dc9 100644
--- a/lib/ui/my_chart/my_chart_card.dart
+++ b/lib/ui/my_chart/my_chart_card.dart
@@ -55,8 +55,11 @@ class MyStudentChartCard extends StatelessWidget {
   }
 
   List<Widget> buildActionButtons(BuildContext context) {
-    List<Widget> actionButtons = List<Widget>();
-    actionButtons.add(FlatButton(
+    List<Widget> actionButtons = [];
+    actionButtons.add(TextButton(
+      style: TextButton.styleFrom(
+        primary: Theme.of(context).buttonColor,
+      ),
       child: Text(
         'Log in to MyStudentChart',
       ),
diff --git a/lib/ui/mystudentchart/mystudentchart.dart b/lib/ui/mystudentchart/mystudentchart.dart
index 8fc629d26..52c333dc9 100644
--- a/lib/ui/mystudentchart/mystudentchart.dart
+++ b/lib/ui/mystudentchart/mystudentchart.dart
@@ -55,8 +55,11 @@ class MyStudentChartCard extends StatelessWidget {
   }
 
   List<Widget> buildActionButtons(BuildContext context) {
-    List<Widget> actionButtons = List<Widget>();
-    actionButtons.add(FlatButton(
+    List<Widget> actionButtons = [];
+    actionButtons.add(TextButton(
+      style: TextButton.styleFrom(
+        primary: Theme.of(context).buttonColor,
+      ),
       child: Text(
         'Log in to MyStudentChart',
       ),
diff --git a/lib/ui/myucsdchart/myucsdchart.dart b/lib/ui/myucsdchart/myucsdchart.dart
index cc734bbd3..1a7b31206 100644
--- a/lib/ui/myucsdchart/myucsdchart.dart
+++ b/lib/ui/myucsdchart/myucsdchart.dart
@@ -55,8 +55,11 @@ class MyUCSDChartCard extends StatelessWidget {
   }
 
   List<Widget> buildActionButtons(BuildContext context) {
-    List<Widget> actionButtons = List<Widget>();
-    actionButtons.add(FlatButton(
+    List<Widget> actionButtons = [];
+    actionButtons.add(TextButton(
+      style: TextButton.styleFrom(
+        primary: Theme.of(context).buttonColor,
+      ),
       child: Text(
         'Log in to MyUCSDChart',
       ),
diff --git a/lib/ui/navigator/bottom.dart b/lib/ui/navigator/bottom.dart
index 485a4d673..e45b14c4a 100644
--- a/lib/ui/navigator/bottom.dart
+++ b/lib/ui/navigator/bottom.dart
@@ -57,19 +57,19 @@ class _BottomTabBarState extends State<BottomTabBar> {
         items: [
           BottomNavigationBarItem(
             icon: new Icon(Icons.home),
-            title: new Text('Home'),
+            label: 'Home',
           ),
           BottomNavigationBarItem(
             icon: new Icon(Icons.map),
-            title: new Text('Map'),
+            label: 'Map',
           ),
           BottomNavigationBarItem(
             icon: new Icon(Icons.notifications),
-            title: new Text('Notifications'),
+            label: 'Notifications',
           ),
           BottomNavigationBarItem(
             icon: new Icon(Icons.person),
-            title: new Text('User Profile'),
+            label: 'User Profile',
           ),
         ],
         showSelectedLabels: false,
diff --git a/lib/ui/navigator/top.dart b/lib/ui/navigator/top.dart
index 4a9c28adf..b9e70e3cb 100644
--- a/lib/ui/navigator/top.dart
+++ b/lib/ui/navigator/top.dart
@@ -1,16 +1,20 @@
 import 'package:campus_mobile_experimental/app_constants.dart';
+import 'package:campus_mobile_experimental/app_styles.dart';
 import 'package:flutter/material.dart';
 
 class CMAppBar extends StatelessWidget {
   CMAppBar({
     this.title,
   });
-  String title;
+  final String title;
+
   @override
   Widget build(BuildContext context) {
     return PreferredSize(
       preferredSize: Size.fromHeight(42),
       child: AppBar(
+        backgroundColor: ColorPrimary,
+        brightness: Brightness.dark,
         primary: true,
         centerTitle: true,
         title: title == null
diff --git a/lib/ui/news/news_card.dart b/lib/ui/news/news_card.dart
index fad485128..c106f740c 100644
--- a/lib/ui/news/news_card.dart
+++ b/lib/ui/news/news_card.dart
@@ -1,5 +1,4 @@
 import 'package:campus_mobile_experimental/app_constants.dart';
-import 'package:campus_mobile_experimental/app_router.dart';
 import 'package:campus_mobile_experimental/core/providers/cards.dart';
 import 'package:campus_mobile_experimental/core/providers/news.dart';
 import 'package:campus_mobile_experimental/ui/common/card_container.dart';
@@ -17,8 +16,11 @@ class NewsCard extends StatelessWidget {
   }
 
   List<Widget> buildActionButtons(BuildContext context) {
-    List<Widget> actionButtons = List<Widget>();
-    actionButtons.add(FlatButton(
+    List<Widget> actionButtons = [];
+    actionButtons.add(TextButton(
+      style: TextButton.styleFrom(
+        primary: Theme.of(context).buttonColor,
+      ),
       child: Text(
         'View All',
       ),
diff --git a/lib/ui/news/news_detail_view.dart b/lib/ui/news/news_detail_view.dart
index 4f115296e..de97f23bd 100644
--- a/lib/ui/news/news_detail_view.dart
+++ b/lib/ui/news/news_detail_view.dart
@@ -61,13 +61,16 @@ class ContinueReadingButton extends StatelessWidget {
       child: Container(
         height: 40,
         width: double.infinity,
-        child: FlatButton(
-          color: Theme.of(context).buttonColor,
+        child: ElevatedButton(
+          style: ElevatedButton.styleFrom(
+            onPrimary: Theme.of(context).primaryColor, // foreground
+            primary: Theme.of(context).buttonColor,
+          ),
           onPressed: () async {
             try {
               await launch(link, forceSafariVC: true);
             } catch (e) {
-              Scaffold.of(context).showSnackBar(SnackBar(
+              ScaffoldMessenger.of(context).showSnackBar(SnackBar(
                 content: Text('Could not open.'),
               ));
             }
diff --git a/lib/ui/news/news_list.dart b/lib/ui/news/news_list.dart
index a77c85843..af3e02c7a 100644
--- a/lib/ui/news/news_list.dart
+++ b/lib/ui/news/news_list.dart
@@ -25,7 +25,7 @@ class NewsList extends StatelessWidget {
 
   Widget buildNewsList(BuildContext context, NewsModel data) {
     final List<Item> listOfNews = data.items;
-    final List<Widget> newsTiles = List<Widget>();
+    final List<Widget> newsTiles = [];
 
     /// check to see if we want to display only a limited number of elements
     /// if no constraint is given on the size of the list then all elements
diff --git a/lib/ui/notifications/notifications_list_view.dart b/lib/ui/notifications/notifications_list_view.dart
index 8fb67b297..92139bd9b 100644
--- a/lib/ui/notifications/notifications_list_view.dart
+++ b/lib/ui/notifications/notifications_list_view.dart
@@ -10,7 +10,7 @@ import 'package:campus_mobile_experimental/ui/notifications/notifications_freefo
 import 'package:flutter/material.dart';
 import 'package:flutter_linkify/flutter_linkify.dart';
 import 'package:provider/provider.dart';
-import 'package:uni_links/uni_links.dart';
+import 'package:uni_links2/uni_links.dart';
 import 'package:url_launcher/url_launcher.dart';
 
 class NotificationsListView extends StatelessWidget {
@@ -60,17 +60,6 @@ class NotificationsListView extends StatelessWidget {
     );
   }
 
-  Widget _buildLoadingIndicator() {
-    return Padding(
-        padding: EdgeInsets.only(top: 10.0),
-        child: Row(
-          mainAxisAlignment: MainAxisAlignment.center,
-          children: <Widget>[
-            CircularProgressIndicator(),
-          ],
-        ));
-  }
-
   Widget _buildErrorText() {
     return Row(
       mainAxisAlignment: MainAxisAlignment.center,
@@ -93,13 +82,13 @@ class NotificationsListView extends StatelessWidget {
     );
   }
 
-  StreamSubscription _sub;
 
   Future<Null> initUniLinks(BuildContext context) async {
     // deep links are received by this method
     // the specific host needs to be added in AndroidManifest.xml and Info.plist
     // currently, this method handles executing custom map query
-    _sub = getLinksStream().listen((String link) async {
+    StreamSubscription _sub;
+    _sub = linkStream.listen((String link) async {
       // handling for map query
       if (link.contains("deeplinking.searchmap")) {
         var uri = Uri.dataFromString(link);
@@ -111,8 +100,11 @@ class NotificationsListView extends StatelessWidget {
         Provider.of<MapsDataProvider>(context, listen: false).fetchLocations();
         Provider.of<BottomNavigationBarProvider>(context, listen: false)
             .currentIndex = NavigatorConstants.MapTab;
+        // received deeplink, cancel stream to prevent memory leaks
+        _sub.cancel();
       }
     });
+
   }
 
   Widget _buildMessage(BuildContext context, int index) {
diff --git a/lib/ui/onboarding/onboarding_affiliations.dart b/lib/ui/onboarding/onboarding_affiliations.dart
index 342dd5c20..bf72320e8 100644
--- a/lib/ui/onboarding/onboarding_affiliations.dart
+++ b/lib/ui/onboarding/onboarding_affiliations.dart
@@ -21,6 +21,7 @@ class _OnboardingAffiliationsState extends State<OnboardingAffiliations> {
     return Scaffold(
       appBar: AppBar(
         elevation: 0.0,
+        brightness: Brightness.dark,
       ),
       body: Container(
         color: ColorPrimary,
@@ -45,15 +46,16 @@ class _OnboardingAffiliationsState extends State<OnboardingAffiliations> {
                 child: SizedBox(
                   width: double.infinity,
                   height: 45,
-                  child: FlatButton(
-                      color: studentSelected ? darkButtonColor : ColorPrimary,
-                      textColor:
-                          studentSelected ? ColorPrimary : darkButtonColor,
-                      shape: ContinuousRectangleBorder(
-                          side: BorderSide(
-                              color: darkButtonColor,
-                              width: 1,
-                              style: BorderStyle.solid)),
+                  child: TextButton(
+                      style: TextButton.styleFrom(
+                        backgroundColor:
+                            studentSelected ? darkButtonColor : ColorPrimary,
+                        shape: ContinuousRectangleBorder(
+                            side: BorderSide(
+                                color: darkButtonColor,
+                                width: 1,
+                                style: BorderStyle.solid)),
+                      ),
                       onPressed: () {
                         this.setState(() {
                           studentSelected = !studentSelected;
@@ -64,6 +66,9 @@ class _OnboardingAffiliationsState extends State<OnboardingAffiliations> {
                       },
                       child: Text("Student",
                           style: TextStyle(
+                              color: studentSelected
+                                  ? ColorPrimary
+                                  : darkButtonColor,
                               fontSize: 17,
                               decoration: TextDecoration.underline))),
                 ),
@@ -73,24 +78,29 @@ class _OnboardingAffiliationsState extends State<OnboardingAffiliations> {
                 child: SizedBox(
                   width: double.infinity,
                   height: 45,
-                  child: FlatButton(
-                      color: staffSelected ? darkButtonColor : ColorPrimary,
-                      textColor: staffSelected ? ColorPrimary : darkButtonColor,
-                      shape: ContinuousRectangleBorder(
-                          side: BorderSide(
-                              color: darkButtonColor,
-                              width: 1,
-                              style: BorderStyle.solid)),
+                  child: TextButton(
+                      style: TextButton.styleFrom(
+                        backgroundColor:
+                            staffSelected ? darkButtonColor : ColorPrimary,
+                        shape: ContinuousRectangleBorder(
+                            side: BorderSide(
+                                color: darkButtonColor,
+                                width: 1,
+                                style: BorderStyle.solid)),
+                      ),
                       onPressed: () {
                         this.setState(() {
                           staffSelected = !staffSelected;
                           readyToProceed = staffSelected;
-                          studentSelected = false;
                           visitorSelected = false;
+                          studentSelected = false;
                         });
                       },
                       child: Text("Staff/Faculty",
                           style: TextStyle(
+                              color: staffSelected
+                                  ? ColorPrimary
+                                  : darkButtonColor,
                               fontSize: 17,
                               decoration: TextDecoration.underline))),
                 ),
@@ -100,15 +110,16 @@ class _OnboardingAffiliationsState extends State<OnboardingAffiliations> {
                 child: SizedBox(
                   width: double.infinity,
                   height: 45,
-                  child: FlatButton(
-                      color: visitorSelected ? darkButtonColor : ColorPrimary,
-                      textColor:
-                          visitorSelected ? ColorPrimary : darkButtonColor,
-                      shape: ContinuousRectangleBorder(
-                          side: BorderSide(
-                              color: darkButtonColor,
-                              width: 1,
-                              style: BorderStyle.solid)),
+                  child: TextButton(
+                      style: TextButton.styleFrom(
+                        backgroundColor:
+                            visitorSelected ? darkButtonColor : ColorPrimary,
+                        shape: ContinuousRectangleBorder(
+                            side: BorderSide(
+                                color: darkButtonColor,
+                                width: 1,
+                                style: BorderStyle.solid)),
+                      ),
                       onPressed: () {
                         this.setState(() {
                           visitorSelected = !visitorSelected;
@@ -119,6 +130,9 @@ class _OnboardingAffiliationsState extends State<OnboardingAffiliations> {
                       },
                       child: Text("Visitor",
                           style: TextStyle(
+                              color: visitorSelected
+                                  ? ColorPrimary
+                                  : darkButtonColor,
                               fontSize: 17,
                               decoration: TextDecoration.underline))),
                 ),
@@ -130,18 +144,19 @@ class _OnboardingAffiliationsState extends State<OnboardingAffiliations> {
                   child: SizedBox(
                     width: double.infinity,
                     height: 50,
-                    child: FlatButton(
-                        color: darkButtonColor,
-                        disabledColor: Color(0xFF13223A),
-                        disabledTextColor: Colors.grey,
-                        textColor: ColorPrimary,
-                        shape: ContinuousRectangleBorder(
-                            side: BorderSide(
-                                color: readyToProceed
-                                    ? darkButtonColor
-                                    : ColorPrimary,
-                                width: 1,
-                                style: BorderStyle.solid)),
+                    child: TextButton(
+                        style: TextButton.styleFrom(
+                          backgroundColor: readyToProceed
+                              ? darkButtonColor
+                              : Color(0xFF13223A),
+                          shape: ContinuousRectangleBorder(
+                              side: BorderSide(
+                                  color: readyToProceed
+                                      ? darkButtonColor
+                                      : ColorPrimary,
+                                  width: 1,
+                                  style: BorderStyle.solid)),
+                        ),
                         onPressed: !readyToProceed
                             ? null
                             : () async {
@@ -159,6 +174,8 @@ class _OnboardingAffiliationsState extends State<OnboardingAffiliations> {
                               },
                         child: Text("Next",
                             style: TextStyle(
+                                color:
+                                    readyToProceed ? ColorPrimary : Colors.grey,
                                 fontSize: 17,
                                 decoration: TextDecoration.underline))),
                   ),
diff --git a/lib/ui/onboarding/onboarding_initial_screen.dart b/lib/ui/onboarding/onboarding_initial_screen.dart
index 447c1d505..f0d7fd244 100644
--- a/lib/ui/onboarding/onboarding_initial_screen.dart
+++ b/lib/ui/onboarding/onboarding_initial_screen.dart
@@ -29,13 +29,13 @@ class _OnboardingInitialState extends State<OnboardingInitial>
     double width = MediaQuery.of(context).size.width;
     double height = MediaQuery.of(context).size.height;
     return Scaffold(
-        resizeToAvoidBottomPadding: false,
+        resizeToAvoidBottomInset: false,
         backgroundColor: Colors.white,
         body: Stack(children: <Widget>[
           Container(
             child: Column(children: <Widget>[
               Expanded(
-                  child: Stack(overflow: Overflow.clip, children: <Widget>[
+                  child: Stack(clipBehavior: Clip.none, children: <Widget>[
                 Column(
                     mainAxisAlignment: MainAxisAlignment.center,
                     children: <Widget>[
@@ -114,8 +114,10 @@ class _OnboardingInitialState extends State<OnboardingInitial>
                       crossAxisAlignment: CrossAxisAlignment.stretch,
                       children: <Widget>[
                         Expanded(
-                            child: FlatButton(
-                          color: ColorPrimary,
+                            child: TextButton(
+                          style: TextButton.styleFrom(
+                            primary: ColorPrimary,
+                          ),
                           child: Text(
                             "Get Started",
                             style: TextStyle(
@@ -125,8 +127,10 @@ class _OnboardingInitialState extends State<OnboardingInitial>
                           ),
                         )),
                         Expanded(
-                          child: FlatButton(
-                            color: ColorPrimary,
+                          child: TextButton(
+                            style: TextButton.styleFrom(
+                              primary: ColorPrimary,
+                            ),
                             child: Text(
                               "Log In",
                               style: TextStyle(
diff --git a/lib/ui/onboarding/onboarding_login.dart b/lib/ui/onboarding/onboarding_login.dart
index 25ef007e0..f373f2461 100644
--- a/lib/ui/onboarding/onboarding_login.dart
+++ b/lib/ui/onboarding/onboarding_login.dart
@@ -29,6 +29,7 @@ class _OnboardingLoginState extends State<OnboardingLogin> {
     return Scaffold(
       appBar: AppBar(
         elevation: 0.0,
+        brightness: Brightness.dark,
       ),
       backgroundColor: lightPrimaryColor, // ColorPrimary, //Colors.white,
       body: _userDataProvider.isLoading
@@ -139,15 +140,19 @@ class _OnboardingLoginState extends State<OnboardingLogin> {
                   child: Row(
                     children: <Widget>[
                       Expanded(
-                          child: FlatButton(
-                        shape: RoundedRectangleBorder(
-                          borderRadius: BorderRadius.circular(5.0),
-                          side: BorderSide(color: Colors.white),
+                          child: TextButton(
+                        style: TextButton.styleFrom(
+                          shape: RoundedRectangleBorder(
+                            borderRadius: BorderRadius.circular(5.0),
+                            side: BorderSide(color: Colors.white),
+                          ),
+                          primary: ColorPrimary,
+                          textStyle: TextStyle(
+                            color: lightButtonTextColor,
+                          ),
+                          //child: OutlineButton(
+                          //borderSide: BorderSide(color: ColorPrimary),
                         ),
-                        color: ColorPrimary,
-                        textColor: lightButtonTextColor,
-                        //child: OutlineButton(
-                        //borderSide: BorderSide(color: ColorPrimary),
                         child: Text(
                           'Log in',
                           style: TextStyle(
@@ -230,9 +235,12 @@ class _OnboardingLoginState extends State<OnboardingLogin> {
     });
   }
 
-  Widget showAlertDialog(BuildContext context) {
+  showAlertDialog(BuildContext context) {
     // set up the button
-    Widget okButton = FlatButton(
+    Widget okButton = TextButton(
+      style: TextButton.styleFrom(
+        primary: Theme.of(context).buttonColor,
+      ),
       child: Text("OK"),
       onPressed: () {
         Navigator.of(context).pop();
diff --git a/lib/ui/onboarding/onboarding_screen.dart b/lib/ui/onboarding/onboarding_screen.dart
index 3142e745f..2b962bf75 100644
--- a/lib/ui/onboarding/onboarding_screen.dart
+++ b/lib/ui/onboarding/onboarding_screen.dart
@@ -88,7 +88,7 @@ class _OnboardingScreen extends State<OnboardingScreen>
     double height = MediaQuery.of(context).size.height;
 
     return Scaffold(
-      resizeToAvoidBottomPadding: false,
+      resizeToAvoidBottomInset: false,
       backgroundColor: Colors.white,
       body: Stack(children: <Widget>[
         Container(
@@ -151,8 +151,10 @@ class _OnboardingScreen extends State<OnboardingScreen>
             crossAxisAlignment: CrossAxisAlignment.stretch,
             children: <Widget>[
               Expanded(
-                  child: FlatButton(
-                color: ColorPrimary,
+                  child: TextButton(
+                style: TextButton.styleFrom(
+                  primary: ColorPrimary,
+                ),
                 onPressed: () {
                   Navigator.of(context).push(_routeToAffiliations());
                 },
@@ -165,8 +167,10 @@ class _OnboardingScreen extends State<OnboardingScreen>
                 ),
               )),
               Expanded(
-                child: FlatButton(
-                  color: ColorPrimary,
+                child: TextButton(
+                  style: TextButton.styleFrom(
+                    primary: ColorPrimary,
+                  ),
                   onPressed: () {
                     Navigator.of(context).push(_routeToLogin());
                   },
@@ -183,7 +187,7 @@ class _OnboardingScreen extends State<OnboardingScreen>
   }
 
   Widget buildPage1(double width, double height) {
-    return Stack(overflow: Overflow.clip, children: <Widget>[
+    return Stack(clipBehavior: Clip.none, children: <Widget>[
       Column(mainAxisAlignment: MainAxisAlignment.center, children: <Widget>[
         FractionallySizedBox(
           child: Container(
diff --git a/lib/ui/parking/manage_parking_view.dart b/lib/ui/parking/manage_parking_view.dart
index a68ac1898..3f0c611a4 100644
--- a/lib/ui/parking/manage_parking_view.dart
+++ b/lib/ui/parking/manage_parking_view.dart
@@ -28,7 +28,7 @@ class ManageParkingView extends StatelessWidget {
     List<ParkingModel> newOrder = parkingDataProvider.parkingModels;
     ParkingModel item = newOrder.removeAt(oldIndex);
     newOrder.insert(newIndex, item);
-    List<String> orderedLocationNames = List<String>();
+    List<String> orderedLocationNames = [];
     for (ParkingModel item in newOrder) {
       orderedLocationNames.add(item.locationName);
     }
@@ -36,7 +36,7 @@ class ManageParkingView extends StatelessWidget {
   }
 
   List<Widget> createList(BuildContext context) {
-    List<Widget> list = List<Widget>();
+    List<Widget> list = [];
     for (ParkingModel model in parkingDataProvider.parkingModels) {
       list.add(ListTile(
           key: Key(model.locationId.toString()),
diff --git a/lib/ui/parking/parking_card.dart b/lib/ui/parking/parking_card.dart
index a2535baa7..0656a06d7 100644
--- a/lib/ui/parking/parking_card.dart
+++ b/lib/ui/parking/parking_card.dart
@@ -21,7 +21,7 @@ class _ParkingCardState extends State<ParkingCard>
   WebViewController _webViewController;
   String cardId = 'parking';
   String webCardURL =
-      "https://mobile.ucsd.edu/replatform/v1/qa/webview/parking-v2/index.html";
+      "https://mobile.ucsd.edu/replatform/v1/qa/webview/parking-v3/index.html";
 
   @override
   void didChangeDependencies() {
@@ -62,7 +62,6 @@ class _ParkingCardState extends State<ParkingCard>
             final url = makeUrl(model.locationId, selectedSpots);
 
             selectedLotsViews.add(WebView(
-              opaque: false,
               initialUrl: url,
               javascriptMode: JavascriptMode.unrestricted,
               onWebViewCreated: (controller) {
@@ -113,8 +112,11 @@ class _ParkingCardState extends State<ParkingCard>
   }
 
   List<Widget> buildActionButtons() {
-    List<Widget> actionButtons = List<Widget>();
-    actionButtons.add(FlatButton(
+    List<Widget> actionButtons = [];
+    actionButtons.add(TextButton(
+      style: TextButton.styleFrom(
+        primary: Theme.of(context).buttonColor,
+      ),
       child: Text(
         'Manage Lots',
       ),
@@ -122,7 +124,10 @@ class _ParkingCardState extends State<ParkingCard>
         Navigator.pushNamed(context, RoutePaths.ManageParkingView);
       },
     ));
-    actionButtons.add(FlatButton(
+    actionButtons.add(TextButton(
+      style: TextButton.styleFrom(
+        primary: Theme.of(context).buttonColor,
+      ),
       child: Text(
         'Manage Spots',
       ),
diff --git a/lib/ui/parking/spot_types_view.dart b/lib/ui/parking/spot_types_view.dart
index f0e509c9c..ee98ef5bb 100644
--- a/lib/ui/parking/spot_types_view.dart
+++ b/lib/ui/parking/spot_types_view.dart
@@ -20,7 +20,7 @@ class SpotTypesView extends StatelessWidget {
   }
 
   List<Widget> createList(BuildContext context) {
-    List<Widget> list = List<Widget>();
+    List<Widget> list = [];
     for (Spot data in spotTypesDataProvider.spotTypeModel.spots) {
       Color iconColor = HexColor(data.color);
       Color textColor = HexColor(data.textColor);
diff --git a/lib/ui/profile/cards.dart b/lib/ui/profile/cards.dart
index cf5ab5d8b..06c24d43b 100644
--- a/lib/ui/profile/cards.dart
+++ b/lib/ui/profile/cards.dart
@@ -1,4 +1,3 @@
-import 'package:campus_mobile_experimental/app_constants.dart';
 import 'package:campus_mobile_experimental/core/providers/cards.dart';
 import 'package:campus_mobile_experimental/ui/common/container_view.dart';
 import 'package:flutter/material.dart';
@@ -26,10 +25,7 @@ class CardsView extends StatelessWidget {
       newIndex -= 1;
     }
     List<String> newOrder = _cardsDataProvider.cardOrder;
-    List<String> toRemove = List<String>();
-    if (_cardsDataProvider.cardOrder.contains('QRScanner')) {
-      toRemove.add('QRScanner');
-    }
+    List<String> toRemove = [];
     if (_cardsDataProvider.cardOrder.contains('NativeScanner')) {
       toRemove.add('NativeScanner');
     }
@@ -37,7 +33,7 @@ class CardsView extends StatelessWidget {
     newOrder.removeWhere((element) => toRemove.contains(element));
     String item = newOrder.removeAt(oldIndex);
     newOrder.insert(newIndex, item);
-    List<String> orderList = List<String>();
+    List<String> orderList = [];
     for (String item in newOrder) {
       orderList.add(item);
     }
@@ -46,9 +42,8 @@ class CardsView extends StatelessWidget {
   }
 
   List<Widget> createList(BuildContext context) {
-    List<Widget> list = List<Widget>();
+    List<Widget> list = [];
     for (String card in _cardsDataProvider.cardOrder) {
-      if (card == 'QRScanner') continue;
       if (card == 'NativeScanner') continue;
       list.add(ListTile(
         leading: Icon(Icons.reorder),
diff --git a/lib/ui/profile/login.dart b/lib/ui/profile/login.dart
index 8d18534eb..d00057c1d 100644
--- a/lib/ui/profile/login.dart
+++ b/lib/ui/profile/login.dart
@@ -58,10 +58,6 @@ class _LoginState extends State<Login> {
   }
 
   Widget buildUserProfileTile(BuildContext context) {
-    var username1 = Provider.of<UserDataProvider>(context, listen: false)
-        .userProfileModel
-        .username;
-
     return ListTile(
       leading: Icon(
         Icons.check_circle,
@@ -73,8 +69,11 @@ class _LoginState extends State<Login> {
             : "",
         style: TextStyle(fontSize: 17),
       ),
-      trailing: OutlineButton(
-        child: Text('logout'),
+      trailing: OutlinedButton(
+        style: OutlinedButton.styleFrom(
+          primary: Theme.of(context).buttonColor,
+        ),
+        child: Text('Log out'),
         onPressed: () => _userDataProvider.logout(),
       ),
     );
@@ -123,10 +122,15 @@ class _LoginState extends State<Login> {
             Row(
               children: <Widget>[
                 Expanded(
-                  child: FlatButton(
+                  child: ElevatedButton(
+                    style: ElevatedButton.styleFrom(
+                      primary: Theme.of(context).buttonColor,
+                    ),
                     child: Text(
                       'Sign In',
-                      style: TextStyle(fontSize: 17),
+                      style: TextStyle(
+                          fontSize: 18,
+                          color: Theme.of(context).textTheme.button.color),
                     ),
                     onPressed: _userDataProvider.isLoading
                         ? null
@@ -140,8 +144,6 @@ class _LoginState extends State<Login> {
                               }
                             });
                           },
-                    color: Theme.of(context).buttonColor,
-                    textColor: Theme.of(context).textTheme.button.color,
                   ),
                 ),
               ],
@@ -153,7 +155,7 @@ class _LoginState extends State<Login> {
                 child: Center(
                   child: Text(
                     'Need help logging in?',
-                    style: TextStyle(fontSize: 17),
+                    style: TextStyle(fontSize: 16),
                   ),
                 ),
               ),
@@ -180,9 +182,9 @@ class _LoginState extends State<Login> {
     });
   }
 
-  Widget showAlertDialog(BuildContext context) {
+  showAlertDialog(BuildContext context) {
     // set up the button
-    Widget okButton = FlatButton(
+    Widget okButton = TextButton(
       child: Text("OK"),
       onPressed: () {
         Navigator.of(context).pop();
diff --git a/lib/ui/profile/notifications.dart b/lib/ui/profile/notifications.dart
index a6a27f478..85747bb5e 100644
--- a/lib/ui/profile/notifications.dart
+++ b/lib/ui/profile/notifications.dart
@@ -19,7 +19,7 @@ class NotificationsSettingsView extends StatelessWidget {
   }
 
   List<Widget> createList(BuildContext context, List<String> topicsAvailable) {
-    List<Widget> list = List<Widget>();
+    List<Widget> list = [];
     for (String topic in topicsAvailable) {
       list.add(ListTile(
         key: Key(topic),
diff --git a/lib/ui/profile/profile.dart b/lib/ui/profile/profile.dart
index e733e7c2d..20598f1c7 100644
--- a/lib/ui/profile/profile.dart
+++ b/lib/ui/profile/profile.dart
@@ -1,4 +1,5 @@
 import 'dart:async';
+
 import 'package:campus_mobile_experimental/app_constants.dart';
 import 'package:campus_mobile_experimental/core/providers/bottom_nav.dart';
 import 'package:campus_mobile_experimental/core/providers/map.dart';
@@ -6,17 +7,17 @@ import 'package:campus_mobile_experimental/ui/common/build_info.dart';
 import 'package:campus_mobile_experimental/ui/profile/login.dart';
 import 'package:flutter/material.dart';
 import 'package:provider/provider.dart';
-import 'package:uni_links/uni_links.dart';
+import 'package:uni_links2/uni_links.dart';
 import 'package:url_launcher/url_launcher.dart';
 
 class Profile extends StatelessWidget {
-  StreamSubscription _sub;
 
   Future<Null> initUniLinks(BuildContext context) async {
     // deep links are received by this method
     // the specific host needs to be added in AndroidManifest.xml and Info.plist
     // currently, this method handles executing custom map query
-    _sub = getLinksStream().listen((String link) async {
+    StreamSubscription _sub;
+    _sub = linkStream.listen((String link) async {
       // handling for map query
       if (link.contains("deeplinking.searchmap")) {
         var uri = Uri.dataFromString(link);
@@ -28,8 +29,11 @@ class Profile extends StatelessWidget {
         Provider.of<MapsDataProvider>(context, listen: false).fetchLocations();
         Provider.of<BottomNavigationBarProvider>(context, listen: false)
             .currentIndex = NavigatorConstants.MapTab;
+        // received deeplink, cancel stream to prevent memory leaks
+        _sub.cancel();
       }
     });
+
   }
 
   @override
diff --git a/lib/ui/scanner/native_scanner_card.dart b/lib/ui/scanner/native_scanner_card.dart
index 151e2cc97..a2f04cd4f 100644
--- a/lib/ui/scanner/native_scanner_card.dart
+++ b/lib/ui/scanner/native_scanner_card.dart
@@ -63,7 +63,10 @@ class NativeScannerCard extends StatelessWidget {
   }
 
   Widget buildActionButton(BuildContext context) {
-    return FlatButton(
+    return TextButton(
+      style: TextButton.styleFrom(
+        primary: Theme.of(context).buttonColor,
+      ),
       child: Text(
         getActionButtonText(context),
       ),
diff --git a/lib/ui/scanner/native_scanner_view.dart b/lib/ui/scanner/native_scanner_view.dart
index bdd393617..f16144b5f 100644
--- a/lib/ui/scanner/native_scanner_view.dart
+++ b/lib/ui/scanner/native_scanner_view.dart
@@ -3,7 +3,6 @@ import 'package:campus_mobile_experimental/core/providers/scanner.dart';
 import 'package:campus_mobile_experimental/core/providers/scanner_message.dart';
 import 'package:campus_mobile_experimental/core/providers/user.dart';
 import 'package:campus_mobile_experimental/core/utils/webview.dart';
-import 'package:campus_mobile_experimental/ui/scanner/native_scanner_card.dart';
 import 'package:flutter/material.dart';
 import 'package:flutter_scandit_plugin/flutter_scandit_plugin.dart';
 import 'package:intl/intl.dart';
@@ -25,6 +24,8 @@ class ScanditScanner extends StatelessWidget {
       appBar: PreferredSize(
         preferredSize: Size.fromHeight(42),
         child: AppBar(
+          backgroundColor: ColorPrimary,
+          brightness: Brightness.dark,
           centerTitle: true,
           title: const Text("Scanner"),
         ),
@@ -88,7 +89,6 @@ class ScanditScanner extends StatelessWidget {
         ],
       ));
     } else if (_scannerDataProvider.successfulSubmission) {
-
       return (renderSuccessScreen(context));
     } else if (_scannerDataProvider.didError) {
       return (renderFailureScreen(context));
@@ -135,8 +135,13 @@ class ScanditScanner extends StatelessWidget {
               ),
               Padding(
                 padding: EdgeInsets.only(top: 16.0),
-                child: FlatButton(
-                  padding: EdgeInsets.only(left: 32.0, right: 32.0),
+                child: TextButton(
+                  style: TextButton.styleFrom(
+                      padding: EdgeInsets.only(left: 32.0, right: 32.0),
+                      primary: lightButtonColor,
+                      textStyle: TextStyle(
+                        color: Colors.white,
+                      )),
                   onPressed: () {
                     _scannerDataProvider.setDefaultStates();
                   },
@@ -144,8 +149,6 @@ class ScanditScanner extends StatelessWidget {
                     "Try again",
                     style: TextStyle(fontSize: 18.0),
                   ),
-                  color: lightButtonColor,
-                  textColor: Colors.white,
                 ),
               ),
             ])),
@@ -227,15 +230,18 @@ class ScanditScanner extends StatelessWidget {
       return Text(String.fromCharCode(0x2022) +
           " You can view your results by logging in to MyUCSDChart.");
     }
+
+    return Text(String.fromCharCode(0x2022) +
+        " You can view your results by logging in to MyChart.");
   }
 
   void updateLatestScan(BuildContext context) {
-    if(_scannerDataProvider.successfulSubmission && !hasUpdatedLatestScan) {
+    if (_scannerDataProvider.successfulSubmission && !hasUpdatedLatestScan) {
       // to fetch the most recent scan and display timestamp to user to confirm success
       print("updating");
-      Provider.of<ScannerMessageDataProvider>(context, listen: false).fetchData();
+      Provider.of<ScannerMessageDataProvider>(context, listen: false)
+          .fetchData();
       hasUpdatedLatestScan = true;
     }
   }
-
 }
diff --git a/lib/ui/scanner/web_scanner_card.dart b/lib/ui/scanner/web_scanner_card.dart
deleted file mode 100644
index 8695d2ed6..000000000
--- a/lib/ui/scanner/web_scanner_card.dart
+++ /dev/null
@@ -1,147 +0,0 @@
-import 'package:campus_mobile_experimental/app_constants.dart';
-import 'package:campus_mobile_experimental/core/providers/bottom_nav.dart';
-import 'package:campus_mobile_experimental/core/providers/scanner_message.dart';
-import 'package:campus_mobile_experimental/core/providers/user.dart';
-import 'package:campus_mobile_experimental/ui/common/card_container.dart';
-import 'package:flutter/material.dart';
-import 'package:flutter/rendering.dart';
-import 'package:provider/provider.dart';
-import 'package:url_launcher/url_launcher.dart';
-
-const String cardId = 'QRScanner';
-
-class ScannerCard extends StatelessWidget {
-  @override
-  Widget build(BuildContext context) {
-    return CardContainer(
-      active: true,
-      hide: () => null,
-      reload: () => Provider.of<ScannerMessageDataProvider>(context, listen: false)
-          .fetchData(),
-      isLoading: Provider.of<ScannerMessageDataProvider>(context).isLoading,
-      titleText: CardTitleConstants.titleMap[cardId],
-      errorText: null,
-      child: () => buildCardContent(context),
-      actionButtons: [buildActionButton(context)],
-      hideMenu: false,
-    );
-  }
-
-  Widget buildCardContent(BuildContext context) {
-    return GestureDetector(
-      onTap: () {
-        getActionButtonNavigateRoute(context);
-      },
-      behavior: HitTestBehavior.translucent,
-      child: Row(
-        children: <Widget>[
-          Container(
-            child: Image.asset(
-              'assets/images/QRScanIcon.png',
-              fit: BoxFit.contain,
-              height: 56,
-            ),
-            padding: EdgeInsets.only(
-              left: 10,
-              right: 10,
-            ),
-          ),
-          Column(
-            crossAxisAlignment: CrossAxisAlignment.start,
-            children: [
-              Text(
-                getCardContentText(context),
-                textAlign: TextAlign.left,
-              ),
-              getMessageWidget(context),
-            ],
-          ),
-        ],
-      ),
-    );
-  }
-
-  final _url =
-      'https://mobile.ucsd.edu/replatform/v1/qa/webview/scanner/index.html';
-
-  UserDataProvider _userDataProvider;
-
-  Widget buildActionButton(BuildContext context) {
-    _userDataProvider = Provider.of<UserDataProvider>(context);
-    return FlatButton(
-      child: Text(
-        getActionButtonText(context),
-      ),
-      onPressed: () {
-        getActionButtonNavigateRoute(context);
-      },
-    );
-  }
-
-  openLink(String url) async {
-    try {
-      launch(url, forceSafariVC: true);
-    } catch (e) {
-      // an error occurred, do nothing
-    }
-  }
-
-  String getCardContentText(BuildContext context) {
-    return Provider.of<UserDataProvider>(context, listen: false).isLoggedIn
-        ? ButtonText.ScanNowFull
-        : ButtonText.SignInFull;
-  }
-
-  String getActionButtonText(BuildContext context) {
-    return Provider.of<UserDataProvider>(context, listen: false).isLoggedIn
-        ? ButtonText.ScanNow
-        : ButtonText.SignIn;
-  }
-
-  getActionButtonNavigateRoute(BuildContext context) {
-    if (Provider.of<UserDataProvider>(context, listen: false).isLoggedIn) {
-      generateScannerUrl();
-    } else {
-      Provider.of<BottomNavigationBarProvider>(context, listen: false)
-          .currentIndex = NavigatorConstants.ProfileTab;
-    }
-  }
-
-  generateScannerUrl() {
-    var tokenQueryString =
-        "token=" + '${_userDataProvider.authenticationModel.accessToken}';
-    var affiliationQueryString = "affiliation=" +
-        '${_userDataProvider.authenticationModel.ucsdaffiliation}';
-    var url = _url + "?" + tokenQueryString + "&" + affiliationQueryString;
-
-    openLink(url);
-  }
-
-  Widget getMessageWidget(BuildContext context) {
-    if(Provider.of<UserDataProvider>(context, listen: false).isLoggedIn &&
-        Provider.of<ScannerMessageDataProvider>(context, listen: false).scannerMessageModel.collectionTime != null) {
-      return(
-          Padding(
-            padding: const EdgeInsets.only(top:8.0),
-            child: Text.rich(
-              TextSpan(
-                children: [
-                  TextSpan(
-                    text: "Last scan: ",
-                  ),
-                  TextSpan(
-                      text: Provider.of<ScannerMessageDataProvider>(context,listen: false)
-                          .scannerMessageModel.collectionTime,
-                      style: TextStyle(fontWeight: FontWeight.w600)
-                  ),
-                ],
-              ),
-            ),
-          )
-      );
-    }
-    else {
-      return Container(width: 0, height: 0);
-    }
-  }
-}
diff --git a/lib/ui/shuttle/add_shuttle_stops_view.dart b/lib/ui/shuttle/add_shuttle_stops_view.dart
index f9c70ab28..70e6ad11a 100644
--- a/lib/ui/shuttle/add_shuttle_stops_view.dart
+++ b/lib/ui/shuttle/add_shuttle_stops_view.dart
@@ -45,7 +45,7 @@ class _AddShuttleStopsViewState extends State<AddShuttleStopsView> {
   }
 
   List<Widget> createList(BuildContext context) {
-    List<Widget> list = List<Widget>();
+    List<Widget> list = [];
 
     _shuttleDataProvider.stopsNotSelected.forEach((key, value) {
       ShuttleStopModel model = value;
diff --git a/lib/ui/shuttle/manage_shuttle_view.dart b/lib/ui/shuttle/manage_shuttle_view.dart
index 074ae9c91..7214889e7 100644
--- a/lib/ui/shuttle/manage_shuttle_view.dart
+++ b/lib/ui/shuttle/manage_shuttle_view.dart
@@ -37,7 +37,7 @@ class ManageShuttleView extends StatelessWidget {
       newIndex -= 1;
     }
     List<ShuttleStopModel> newOrder = _shuttleDataProvider.stopsToRender;
-    List<ShuttleStopModel> toRemove = List<ShuttleStopModel>();
+    List<ShuttleStopModel> toRemove = [];
 
     for (ShuttleStopModel item in newOrder) {
       if (_shuttleDataProvider.stopsToRender == null) {
@@ -47,7 +47,7 @@ class ManageShuttleView extends StatelessWidget {
     newOrder.removeWhere((element) => toRemove.contains(element));
     ShuttleStopModel item = newOrder.removeAt(oldIndex);
     newOrder.insert(newIndex, item);
-    List<int> orderedStopNames = List<int>();
+    List<int> orderedStopNames = [];
     for (ShuttleStopModel item in newOrder) {
       orderedStopNames.add(item.id);
     }
@@ -55,7 +55,7 @@ class ManageShuttleView extends StatelessWidget {
   }
 
   List<Widget> createList(BuildContext context) {
-    List<Widget> list = List<Widget>();
+    List<Widget> list = [];
     print("is called");
     for (ShuttleStopModel model in _shuttleDataProvider.stopsToRender) {
       if (model != null) {
diff --git a/lib/ui/shuttle/shuttle_card.dart b/lib/ui/shuttle/shuttle_card.dart
index 5cd7dcf7d..317d3924a 100644
--- a/lib/ui/shuttle/shuttle_card.dart
+++ b/lib/ui/shuttle/shuttle_card.dart
@@ -49,7 +49,7 @@ class _ShuttleCardState extends State<ShuttleCard> {
     // print("Stops - ${stopsToRender.length}");
     // print("Arrivals - ${arrivalsToRender.length}");
 
-    List<Widget> renderList = List<Widget>();
+    List<Widget> renderList = [];
 
     if (_shuttleCardDataProvider.closestStop != null) {
       renderList.add(ShuttleDisplay(
@@ -96,8 +96,11 @@ class _ShuttleCardState extends State<ShuttleCard> {
   }
 
   List<Widget> buildActionButtons() {
-    List<Widget> actionButtons = List<Widget>();
-    actionButtons.add(FlatButton(
+    List<Widget> actionButtons = [];
+    actionButtons.add(TextButton(
+      style: TextButton.styleFrom(
+        primary: Theme.of(context).buttonColor,
+      ),
       child: Text(
         'Manage Shuttle Stops',
       ),
diff --git a/lib/ui/shuttle/shuttle_display.dart b/lib/ui/shuttle/shuttle_display.dart
index 3ffed2f24..c49ca5a79 100644
--- a/lib/ui/shuttle/shuttle_display.dart
+++ b/lib/ui/shuttle/shuttle_display.dart
@@ -118,7 +118,7 @@ class ShuttleDisplay extends StatelessWidget {
   }
 
   Widget buildArrivalData() {
-    List<Widget> arrivalsToRender = List<Widget>();
+    List<Widget> arrivalsToRender = [];
     for (int index = 1;
         index < arrivingShuttles.length && index <= 2;
         index++) {
diff --git a/lib/ui/student_id/student_id_card.dart b/lib/ui/student_id/student_id_card.dart
index f5b358d32..5aa3bd467 100644
--- a/lib/ui/student_id/student_id_card.dart
+++ b/lib/ui/student_id/student_id_card.dart
@@ -36,7 +36,7 @@ class _StudentIdCardState extends State<StudentIdCard> {
               child: checkForRotation(image, context, cardNumber, rotated),
             ),
             actions: <Widget>[
-              FlatButton(
+              TextButton(
                   child: Icon(
                     Icons.close,
                     color: Colors.black,
@@ -187,12 +187,13 @@ class _StudentIdCardState extends State<StudentIdCard> {
                           padding: EdgeInsets.all(
                               ScalingUtility.verticalSafeBlock * .9),
                         ),
-                        FlatButton(
+                        TextButton(
+                          style: TextButton.styleFrom(
+                            padding: EdgeInsets.all(0),
+                            tapTargetSize: MaterialTapTargetSize.shrinkWrap,
+                          ),
                           child: returnBarcodeContainer(
                               barcodeModel.barCode.toString(), false, context),
-                          padding: EdgeInsets.all(0),
-                          materialTapTargetSize:
-                              MaterialTapTargetSize.shrinkWrap,
                           onPressed: () {
                             createAlertDialog(
                                 context,
@@ -273,7 +274,7 @@ class _StudentIdCardState extends State<StudentIdCard> {
                     (nameModel.firstName + " " + nameModel.lastName),
                     style: TextStyle(
                         fontWeight: FontWeight.bold,
-                        fontSize: TabletFontSize(
+                        fontSize: tabletFontSize(
                             nameModel.firstName + " " + nameModel.lastName,
                             "name")),
                     textAlign: TextAlign.left,
@@ -289,7 +290,7 @@ class _StudentIdCardState extends State<StudentIdCard> {
                     overflow: TextOverflow.ellipsis,
                     style: TextStyle(
                         color: Colors.grey,
-                        fontSize: TabletFontSize(
+                        fontSize: tabletFontSize(
                             profileModel.collegeCurrent, "college")),
                     textAlign: TextAlign.left,
                     softWrap: false,
@@ -304,7 +305,7 @@ class _StudentIdCardState extends State<StudentIdCard> {
                         ? profileModel.graduatePrimaryMajorCurrent
                         : profileModel.ugPrimaryMajorCurrent,
                     style: TextStyle(
-                        fontSize: TabletFontSize(
+                        fontSize: tabletFontSize(
                             profileModel.graduatePrimaryMajorCurrent != ""
                                 ? profileModel.graduatePrimaryMajorCurrent
                                 : profileModel.ugPrimaryMajorCurrent,
@@ -318,10 +319,12 @@ class _StudentIdCardState extends State<StudentIdCard> {
                 Padding(
                   padding: EdgeInsets.only(top: 15),
                 ),
-                FlatButton(
+                TextButton(
+                  style: TextButton.styleFrom(
+                    padding: EdgeInsets.all(0),
+                  ),
                   child: returnBarcodeContainerTablet(
                       barcodeModel.barCode.toString(), false, context),
-                  padding: EdgeInsets.all(0),
                   onPressed: () {
                     createAlertDialog(
                         context,
@@ -551,7 +554,7 @@ class _StudentIdCardState extends State<StudentIdCard> {
     return base;
   }
 
-  double TabletFontSize(String input, String textField) {
+  double tabletFontSize(String input, String textField) {
     /// Base font size
     double base = letterSpacingForTablet();
 
diff --git a/lib/ui/survey/survey_card.dart b/lib/ui/survey/survey_card.dart
index df7d4ad36..22e7a271a 100644
--- a/lib/ui/survey/survey_card.dart
+++ b/lib/ui/survey/survey_card.dart
@@ -82,7 +82,6 @@ class _SurveyCardState extends State<SurveyCard>
       return Container(
         height: _contentHeight + 50, // Dynamic height iffy, add some padding
         child: WebView(
-          opaque: false,
           javascriptMode: JavascriptMode.unrestricted,
           initialUrl: surveyURL,
           onWebViewCreated: (controller) {
diff --git a/lib/ui/wayfinding/beacon_view.dart b/lib/ui/wayfinding/beacon_view.dart
index 51b9d53f8..f4de6e348 100644
--- a/lib/ui/wayfinding/beacon_view.dart
+++ b/lib/ui/wayfinding/beacon_view.dart
@@ -1,9 +1,7 @@
-import 'dart:async';
-
-import 'package:flutter/material.dart';
 import 'package:beacon_broadcast/beacon_broadcast.dart';
-import 'package:uuid/uuid.dart';
+import 'package:flutter/material.dart';
 import 'package:shared_preferences/shared_preferences.dart';
+import 'package:uuid/uuid.dart';
 
 class BeaconView extends StatefulWidget {
   @override
@@ -95,14 +93,14 @@ class _BeaconViewState extends State<BeaconView> {
           Row(
             mainAxisAlignment: MainAxisAlignment.spaceEvenly,
             children: <Widget>[
-              RaisedButton(
+              ElevatedButton(
                 onPressed: _startBroadcast,
                 child: Text(
                   "Start Broadcasting",
                   style: TextStyle(color: Colors.white),
                 ),
               ),
-              RaisedButton(
+              ElevatedButton(
                 onPressed: _stopBroadcast,
                 child: Text(
                   "Stop Broadcasting",
diff --git a/lib/ui/wayfinding/wayfinding_permissions.dart b/lib/ui/wayfinding/wayfinding_permissions.dart
index 391947538..10eee93e1 100644
--- a/lib/ui/wayfinding/wayfinding_permissions.dart
+++ b/lib/ui/wayfinding/wayfinding_permissions.dart
@@ -1,6 +1,7 @@
 import 'dart:io';
 
 import 'package:app_settings/app_settings.dart';
+import 'package:campus_mobile_experimental/app_styles.dart';
 import 'package:campus_mobile_experimental/core/providers/user.dart';
 import 'package:campus_mobile_experimental/core/providers/wayfinding.dart';
 import 'package:flutter/cupertino.dart';
@@ -28,6 +29,8 @@ class _AdvancedWayfindingPermissionState
       appBar: PreferredSize(
         preferredSize: Size.fromHeight(42),
         child: AppBar(
+          backgroundColor: ColorPrimary,
+          brightness: Brightness.dark,
           primary: true,
           centerTitle: true,
           title: Text("Advanced Wayfinding"),
@@ -141,13 +144,13 @@ class _AdvancedWayfindingPermissionState
                               content: Text(
                                   "This feature use Bluetooth to connect with other devices."),
                               actions: <Widget>[
-                                FlatButton(
+                                TextButton(
                                   child: Text('Cancel'),
                                   onPressed: () {
                                     Navigator.of(context).pop();
                                   },
                                 ),
-                                FlatButton(
+                                TextButton(
                                   child: Text('Settings'),
                                   onPressed: () {
                                     AppSettings.openAppSettings();
@@ -162,13 +165,13 @@ class _AdvancedWayfindingPermissionState
                             content: Text(
                                 "This feature use Bluetooth to connect with other devices."),
                             actions: <Widget>[
-                              FlatButton(
+                              TextButton(
                                 child: Text('Cancel'),
                                 onPressed: () {
                                   Navigator.of(context).pop();
                                 },
                               ),
-                              FlatButton(
+                              TextButton(
                                 child: Text('Settings'),
                                 onPressed: () {
                                   AppSettings.openAppSettings();
diff --git a/lib/ui/wifi/wifi_card.dart b/lib/ui/wifi/wifi_card.dart
new file mode 100644
index 000000000..fb64851ca
--- /dev/null
+++ b/lib/ui/wifi/wifi_card.dart
@@ -0,0 +1,458 @@
+import 'dart:async';
+
+import 'package:campus_mobile_experimental/app_constants.dart';
+import 'package:campus_mobile_experimental/app_styles.dart';
+import 'package:campus_mobile_experimental/core/providers/cards.dart';
+import 'package:campus_mobile_experimental/core/providers/speed_test.dart';
+import 'package:campus_mobile_experimental/core/providers/user.dart';
+import 'package:campus_mobile_experimental/ui/common/card_container.dart';
+import 'package:flutter/cupertino.dart';
+import 'package:flutter/material.dart';
+import 'package:flutter/rendering.dart';
+import 'package:liquid_progress_indicator/liquid_progress_indicator.dart';
+import 'package:provider/provider.dart';
+
+class WiFiCard extends StatefulWidget {
+  @override
+  _WiFiCardState createState() => _WiFiCardState();
+}
+
+class _WiFiCardState extends State<WiFiCard> {
+  String cardId = "speed_test";
+  TestStatus cardState;
+  int lastSpeed;
+  bool goodSpeed;
+  SpeedTestProvider _speedTestProvider = SpeedTestProvider();
+  UserDataProvider _userDataProvider;
+  bool _buttonEnabled = true;
+  Timer buttonTimer;
+
+  @override
+  void initState() {
+    cardState = TestStatus.initial;
+
+    super.initState();
+  }
+
+  @override
+  void didChangeDependencies() {
+    super.didChangeDependencies();
+    _speedTestProvider = Provider.of<SpeedTestProvider>(context);
+  }
+
+  @override
+  Widget build(BuildContext context) {
+    return CardContainer(
+      active: Provider.of<CardsDataProvider>(context).cardStates[cardId],
+      hide: () => Provider.of<CardsDataProvider>(context, listen: false)
+          .toggleCard(cardId),
+      reload: () =>
+          Provider.of<SpeedTestProvider>(context, listen: false).init(),
+      isLoading: _speedTestProvider.isLoading,
+      titleText: CardTitleConstants.titleMap[cardId],
+      errorText: _speedTestProvider.error,
+      child: () => buildCardContent(context),
+    );
+  }
+
+  Widget buildTitle() {
+    return Text(
+      "Wifi Card",
+      textAlign: TextAlign.left,
+      style: TextStyle(
+        fontSize: ScalingUtility.horizontalSafeBlock * 2,
+      ),
+    );
+  }
+
+  Widget buildCardContent(BuildContext context) {
+    _speedTestProvider.addListener(() {
+      //TODO: Add print statements to verify not reloading
+      try {
+        if (_speedTestProvider.onSimulator) {
+          cardState = TestStatus.simulated;
+        } else if (!_speedTestProvider.isUCSDWiFi) {
+          cardState = TestStatus.unavailable;
+        } else if (_speedTestProvider.timeElapsedDownload +
+                _speedTestProvider.timeElapsedUpload >
+            15) {
+          _speedTestProvider.cancelDownload();
+          _speedTestProvider.cancelUpload();
+          setState(() {
+            goodSpeed = false;
+            cardState = TestStatus.finished;
+          });
+        } else if (_speedTestProvider.speedTestDone) {
+          setState(() {
+            goodSpeed = true;
+            cardState = TestStatus.finished;
+          });
+        }
+      } catch (e) {}
+    });
+
+    switch (cardState) {
+      //TODO: Add check to verify not over-checking states
+      case TestStatus.initial:
+        return Padding(
+          padding: const EdgeInsets.all(8.0),
+          child: initialState(context),
+        );
+        break;
+      case TestStatus.running:
+        return Padding(
+          padding: const EdgeInsets.all(8.0),
+          child: speedTest(),
+        );
+        break;
+      case TestStatus.finished:
+        return Padding(
+          padding: const EdgeInsets.all(8.0),
+          child: finishedState(),
+        );
+        break;
+      case TestStatus.unavailable:
+        return Padding(
+          padding: const EdgeInsets.all(8.0),
+          child: unavailableState(),
+        );
+        break;
+      case TestStatus.simulated:
+        return Padding(
+            padding: const EdgeInsets.all(8.0), child: simulatedState());
+        break;
+    }
+    return initialState(context);
+  }
+
+  Column speedTest() {
+    return Column(
+      children: [
+        Padding(
+            padding: const EdgeInsets.all(8.0),
+            child: RichText(
+                text: TextSpan(children: [
+              TextSpan(
+                  text: "Testing... ",
+                  style: TextStyle(
+                    color: Colors.black,
+                    fontSize: 36,
+                  )),
+              WidgetSpan(
+                child: Icon(Icons.wifi, size: 36),
+              ),
+            ]))),
+        Container(
+          height: 40,
+          child: LiquidLinearProgressIndicator(
+              backgroundColor: Colors.white,
+              // Defaults to the current Theme's backgroundColor.
+              borderColor: Colors.black,
+              borderWidth: 0.5,
+              center: Text(
+                "${((_speedTestProvider.percentDownloaded * 100) / 2 + (_speedTestProvider.percentUploaded * 100) / 2).toStringAsPrecision(6).substring(0, 5)} %",
+                style: TextStyle(color: Colors.grey),
+              ),
+              direction: Axis.horizontal,
+              value: (_speedTestProvider.percentDownloaded +
+                      _speedTestProvider.percentUploaded) /
+                  2,
+              valueColor: AlwaysStoppedAnimation(lightPrimaryColor)),
+        ),
+      ],
+    );
+  }
+
+  Column initialState(BuildContext context) {
+    if (buttonTimer != null) _buttonEnabled = true;
+    return Column(
+      mainAxisAlignment: MainAxisAlignment.start,
+      children: [
+        RichText(
+            text: TextSpan(children: [
+          TextSpan(
+              text: "Test WiFi Speed ",
+              style: TextStyle(
+                color: Theme.of(context).accentColor,
+                fontSize: 36,
+              )),
+          WidgetSpan(
+            child: Icon(
+              Icons.wifi,
+              size: 36,
+            ),
+          ),
+          TextSpan(
+              text: "\n",
+              style: TextStyle(
+                color: Colors.black,
+                fontSize: 36,
+              )),
+          TextSpan(
+            text: "Help identify campus WiFi issues. \nRun a speed test now.",
+            style: TextStyle(fontSize: 15, color: Colors.grey),
+          ),
+        ])),
+        MaterialButton(
+            padding: EdgeInsets.all(4.0),
+            elevation: 0.0,
+            onPressed: () {
+              if (_speedTestProvider.onSimulator) {
+                setState(() {
+                  cardState = TestStatus.simulated;
+                });
+              } else {
+                setState(() {
+                  cardState = TestStatus.running;
+                  _speedTestProvider.speedTest();
+                });
+              }
+            },
+            minWidth: 350,
+            height: 40,
+            shape: RoundedRectangleBorder(
+              borderRadius: BorderRadius.circular(5.0),
+              side: BorderSide(color: Colors.black),
+            ),
+            color: darkAppBarTheme.color,
+            child: Text(
+              "Run Speed Test",
+              style: TextStyle(color: Colors.white),
+            )),
+        MaterialButton(
+            padding: EdgeInsets.all(12.0),
+            disabledColor: Colors.grey,
+            onPressed: _buttonEnabled
+                ? () {
+                    _speedTestProvider.reportIssue();
+                    return showDialog(
+                        context: context,
+                        builder: (context) {
+                          return AlertDialog(
+                            content: Container(
+                              child: Text(
+                                  "Please run speed test to report issue."),
+                            ),
+                            actions: <Widget>[
+                              FlatButton(
+                                  child: Text("Dismiss"),
+                                  onPressed: () {
+                                    Navigator.of(context).pop();
+                                  })
+                            ],
+                          );
+                        });
+                  }
+                : null,
+            minWidth: 350,
+            height: 40,
+            elevation: 0.0,
+            shape: RoundedRectangleBorder(
+              borderRadius: BorderRadius.circular(5.0),
+              side: BorderSide(color: Colors.black),
+            ),
+            color: Colors.grey.shade100,
+            child: Text(
+              "Report Issue",
+              style: TextStyle(color: Colors.black),
+            )),
+      ],
+    );
+  }
+
+  Column finishedState() {
+    _speedTestProvider.sendNetworkDiagnostics(lastSpeed);
+    return Column(
+      children: [
+        RichText(
+            text: TextSpan(children: [
+          TextSpan(
+              text: "Your speed is:  ",
+              style: TextStyle(
+                color: Colors.black,
+                fontSize: 36,
+              )),
+          WidgetSpan(
+            child: goodSpeed
+                ? Icon(Icons.thumb_up, size: 36, color: Colors.green)
+                : Icon(Icons.thumb_down, size: 36, color: Colors.red),
+          ),
+          TextSpan(
+            text:
+                '\n Your download speed was: ${lastSpeed != null ? lastSpeed.toStringAsPrecision(3) : _speedTestProvider.speed.toStringAsPrecision(3)} Mbps \n Your upload speed was: ${_speedTestProvider.uploadSpeed.toStringAsPrecision(3)} Mbps\n',
+            style: TextStyle(fontSize: 15, color: Colors.grey),
+          )
+        ])),
+        Padding(
+          padding: const EdgeInsets.all(4.0),
+          child: MaterialButton(
+              elevation: 0.0,
+              onPressed: () {
+                setState(() {
+                  cardState = TestStatus.initial;
+                  _speedTestProvider.resetSpeedTest();
+                });
+              },
+              minWidth: 350,
+              height: 40,
+              shape: RoundedRectangleBorder(
+                borderRadius: BorderRadius.circular(5.0),
+                side: BorderSide(color: Colors.black),
+              ),
+              color: darkAppBarTheme.color,
+              child: Text(
+                "Rerun Test",
+                style: TextStyle(color: Colors.white),
+              )),
+        ),
+        Padding(
+          padding: const EdgeInsets.only(bottom: 12.0),
+          child: MaterialButton(
+              disabledColor: Colors.grey,
+              onPressed: _buttonEnabled
+                  ? () {
+                      _speedTestProvider.reportIssue();
+                      return showDialog(
+                          context: context,
+                          builder: (context) {
+                            return AlertDialog(
+                              content: Container(
+                                child: Text(
+                                    "Thank you for helping improve UCSD wireless. Your test results have been sent to IT Services."),
+                              ),
+                              actions: <Widget>[
+                                FlatButton(
+                                    child: Text("Dismiss"),
+                                    onPressed: () {
+                                      Navigator.of(context).pop();
+                                      _buttonEnabled = false;
+                                      buttonTimer =
+                                          new Timer(Duration(minutes: 2), () {
+                                        _buttonEnabled = true;
+                                        setState(() {});
+                                      });
+                                      setState(() {});
+                                    })
+                              ],
+                            );
+                          });
+                    }
+                  : null,
+              minWidth: 350,
+              height: 40,
+              elevation: 0.0,
+              shape: RoundedRectangleBorder(
+                borderRadius: BorderRadius.circular(5.0),
+                side: BorderSide(color: Colors.black),
+              ),
+              color: Colors.grey.shade100,
+              child: Text(
+                "Report Issue",
+                style: TextStyle(color: Colors.black),
+              )),
+        ),
+      ],
+    );
+  }
+
+  Column unavailableState() {
+    return Column(
+      children: [
+        Padding(
+          padding: const EdgeInsets.all(8.0),
+          child: Text(
+            "Looks like you aren’t on a UCSD network",
+            style: TextStyle(
+              fontSize: 25,
+            ),
+            textAlign: TextAlign.center,
+          ),
+        ),
+        Padding(
+          padding: const EdgeInsets.all(8.0),
+          child: Text(
+            "Please check your connection and try again.",
+            style: TextStyle(fontSize: 13),
+            textAlign: TextAlign.center,
+          ),
+        )
+      ],
+    );
+  }
+
+  Column simulatedState() {
+    print("WiFi Speed Test feature is only available on physical devices.");
+    return Column(
+      children: [
+        Padding(
+          padding: const EdgeInsets.all(8.0),
+          child: Text(
+            "Sorry",
+            style: TextStyle(
+              fontSize: 25,
+            ),
+            textAlign: TextAlign.center,
+          ),
+        ),
+        Padding(
+          padding: const EdgeInsets.all(8.0),
+          child: Text(
+            "This feature is only available on physical devices.",
+            style: TextStyle(fontSize: 13),
+            textAlign: TextAlign.center,
+          ),
+        )
+      ],
+    );
+  }
+}
+
+//Image Scaling
+class ScalingUtility {
+  MediaQueryData _queryData;
+  static double horizontalSafeBlock;
+  static double verticalSafeBlock;
+
+  void getCurrentMeasurements(BuildContext context) {
+    /// Find screen size
+    _queryData = MediaQuery.of(context);
+
+    /// Calculate blocks accounting for notches and home bar
+    horizontalSafeBlock = (_queryData.size.width -
+            (_queryData.padding.left + _queryData.padding.right)) /
+        100;
+    verticalSafeBlock = (_queryData.size.height -
+            (_queryData.padding.top + _queryData.padding.bottom)) /
+        100;
+  }
+}
+
+class SizeConfig {
+  static MediaQueryData _mediaQueryData;
+  static double screenWidth;
+  static double screenHeight;
+  static double blockSizeHorizontal;
+  static double blockSizeVertical;
+
+  static double _safeAreaHorizontal;
+  static double _safeAreaVertical;
+  static double safeBlockHorizontal;
+  static double safeBlockVertical;
+
+  void init(BuildContext context) {
+    _mediaQueryData = MediaQuery.of(context);
+    screenWidth = _mediaQueryData.size.width;
+    screenHeight = _mediaQueryData.size.height;
+    blockSizeHorizontal = screenWidth / 100;
+    blockSizeVertical = screenHeight / 100;
+
+    _safeAreaHorizontal =
+        _mediaQueryData.padding.left + _mediaQueryData.padding.right;
+    _safeAreaVertical =
+        _mediaQueryData.padding.top + _mediaQueryData.padding.bottom;
+    safeBlockHorizontal = (screenWidth - _safeAreaHorizontal) / 100;
+    safeBlockVertical = (screenHeight - _safeAreaVertical) / 100;
+  }
+}
+
+enum TestStatus { initial, running, finished, unavailable, simulated }
diff --git a/pubspec.lock b/pubspec.lock
index da3b72f8c..e6ee626cd 100644
--- a/pubspec.lock
+++ b/pubspec.lock
@@ -7,350 +7,378 @@ packages:
       name: _fe_analyzer_shared
       url: "https://pub.dartlang.org"
     source: hosted
-    version: "14.0.0"
+    version: "21.0.0"
   analyzer:
     dependency: transitive
     description:
       name: analyzer
       url: "https://pub.dartlang.org"
     source: hosted
-    version: "0.41.2"
+    version: "1.5.0"
   app_settings:
     dependency: "direct main"
     description:
       name: app_settings
       url: "https://pub.dartlang.org"
     source: hosted
-    version: "4.0.4"
+    version: "4.1.0"
   args:
     dependency: transitive
     description:
       name: args
       url: "https://pub.dartlang.org"
     source: hosted
-    version: "1.6.0"
+    version: "2.1.0"
   asn1lib:
     dependency: transitive
     description:
       name: asn1lib
       url: "https://pub.dartlang.org"
     source: hosted
-    version: "0.6.5"
+    version: "1.0.0"
   async:
     dependency: transitive
     description:
       name: async
       url: "https://pub.dartlang.org"
     source: hosted
-    version: "2.5.0-nullsafety.1"
+    version: "2.5.0"
   background_fetch:
     dependency: "direct main"
     description:
       name: background_fetch
       url: "https://pub.dartlang.org"
     source: hosted
-    version: "0.6.0"
+    version: "1.0.0-nullsafety.2"
   barcode:
     dependency: transitive
     description:
       name: barcode
       url: "https://pub.dartlang.org"
     source: hosted
-    version: "1.17.1"
+    version: "2.1.0"
   barcode_widget:
     dependency: "direct main"
     description:
       name: barcode_widget
       url: "https://pub.dartlang.org"
     source: hosted
-    version: "1.5.0"
+    version: "2.0.1"
   beacon_broadcast:
     dependency: "direct main"
     description:
       name: beacon_broadcast
       url: "https://pub.dartlang.org"
     source: hosted
-    version: "0.2.1"
+    version: "0.3.0-nullsafety.0"
   boolean_selector:
     dependency: transitive
     description:
       name: boolean_selector
       url: "https://pub.dartlang.org"
     source: hosted
-    version: "2.1.0-nullsafety.1"
+    version: "2.1.0"
   build:
     dependency: transitive
     description:
       name: build
       url: "https://pub.dartlang.org"
     source: hosted
-    version: "1.5.2"
+    version: "2.0.1"
   build_config:
     dependency: transitive
     description:
       name: build_config
       url: "https://pub.dartlang.org"
     source: hosted
-    version: "0.4.2"
+    version: "1.0.0"
   build_daemon:
     dependency: transitive
     description:
       name: build_daemon
       url: "https://pub.dartlang.org"
     source: hosted
-    version: "2.1.7"
+    version: "3.0.0"
   build_resolvers:
     dependency: transitive
     description:
       name: build_resolvers
       url: "https://pub.dartlang.org"
     source: hosted
-    version: "1.4.4"
+    version: "2.0.1"
   build_runner:
     dependency: "direct dev"
     description:
       name: build_runner
       url: "https://pub.dartlang.org"
     source: hosted
-    version: "1.10.3"
+    version: "2.0.2"
   build_runner_core:
     dependency: transitive
     description:
       name: build_runner_core
       url: "https://pub.dartlang.org"
     source: hosted
-    version: "6.0.3"
+    version: "7.0.0"
   built_collection:
     dependency: transitive
     description:
       name: built_collection
       url: "https://pub.dartlang.org"
     source: hosted
-    version: "4.3.2"
+    version: "5.0.0"
   built_value:
     dependency: transitive
     description:
       name: built_value
       url: "https://pub.dartlang.org"
     source: hosted
-    version: "7.1.0"
+    version: "8.0.6"
   characters:
     dependency: transitive
     description:
       name: characters
       url: "https://pub.dartlang.org"
     source: hosted
-    version: "1.1.0-nullsafety.3"
+    version: "1.1.0"
   charcode:
     dependency: transitive
     description:
       name: charcode
       url: "https://pub.dartlang.org"
     source: hosted
-    version: "1.2.0-nullsafety.1"
+    version: "1.2.0"
   checked_yaml:
     dependency: transitive
     description:
       name: checked_yaml
       url: "https://pub.dartlang.org"
     source: hosted
-    version: "1.0.4"
+    version: "2.0.1"
   cli_util:
     dependency: transitive
     description:
       name: cli_util
       url: "https://pub.dartlang.org"
     source: hosted
-    version: "0.2.0"
+    version: "0.3.0"
   clock:
     dependency: transitive
     description:
       name: clock
       url: "https://pub.dartlang.org"
     source: hosted
-    version: "1.1.0-nullsafety.1"
+    version: "1.1.0"
   code_builder:
     dependency: transitive
     description:
       name: code_builder
       url: "https://pub.dartlang.org"
     source: hosted
-    version: "3.6.0"
+    version: "4.0.0"
   collection:
     dependency: transitive
     description:
       name: collection
       url: "https://pub.dartlang.org"
     source: hosted
-    version: "1.15.0-nullsafety.3"
+    version: "1.15.0"
+  connectivity:
+    dependency: "direct main"
+    description:
+      name: connectivity
+      url: "https://pub.dartlang.org"
+    source: hosted
+    version: "3.0.3"
+  connectivity_for_web:
+    dependency: transitive
+    description:
+      name: connectivity_for_web
+      url: "https://pub.dartlang.org"
+    source: hosted
+    version: "0.4.0"
+  connectivity_macos:
+    dependency: transitive
+    description:
+      name: connectivity_macos
+      url: "https://pub.dartlang.org"
+    source: hosted
+    version: "0.2.0"
+  connectivity_platform_interface:
+    dependency: transitive
+    description:
+      name: connectivity_platform_interface
+      url: "https://pub.dartlang.org"
+    source: hosted
+    version: "2.0.1"
   convert:
     dependency: transitive
     description:
       name: convert
       url: "https://pub.dartlang.org"
     source: hosted
-    version: "2.1.1"
+    version: "3.0.0"
   crypto:
     dependency: transitive
     description:
       name: crypto
       url: "https://pub.dartlang.org"
     source: hosted
-    version: "2.1.5"
+    version: "3.0.1"
   dart_style:
     dependency: transitive
     description:
       name: dart_style
       url: "https://pub.dartlang.org"
     source: hosted
-    version: "1.3.12"
-  dartx:
-    dependency: transitive
-    description:
-      name: dartx
-      url: "https://pub.dartlang.org"
-    source: hosted
-    version: "0.5.0"
+    version: "2.0.1"
   device_info:
     dependency: "direct main"
     description:
       name: device_info
       url: "https://pub.dartlang.org"
     source: hosted
-    version: "0.4.2+8"
+    version: "2.0.0"
   device_info_platform_interface:
     dependency: transitive
     description:
       name: device_info_platform_interface
       url: "https://pub.dartlang.org"
     source: hosted
-    version: "1.0.1"
+    version: "2.0.1"
   dio:
     dependency: "direct main"
     description:
       name: dio
       url: "https://pub.dartlang.org"
     source: hosted
-    version: "3.0.10"
+    version: "4.0.0"
   dots_indicator:
     dependency: "direct main"
     description:
       name: dots_indicator
       url: "https://pub.dartlang.org"
     source: hosted
-    version: "1.2.0"
+    version: "2.0.0"
   encrypt:
     dependency: "direct main"
     description:
       name: encrypt
       url: "https://pub.dartlang.org"
     source: hosted
-    version: "4.0.3"
+    version: "5.0.0"
   fake_async:
     dependency: transitive
     description:
       name: fake_async
       url: "https://pub.dartlang.org"
     source: hosted
-    version: "1.2.0-nullsafety.1"
+    version: "1.2.0"
+  ffi:
+    dependency: transitive
+    description:
+      name: ffi
+      url: "https://pub.dartlang.org"
+    source: hosted
+    version: "1.0.0"
   file:
     dependency: transitive
     description:
       name: file
       url: "https://pub.dartlang.org"
     source: hosted
-    version: "5.2.1"
+    version: "6.1.0"
   firebase:
     dependency: transitive
     description:
       name: firebase
       url: "https://pub.dartlang.org"
     source: hosted
-    version: "7.3.3"
+    version: "9.0.1"
   firebase_analytics:
     dependency: "direct main"
     description:
       name: firebase_analytics
       url: "https://pub.dartlang.org"
     source: hosted
-    version: "7.0.1"
+    version: "7.1.1"
   firebase_analytics_platform_interface:
     dependency: transitive
     description:
       name: firebase_analytics_platform_interface
       url: "https://pub.dartlang.org"
     source: hosted
-    version: "1.0.3"
+    version: "1.1.0"
   firebase_analytics_web:
     dependency: transitive
     description:
       name: firebase_analytics_web
       url: "https://pub.dartlang.org"
     source: hosted
-    version: "0.1.1"
+    version: "0.2.0+1"
   firebase_core:
     dependency: "direct main"
     description:
       name: firebase_core
       url: "https://pub.dartlang.org"
     source: hosted
-    version: "0.7.0"
+    version: "1.0.3"
   firebase_core_platform_interface:
     dependency: transitive
     description:
       name: firebase_core_platform_interface
       url: "https://pub.dartlang.org"
     source: hosted
-    version: "3.0.1"
+    version: "4.0.0"
   firebase_core_web:
     dependency: transitive
     description:
       name: firebase_core_web
       url: "https://pub.dartlang.org"
     source: hosted
-    version: "0.2.1+3"
+    version: "1.0.2"
   firebase_crashlytics:
     dependency: "direct main"
     description:
       name: firebase_crashlytics
       url: "https://pub.dartlang.org"
     source: hosted
-    version: "0.4.0+1"
+    version: "2.0.0"
   firebase_crashlytics_platform_interface:
     dependency: transitive
     description:
       name: firebase_crashlytics_platform_interface
       url: "https://pub.dartlang.org"
     source: hosted
-    version: "1.1.6"
+    version: "3.0.0"
   firebase_messaging:
     dependency: "direct main"
     description:
       name: firebase_messaging
       url: "https://pub.dartlang.org"
     source: hosted
-    version: "8.0.0-dev.15"
+    version: "9.1.1"
   firebase_messaging_platform_interface:
     dependency: transitive
     description:
       name: firebase_messaging_platform_interface
       url: "https://pub.dartlang.org"
     source: hosted
-    version: "1.0.0-dev.10"
+    version: "2.1.1"
   firebase_messaging_web:
     dependency: transitive
     description:
       name: firebase_messaging_web
       url: "https://pub.dartlang.org"
     source: hosted
-    version: "0.1.0-dev.6"
+    version: "1.0.4"
   fixnum:
     dependency: transitive
     description:
       name: fixnum
       url: "https://pub.dartlang.org"
     source: hosted
-    version: "0.10.11"
+    version: "1.0.0"
   flutter:
     dependency: "direct main"
     description: flutter
@@ -361,47 +389,61 @@ packages:
     description:
       path: "."
       ref: master
-      resolved-ref: "9b39bc2da969cce3c1c3f50c3e1882059b7bfbcb"
+      resolved-ref: "470b128cd463373d0ec4b668d5b4f449dc728d72"
       url: "https://github.com/UCSD/flutter_blue.git"
     source: git
-    version: "0.7.2"
+    version: "0.8.0"
   flutter_linkify:
     dependency: "direct main"
     description:
       name: flutter_linkify
       url: "https://pub.dartlang.org"
     source: hosted
-    version: "3.1.3"
+    version: "5.0.2"
+  flutter_local_notifications:
+    dependency: "direct main"
+    description:
+      name: flutter_local_notifications
+      url: "https://pub.dartlang.org"
+    source: hosted
+    version: "5.0.0+1"
+  flutter_local_notifications_platform_interface:
+    dependency: transitive
+    description:
+      name: flutter_local_notifications_platform_interface
+      url: "https://pub.dartlang.org"
+    source: hosted
+    version: "3.0.0"
   flutter_plugin_android_lifecycle:
     dependency: transitive
     description:
       name: flutter_plugin_android_lifecycle
       url: "https://pub.dartlang.org"
     source: hosted
-    version: "1.0.11"
+    version: "2.0.1"
   flutter_scandit_plugin:
     dependency: "direct main"
     description:
       path: "."
       ref: master
-      resolved-ref: "3048e56388c378d5ef22149aa50df3c8f3301f29"
+      resolved-ref: "41fb666299ed90d8277c24e0065149e83cd71494"
       url: "https://github.com/UCSD/flutter_scandit.git"
     source: git
-    version: "1.0.1"
+    version: "1.1.0"
   flutter_secure_storage:
     dependency: "direct main"
     description:
       name: flutter_secure_storage
       url: "https://pub.dartlang.org"
     source: hosted
-    version: "3.3.1+1"
+    version: "4.1.0"
   flutter_sticky_header:
     dependency: "direct main"
     description:
       name: flutter_sticky_header
       url: "https://pub.dartlang.org"
     source: hosted
-    version: "0.4.0"
+    version: "0.6.0"
   flutter_test:
     dependency: "direct dev"
     description: flutter
@@ -412,370 +454,400 @@ packages:
     description: flutter
     source: sdk
     version: "0.0.0"
+  frontend_server_client:
+    dependency: transitive
+    description:
+      name: frontend_server_client
+      url: "https://pub.dartlang.org"
+    source: hosted
+    version: "2.1.0"
+  get:
+    dependency: "direct main"
+    description:
+      name: get
+      url: "https://pub.dartlang.org"
+    source: hosted
+    version: "3.26.0"
   glob:
     dependency: transitive
     description:
       name: glob
       url: "https://pub.dartlang.org"
     source: hosted
-    version: "1.2.0"
+    version: "2.0.1"
   google_maps_flutter:
     dependency: "direct main"
     description:
       name: google_maps_flutter
       url: "https://pub.dartlang.org"
     source: hosted
-    version: "1.0.2"
+    version: "2.0.3"
   google_maps_flutter_platform_interface:
     dependency: transitive
     description:
       name: google_maps_flutter_platform_interface
       url: "https://pub.dartlang.org"
     source: hosted
-    version: "1.2.0"
+    version: "2.0.4"
   graphs:
     dependency: transitive
     description:
       name: graphs
       url: "https://pub.dartlang.org"
     source: hosted
-    version: "0.2.0"
+    version: "2.0.0"
   hive:
     dependency: "direct main"
     description:
       name: hive
       url: "https://pub.dartlang.org"
     source: hosted
-    version: "1.4.4+1"
+    version: "2.0.3"
   hive_flutter:
     dependency: "direct main"
     description:
       name: hive_flutter
       url: "https://pub.dartlang.org"
     source: hosted
-    version: "0.3.1"
+    version: "1.0.0"
   hive_generator:
     dependency: "direct dev"
     description:
       name: hive_generator
       url: "https://pub.dartlang.org"
     source: hosted
-    version: "0.8.1"
+    version: "1.0.1"
   http:
     dependency: transitive
     description:
       name: http
       url: "https://pub.dartlang.org"
     source: hosted
-    version: "0.12.2"
+    version: "0.13.3"
   http_multi_server:
     dependency: transitive
     description:
       name: http_multi_server
       url: "https://pub.dartlang.org"
     source: hosted
-    version: "2.2.0"
+    version: "3.0.1"
   http_parser:
     dependency: transitive
     description:
       name: http_parser
       url: "https://pub.dartlang.org"
     source: hosted
-    version: "3.1.4"
+    version: "4.0.0"
   intl:
     dependency: "direct main"
     description:
       name: intl
       url: "https://pub.dartlang.org"
     source: hosted
-    version: "0.16.0"
+    version: "0.17.0"
   io:
     dependency: transitive
     description:
       name: io
       url: "https://pub.dartlang.org"
     source: hosted
-    version: "0.3.5"
+    version: "1.0.0"
   js:
     dependency: transitive
     description:
       name: js
       url: "https://pub.dartlang.org"
     source: hosted
-    version: "0.6.2"
+    version: "0.6.3"
   json_annotation:
     dependency: transitive
     description:
       name: json_annotation
       url: "https://pub.dartlang.org"
     source: hosted
-    version: "3.1.1"
+    version: "4.0.1"
   linkify:
     dependency: transitive
     description:
       name: linkify
       url: "https://pub.dartlang.org"
     source: hosted
-    version: "2.1.0"
+    version: "4.0.0"
+  liquid_progress_indicator:
+    dependency: "direct main"
+    description:
+      path: "."
+      ref: master
+      resolved-ref: "9fd5cc0aa1a68d70588741f40bfc6830b46c10c1"
+      url: "https://github.com/UCSD/liquid_progress_indicator.git"
+    source: git
+    version: "0.3.2"
   location:
     dependency: "direct main"
     description:
       name: location
       url: "https://pub.dartlang.org"
     source: hosted
-    version: "3.0.2"
+    version: "4.1.1"
   location_platform_interface:
     dependency: transitive
     description:
       name: location_platform_interface
       url: "https://pub.dartlang.org"
     source: hosted
-    version: "1.1.0"
+    version: "2.1.0"
   location_web:
     dependency: transitive
     description:
       name: location_web
       url: "https://pub.dartlang.org"
     source: hosted
-    version: "1.0.1"
+    version: "3.0.0"
   logging:
     dependency: transitive
     description:
       name: logging
       url: "https://pub.dartlang.org"
     source: hosted
-    version: "0.11.4"
+    version: "1.0.1"
   matcher:
     dependency: transitive
     description:
       name: matcher
       url: "https://pub.dartlang.org"
     source: hosted
-    version: "0.12.10-nullsafety.1"
+    version: "0.12.10"
   meta:
     dependency: transitive
     description:
       name: meta
       url: "https://pub.dartlang.org"
     source: hosted
-    version: "1.3.0-nullsafety.3"
+    version: "1.3.0"
   mime:
     dependency: transitive
     description:
       name: mime
       url: "https://pub.dartlang.org"
     source: hosted
-    version: "0.9.7"
+    version: "1.0.0"
   nested:
     dependency: transitive
     description:
       name: nested
       url: "https://pub.dartlang.org"
     source: hosted
-    version: "0.0.4"
-  node_interop:
-    dependency: transitive
-    description:
-      name: node_interop
-      url: "https://pub.dartlang.org"
-    source: hosted
-    version: "1.2.1"
-  node_io:
-    dependency: transitive
-    description:
-      name: node_io
-      url: "https://pub.dartlang.org"
-    source: hosted
-    version: "1.2.0"
+    version: "1.0.0"
   package_config:
     dependency: transitive
     description:
       name: package_config
       url: "https://pub.dartlang.org"
     source: hosted
-    version: "1.9.3"
+    version: "2.0.0"
   package_info:
     dependency: "direct main"
     description:
       name: package_info
       url: "https://pub.dartlang.org"
     source: hosted
-    version: "0.4.0+18"
+    version: "2.0.0"
   path:
     dependency: transitive
     description:
       name: path
       url: "https://pub.dartlang.org"
     source: hosted
-    version: "1.8.0-nullsafety.1"
+    version: "1.8.0"
   path_provider:
-    dependency: "direct main"
+    dependency: transitive
     description:
       name: path_provider
       url: "https://pub.dartlang.org"
     source: hosted
-    version: "1.6.8"
+    version: "2.0.1"
+  path_provider_linux:
+    dependency: transitive
+    description:
+      name: path_provider_linux
+      url: "https://pub.dartlang.org"
+    source: hosted
+    version: "2.0.0"
   path_provider_macos:
     dependency: transitive
     description:
       name: path_provider_macos
       url: "https://pub.dartlang.org"
     source: hosted
-    version: "0.0.4+8"
+    version: "2.0.0"
   path_provider_platform_interface:
     dependency: transitive
     description:
       name: path_provider_platform_interface
       url: "https://pub.dartlang.org"
     source: hosted
-    version: "1.0.4"
+    version: "2.0.1"
+  path_provider_windows:
+    dependency: transitive
+    description:
+      name: path_provider_windows
+      url: "https://pub.dartlang.org"
+    source: hosted
+    version: "2.0.1"
   pedantic:
     dependency: transitive
     description:
       name: pedantic
       url: "https://pub.dartlang.org"
     source: hosted
-    version: "1.9.2"
+    version: "1.11.0"
   permission_handler:
     dependency: "direct main"
     description:
       name: permission_handler
       url: "https://pub.dartlang.org"
     source: hosted
-    version: "5.1.0+2"
+    version: "6.1.1"
   permission_handler_platform_interface:
     dependency: transitive
     description:
       name: permission_handler_platform_interface
       url: "https://pub.dartlang.org"
     source: hosted
-    version: "2.0.2"
+    version: "3.3.0"
   platform:
     dependency: transitive
     description:
       name: platform
       url: "https://pub.dartlang.org"
     source: hosted
-    version: "2.2.1"
+    version: "3.0.0"
   plugin_platform_interface:
     dependency: transitive
     description:
       name: plugin_platform_interface
       url: "https://pub.dartlang.org"
     source: hosted
-    version: "1.0.3"
+    version: "2.0.0"
   pointycastle:
     dependency: "direct main"
     description:
       name: pointycastle
       url: "https://pub.dartlang.org"
     source: hosted
-    version: "1.0.2"
+    version: "3.0.1"
   pool:
     dependency: transitive
     description:
       name: pool
       url: "https://pub.dartlang.org"
     source: hosted
-    version: "1.4.0"
+    version: "1.5.0"
+  process:
+    dependency: transitive
+    description:
+      name: process
+      url: "https://pub.dartlang.org"
+    source: hosted
+    version: "4.2.1"
   protobuf:
     dependency: transitive
     description:
       name: protobuf
       url: "https://pub.dartlang.org"
     source: hosted
-    version: "1.1.2"
+    version: "2.0.0"
   provider:
     dependency: "direct main"
     description:
       name: provider
       url: "https://pub.dartlang.org"
     source: hosted
-    version: "4.0.5"
+    version: "5.0.0"
   pub_semver:
     dependency: transitive
     description:
       name: pub_semver
       url: "https://pub.dartlang.org"
     source: hosted
-    version: "1.4.4"
+    version: "2.0.0"
   pubspec_parse:
     dependency: transitive
     description:
       name: pubspec_parse
       url: "https://pub.dartlang.org"
     source: hosted
-    version: "0.1.8"
+    version: "1.0.0"
   qr:
     dependency: transitive
     description:
       name: qr
       url: "https://pub.dartlang.org"
     source: hosted
-    version: "1.3.0"
-  quiver:
-    dependency: transitive
-    description:
-      name: quiver
-      url: "https://pub.dartlang.org"
-    source: hosted
-    version: "2.1.5"
+    version: "2.0.0"
   rxdart:
     dependency: transitive
     description:
       name: rxdart
       url: "https://pub.dartlang.org"
     source: hosted
-    version: "0.24.1"
-  service_worker:
-    dependency: transitive
-    description:
-      name: service_worker
-      url: "https://pub.dartlang.org"
-    source: hosted
-    version: "0.2.4"
+    version: "0.26.0"
   shared_preferences:
     dependency: "direct main"
     description:
       name: shared_preferences
       url: "https://pub.dartlang.org"
     source: hosted
-    version: "0.5.6+3"
+    version: "2.0.5"
+  shared_preferences_linux:
+    dependency: transitive
+    description:
+      name: shared_preferences_linux
+      url: "https://pub.dartlang.org"
+    source: hosted
+    version: "2.0.0"
   shared_preferences_macos:
     dependency: transitive
     description:
       name: shared_preferences_macos
       url: "https://pub.dartlang.org"
     source: hosted
-    version: "0.0.1+11"
+    version: "2.0.0"
   shared_preferences_platform_interface:
     dependency: transitive
     description:
       name: shared_preferences_platform_interface
       url: "https://pub.dartlang.org"
     source: hosted
-    version: "1.0.4"
+    version: "2.0.0"
   shared_preferences_web:
     dependency: transitive
     description:
       name: shared_preferences_web
       url: "https://pub.dartlang.org"
     source: hosted
-    version: "0.1.2+7"
+    version: "2.0.0"
+  shared_preferences_windows:
+    dependency: transitive
+    description:
+      name: shared_preferences_windows
+      url: "https://pub.dartlang.org"
+    source: hosted
+    version: "2.0.0"
   shelf:
     dependency: transitive
     description:
       name: shelf
       url: "https://pub.dartlang.org"
     source: hosted
-    version: "0.7.9"
+    version: "1.1.1"
   shelf_web_socket:
     dependency: transitive
     description:
       name: shelf_web_socket
       url: "https://pub.dartlang.org"
     source: hosted
-    version: "0.2.4+1"
+    version: "1.0.1"
   sky_engine:
     dependency: transitive
     description: flutter
@@ -787,142 +859,210 @@ packages:
       name: source_gen
       url: "https://pub.dartlang.org"
     source: hosted
-    version: "0.9.10+3"
+    version: "1.0.0"
   source_span:
     dependency: transitive
     description:
       name: source_span
       url: "https://pub.dartlang.org"
     source: hosted
-    version: "1.8.0-nullsafety.2"
+    version: "1.8.0"
   stack_trace:
     dependency: transitive
     description:
       name: stack_trace
       url: "https://pub.dartlang.org"
     source: hosted
-    version: "1.10.0-nullsafety.1"
+    version: "1.10.0"
   stream_channel:
     dependency: transitive
     description:
       name: stream_channel
       url: "https://pub.dartlang.org"
     source: hosted
-    version: "2.1.0-nullsafety.1"
+    version: "2.1.0"
   stream_transform:
     dependency: transitive
     description:
       name: stream_transform
       url: "https://pub.dartlang.org"
     source: hosted
-    version: "1.2.0"
+    version: "2.0.0"
   string_scanner:
     dependency: transitive
     description:
       name: string_scanner
       url: "https://pub.dartlang.org"
     source: hosted
-    version: "1.1.0-nullsafety.1"
+    version: "1.1.0"
   term_glyph:
     dependency: transitive
     description:
       name: term_glyph
       url: "https://pub.dartlang.org"
     source: hosted
-    version: "1.2.0-nullsafety.1"
+    version: "1.2.0"
   test_api:
     dependency: transitive
     description:
       name: test_api
       url: "https://pub.dartlang.org"
     source: hosted
-    version: "0.2.19-nullsafety.2"
-  time:
+    version: "0.2.19"
+  timezone:
     dependency: transitive
     description:
-      name: time
+      name: timezone
       url: "https://pub.dartlang.org"
     source: hosted
-    version: "1.4.0"
+    version: "0.7.0"
   timing:
     dependency: transitive
     description:
       name: timing
       url: "https://pub.dartlang.org"
     source: hosted
-    version: "0.1.1+3"
+    version: "1.0.0"
   typed_data:
     dependency: transitive
     description:
       name: typed_data
       url: "https://pub.dartlang.org"
     source: hosted
-    version: "1.3.0-nullsafety.3"
-  uni_links:
+    version: "1.3.0"
+  uni_links2:
     dependency: "direct main"
     description:
-      name: uni_links
+      name: uni_links2
       url: "https://pub.dartlang.org"
     source: hosted
-    version: "0.4.0"
+    version: "0.6.0+2"
+  uni_links2_platform_interface:
+    dependency: transitive
+    description:
+      name: uni_links2_platform_interface
+      url: "https://pub.dartlang.org"
+    source: hosted
+    version: "1.0.0+2"
+  uni_links_web2:
+    dependency: transitive
+    description:
+      name: uni_links_web2
+      url: "https://pub.dartlang.org"
+    source: hosted
+    version: "0.1.0+2"
   url_launcher:
     dependency: "direct main"
     description:
       name: url_launcher
       url: "https://pub.dartlang.org"
     source: hosted
-    version: "5.2.5"
+    version: "6.0.3"
+  url_launcher_linux:
+    dependency: transitive
+    description:
+      name: url_launcher_linux
+      url: "https://pub.dartlang.org"
+    source: hosted
+    version: "2.0.0"
+  url_launcher_macos:
+    dependency: transitive
+    description:
+      name: url_launcher_macos
+      url: "https://pub.dartlang.org"
+    source: hosted
+    version: "2.0.0"
   url_launcher_platform_interface:
     dependency: transitive
     description:
       name: url_launcher_platform_interface
       url: "https://pub.dartlang.org"
     source: hosted
-    version: "1.0.9"
+    version: "2.0.2"
+  url_launcher_web:
+    dependency: transitive
+    description:
+      name: url_launcher_web
+      url: "https://pub.dartlang.org"
+    source: hosted
+    version: "2.0.0"
+  url_launcher_windows:
+    dependency: transitive
+    description:
+      name: url_launcher_windows
+      url: "https://pub.dartlang.org"
+    source: hosted
+    version: "2.0.0"
   uuid:
     dependency: "direct main"
     description:
       name: uuid
       url: "https://pub.dartlang.org"
     source: hosted
-    version: "2.2.0"
+    version: "3.0.4"
+  value_layout_builder:
+    dependency: transitive
+    description:
+      name: value_layout_builder
+      url: "https://pub.dartlang.org"
+    source: hosted
+    version: "0.3.1"
   vector_math:
     dependency: transitive
     description:
       name: vector_math
       url: "https://pub.dartlang.org"
     source: hosted
-    version: "2.1.0-nullsafety.3"
+    version: "2.1.0"
   watcher:
     dependency: transitive
     description:
       name: watcher
       url: "https://pub.dartlang.org"
     source: hosted
-    version: "0.9.7+15"
+    version: "1.0.0"
   web_socket_channel:
     dependency: transitive
     description:
       name: web_socket_channel
       url: "https://pub.dartlang.org"
     source: hosted
-    version: "1.2.0"
+    version: "2.1.0"
   webview_flutter:
     dependency: "direct main"
     description:
-      path: "packages/webview_flutter"
-      ref: webview-transparent-background
-      resolved-ref: "9407b271ed9a58ab0a5d536fc14dd6ffe892c190"
-      url: "git://github.com/crizant/plugins"
-    source: git
-    version: "1.0.7"
+      name: webview_flutter
+      url: "https://pub.dartlang.org"
+    source: hosted
+    version: "2.0.4"
+  wifi_connection:
+    dependency: "direct main"
+    description:
+      name: wifi_connection
+      url: "https://pub.dartlang.org"
+    source: hosted
+    version: "0.0.4"
+  win32:
+    dependency: transitive
+    description:
+      name: win32
+      url: "https://pub.dartlang.org"
+    source: hosted
+    version: "2.0.5"
+  xdg_directories:
+    dependency: transitive
+    description:
+      name: xdg_directories
+      url: "https://pub.dartlang.org"
+    source: hosted
+    version: "0.2.0"
   yaml:
     dependency: transitive
     description:
       name: yaml
       url: "https://pub.dartlang.org"
     source: hosted
-    version: "2.2.1"
+    version: "3.1.0"
 sdks:
-  dart: ">=2.10.0 <2.11.0"
-  flutter: ">=1.22.0 <2.0.0"
+  dart: ">=2.12.0 <3.0.0"
+  flutter: ">=2.0.1"
diff --git a/pubspec.lock~upstream_experimental b/pubspec.lock~upstream_experimental
new file mode 100644
index 000000000..768804617
--- /dev/null
+++ b/pubspec.lock~upstream_experimental
@@ -0,0 +1,949 @@
+# Generated by pub
+# See https://dart.dev/tools/pub/glossary#lockfile
+packages:
+  _fe_analyzer_shared:
+    dependency: transitive
+    description:
+      name: _fe_analyzer_shared
+      url: "https://pub.dartlang.org"
+    source: hosted
+    version: "14.0.0"
+  analyzer:
+    dependency: transitive
+    description:
+      name: analyzer
+      url: "https://pub.dartlang.org"
+    source: hosted
+    version: "0.41.2"
+  app_settings:
+    dependency: "direct main"
+    description:
+      name: app_settings
+      url: "https://pub.dartlang.org"
+    source: hosted
+    version: "4.0.4"
+  args:
+    dependency: transitive
+    description:
+      name: args
+      url: "https://pub.dartlang.org"
+    source: hosted
+    version: "1.6.0"
+  asn1lib:
+    dependency: transitive
+    description:
+      name: asn1lib
+      url: "https://pub.dartlang.org"
+    source: hosted
+    version: "0.6.5"
+  async:
+    dependency: transitive
+    description:
+      name: async
+      url: "https://pub.dartlang.org"
+    source: hosted
+    version: "2.5.0-nullsafety.1"
+  background_fetch:
+    dependency: "direct main"
+    description:
+      name: background_fetch
+      url: "https://pub.dartlang.org"
+    source: hosted
+    version: "0.6.0"
+  barcode:
+    dependency: transitive
+    description:
+      name: barcode
+      url: "https://pub.dartlang.org"
+    source: hosted
+    version: "1.17.1"
+  barcode_widget:
+    dependency: "direct main"
+    description:
+      name: barcode_widget
+      url: "https://pub.dartlang.org"
+    source: hosted
+    version: "1.5.0"
+  beacon_broadcast:
+    dependency: "direct main"
+    description:
+      name: beacon_broadcast
+      url: "https://pub.dartlang.org"
+    source: hosted
+    version: "0.2.1"
+  boolean_selector:
+    dependency: transitive
+    description:
+      name: boolean_selector
+      url: "https://pub.dartlang.org"
+    source: hosted
+    version: "2.1.0-nullsafety.1"
+  build:
+    dependency: transitive
+    description:
+      name: build
+      url: "https://pub.dartlang.org"
+    source: hosted
+    version: "1.5.2"
+  build_config:
+    dependency: transitive
+    description:
+      name: build_config
+      url: "https://pub.dartlang.org"
+    source: hosted
+    version: "0.4.2"
+  build_daemon:
+    dependency: transitive
+    description:
+      name: build_daemon
+      url: "https://pub.dartlang.org"
+    source: hosted
+    version: "2.1.7"
+  build_resolvers:
+    dependency: transitive
+    description:
+      name: build_resolvers
+      url: "https://pub.dartlang.org"
+    source: hosted
+    version: "1.4.4"
+  build_runner:
+    dependency: "direct dev"
+    description:
+      name: build_runner
+      url: "https://pub.dartlang.org"
+    source: hosted
+    version: "1.10.3"
+  build_runner_core:
+    dependency: transitive
+    description:
+      name: build_runner_core
+      url: "https://pub.dartlang.org"
+    source: hosted
+    version: "6.0.3"
+  built_collection:
+    dependency: transitive
+    description:
+      name: built_collection
+      url: "https://pub.dartlang.org"
+    source: hosted
+    version: "4.3.2"
+  built_value:
+    dependency: transitive
+    description:
+      name: built_value
+      url: "https://pub.dartlang.org"
+    source: hosted
+    version: "7.1.0"
+  characters:
+    dependency: transitive
+    description:
+      name: characters
+      url: "https://pub.dartlang.org"
+    source: hosted
+    version: "1.1.0-nullsafety.3"
+  charcode:
+    dependency: transitive
+    description:
+      name: charcode
+      url: "https://pub.dartlang.org"
+    source: hosted
+    version: "1.2.0-nullsafety.1"
+  checked_yaml:
+    dependency: transitive
+    description:
+      name: checked_yaml
+      url: "https://pub.dartlang.org"
+    source: hosted
+    version: "1.0.4"
+  cli_util:
+    dependency: transitive
+    description:
+      name: cli_util
+      url: "https://pub.dartlang.org"
+    source: hosted
+    version: "0.2.0"
+  clock:
+    dependency: transitive
+    description:
+      name: clock
+      url: "https://pub.dartlang.org"
+    source: hosted
+    version: "1.1.0-nullsafety.1"
+  code_builder:
+    dependency: transitive
+    description:
+      name: code_builder
+      url: "https://pub.dartlang.org"
+    source: hosted
+    version: "3.7.0"
+  collection:
+    dependency: transitive
+    description:
+      name: collection
+      url: "https://pub.dartlang.org"
+    source: hosted
+    version: "1.15.0-nullsafety.3"
+  convert:
+    dependency: transitive
+    description:
+      name: convert
+      url: "https://pub.dartlang.org"
+    source: hosted
+    version: "2.1.1"
+  crypto:
+    dependency: transitive
+    description:
+      name: crypto
+      url: "https://pub.dartlang.org"
+    source: hosted
+    version: "2.1.5"
+  dart_style:
+    dependency: transitive
+    description:
+      name: dart_style
+      url: "https://pub.dartlang.org"
+    source: hosted
+    version: "1.3.12"
+  dartx:
+    dependency: transitive
+    description:
+      name: dartx
+      url: "https://pub.dartlang.org"
+    source: hosted
+    version: "0.5.0"
+  device_info:
+    dependency: "direct main"
+    description:
+      name: device_info
+      url: "https://pub.dartlang.org"
+    source: hosted
+    version: "0.4.2+8"
+  device_info_platform_interface:
+    dependency: transitive
+    description:
+      name: device_info_platform_interface
+      url: "https://pub.dartlang.org"
+    source: hosted
+    version: "1.0.1"
+  dio:
+    dependency: "direct main"
+    description:
+      name: dio
+      url: "https://pub.dartlang.org"
+    source: hosted
+    version: "3.0.10"
+  dots_indicator:
+    dependency: "direct main"
+    description:
+      name: dots_indicator
+      url: "https://pub.dartlang.org"
+    source: hosted
+    version: "1.2.0"
+  encrypt:
+    dependency: "direct main"
+    description:
+      name: encrypt
+      url: "https://pub.dartlang.org"
+    source: hosted
+    version: "4.0.3"
+  fake_async:
+    dependency: transitive
+    description:
+      name: fake_async
+      url: "https://pub.dartlang.org"
+    source: hosted
+    version: "1.2.0-nullsafety.1"
+  file:
+    dependency: transitive
+    description:
+      name: file
+      url: "https://pub.dartlang.org"
+    source: hosted
+    version: "5.2.1"
+  firebase:
+    dependency: transitive
+    description:
+      name: firebase
+      url: "https://pub.dartlang.org"
+    source: hosted
+    version: "7.3.3"
+  firebase_analytics:
+    dependency: "direct main"
+    description:
+      name: firebase_analytics
+      url: "https://pub.dartlang.org"
+    source: hosted
+    version: "7.0.1"
+  firebase_analytics_platform_interface:
+    dependency: transitive
+    description:
+      name: firebase_analytics_platform_interface
+      url: "https://pub.dartlang.org"
+    source: hosted
+    version: "1.0.3"
+  firebase_analytics_web:
+    dependency: transitive
+    description:
+      name: firebase_analytics_web
+      url: "https://pub.dartlang.org"
+    source: hosted
+    version: "0.1.1"
+  firebase_core:
+    dependency: "direct main"
+    description:
+      name: firebase_core
+      url: "https://pub.dartlang.org"
+    source: hosted
+    version: "0.7.0"
+  firebase_core_platform_interface:
+    dependency: transitive
+    description:
+      name: firebase_core_platform_interface
+      url: "https://pub.dartlang.org"
+    source: hosted
+    version: "3.0.1"
+  firebase_core_web:
+    dependency: transitive
+    description:
+      name: firebase_core_web
+      url: "https://pub.dartlang.org"
+    source: hosted
+    version: "0.2.1+3"
+  firebase_crashlytics:
+    dependency: "direct main"
+    description:
+      name: firebase_crashlytics
+      url: "https://pub.dartlang.org"
+    source: hosted
+    version: "0.4.0+1"
+  firebase_crashlytics_platform_interface:
+    dependency: transitive
+    description:
+      name: firebase_crashlytics_platform_interface
+      url: "https://pub.dartlang.org"
+    source: hosted
+    version: "1.1.6"
+  firebase_messaging:
+    dependency: "direct main"
+    description:
+      name: firebase_messaging
+      url: "https://pub.dartlang.org"
+    source: hosted
+    version: "8.0.0-dev.15"
+  firebase_messaging_platform_interface:
+    dependency: transitive
+    description:
+      name: firebase_messaging_platform_interface
+      url: "https://pub.dartlang.org"
+    source: hosted
+    version: "1.0.0-dev.10"
+  firebase_messaging_web:
+    dependency: transitive
+    description:
+      name: firebase_messaging_web
+      url: "https://pub.dartlang.org"
+    source: hosted
+    version: "0.1.0-dev.6"
+  fixnum:
+    dependency: transitive
+    description:
+      name: fixnum
+      url: "https://pub.dartlang.org"
+    source: hosted
+    version: "0.10.11"
+  flutter:
+    dependency: "direct main"
+    description: flutter
+    source: sdk
+    version: "0.0.0"
+  flutter_blue:
+    dependency: "direct main"
+    description:
+      path: "."
+      ref: "9b39bc2da969cce3c1c3f50c3e1882059b7bfbcb"
+      resolved-ref: "9b39bc2da969cce3c1c3f50c3e1882059b7bfbcb"
+      url: "https://github.com/UCSD/flutter_blue.git"
+    source: git
+    version: "0.7.2"
+  flutter_linkify:
+    dependency: "direct main"
+    description:
+      name: flutter_linkify
+      url: "https://pub.dartlang.org"
+    source: hosted
+    version: "3.1.3"
+  flutter_local_notifications:
+    dependency: "direct main"
+    description:
+      name: flutter_local_notifications
+      url: "https://pub.dartlang.org"
+    source: hosted
+    version: "4.0.1+2"
+  flutter_local_notifications_platform_interface:
+    dependency: transitive
+    description:
+      name: flutter_local_notifications_platform_interface
+      url: "https://pub.dartlang.org"
+    source: hosted
+    version: "2.0.0+1"
+  flutter_plugin_android_lifecycle:
+    dependency: transitive
+    description:
+      name: flutter_plugin_android_lifecycle
+      url: "https://pub.dartlang.org"
+    source: hosted
+    version: "1.0.11"
+  flutter_scandit_plugin:
+    dependency: "direct main"
+    description:
+      path: "."
+      ref: master
+      resolved-ref: "3048e56388c378d5ef22149aa50df3c8f3301f29"
+      url: "https://github.com/UCSD/flutter_scandit.git"
+    source: git
+    version: "1.0.1"
+  flutter_secure_storage:
+    dependency: "direct main"
+    description:
+      name: flutter_secure_storage
+      url: "https://pub.dartlang.org"
+    source: hosted
+    version: "3.3.1+1"
+  flutter_sticky_header:
+    dependency: "direct main"
+    description:
+      name: flutter_sticky_header
+      url: "https://pub.dartlang.org"
+    source: hosted
+    version: "0.4.0"
+  flutter_test:
+    dependency: "direct dev"
+    description: flutter
+    source: sdk
+    version: "0.0.0"
+  flutter_web_plugins:
+    dependency: transitive
+    description: flutter
+    source: sdk
+    version: "0.0.0"
+  glob:
+    dependency: transitive
+    description:
+      name: glob
+      url: "https://pub.dartlang.org"
+    source: hosted
+    version: "1.2.0"
+  google_maps_flutter:
+    dependency: "direct main"
+    description:
+      name: google_maps_flutter
+      url: "https://pub.dartlang.org"
+    source: hosted
+    version: "1.0.2"
+  google_maps_flutter_platform_interface:
+    dependency: transitive
+    description:
+      name: google_maps_flutter_platform_interface
+      url: "https://pub.dartlang.org"
+    source: hosted
+    version: "1.2.0"
+  graphs:
+    dependency: transitive
+    description:
+      name: graphs
+      url: "https://pub.dartlang.org"
+    source: hosted
+    version: "0.2.0"
+  hive:
+    dependency: "direct main"
+    description:
+      name: hive
+      url: "https://pub.dartlang.org"
+    source: hosted
+    version: "1.4.4+1"
+  hive_flutter:
+    dependency: "direct main"
+    description:
+      name: hive_flutter
+      url: "https://pub.dartlang.org"
+    source: hosted
+    version: "0.3.1"
+  hive_generator:
+    dependency: "direct dev"
+    description:
+      name: hive_generator
+      url: "https://pub.dartlang.org"
+    source: hosted
+    version: "0.8.1"
+  http:
+    dependency: transitive
+    description:
+      name: http
+      url: "https://pub.dartlang.org"
+    source: hosted
+    version: "0.12.2"
+  http_multi_server:
+    dependency: transitive
+    description:
+      name: http_multi_server
+      url: "https://pub.dartlang.org"
+    source: hosted
+    version: "2.2.0"
+  http_parser:
+    dependency: transitive
+    description:
+      name: http_parser
+      url: "https://pub.dartlang.org"
+    source: hosted
+    version: "3.1.4"
+  intl:
+    dependency: "direct main"
+    description:
+      name: intl
+      url: "https://pub.dartlang.org"
+    source: hosted
+    version: "0.16.0"
+  io:
+    dependency: transitive
+    description:
+      name: io
+      url: "https://pub.dartlang.org"
+    source: hosted
+    version: "0.3.5"
+  js:
+    dependency: transitive
+    description:
+      name: js
+      url: "https://pub.dartlang.org"
+    source: hosted
+    version: "0.6.2"
+  json_annotation:
+    dependency: transitive
+    description:
+      name: json_annotation
+      url: "https://pub.dartlang.org"
+    source: hosted
+    version: "3.1.1"
+  linkify:
+    dependency: transitive
+    description:
+      name: linkify
+      url: "https://pub.dartlang.org"
+    source: hosted
+    version: "2.1.0"
+  location:
+    dependency: "direct main"
+    description:
+      name: location
+      url: "https://pub.dartlang.org"
+    source: hosted
+    version: "3.0.2"
+  location_platform_interface:
+    dependency: transitive
+    description:
+      name: location_platform_interface
+      url: "https://pub.dartlang.org"
+    source: hosted
+    version: "1.1.0"
+  location_web:
+    dependency: transitive
+    description:
+      name: location_web
+      url: "https://pub.dartlang.org"
+    source: hosted
+    version: "1.0.1"
+  logging:
+    dependency: transitive
+    description:
+      name: logging
+      url: "https://pub.dartlang.org"
+    source: hosted
+    version: "0.11.4"
+  matcher:
+    dependency: transitive
+    description:
+      name: matcher
+      url: "https://pub.dartlang.org"
+    source: hosted
+    version: "0.12.10-nullsafety.1"
+  meta:
+    dependency: transitive
+    description:
+      name: meta
+      url: "https://pub.dartlang.org"
+    source: hosted
+    version: "1.3.0-nullsafety.3"
+  mime:
+    dependency: transitive
+    description:
+      name: mime
+      url: "https://pub.dartlang.org"
+    source: hosted
+    version: "0.9.7"
+  nested:
+    dependency: transitive
+    description:
+      name: nested
+      url: "https://pub.dartlang.org"
+    source: hosted
+    version: "0.0.4"
+  node_interop:
+    dependency: transitive
+    description:
+      name: node_interop
+      url: "https://pub.dartlang.org"
+    source: hosted
+    version: "1.2.1"
+  node_io:
+    dependency: transitive
+    description:
+      name: node_io
+      url: "https://pub.dartlang.org"
+    source: hosted
+    version: "1.2.0"
+  package_config:
+    dependency: transitive
+    description:
+      name: package_config
+      url: "https://pub.dartlang.org"
+    source: hosted
+    version: "1.9.3"
+  package_info:
+    dependency: "direct main"
+    description:
+      name: package_info
+      url: "https://pub.dartlang.org"
+    source: hosted
+    version: "0.4.0+18"
+  path:
+    dependency: transitive
+    description:
+      name: path
+      url: "https://pub.dartlang.org"
+    source: hosted
+    version: "1.8.0-nullsafety.1"
+  path_provider:
+    dependency: "direct main"
+    description:
+      name: path_provider
+      url: "https://pub.dartlang.org"
+    source: hosted
+    version: "1.6.8"
+  path_provider_macos:
+    dependency: transitive
+    description:
+      name: path_provider_macos
+      url: "https://pub.dartlang.org"
+    source: hosted
+    version: "0.0.4+8"
+  path_provider_platform_interface:
+    dependency: transitive
+    description:
+      name: path_provider_platform_interface
+      url: "https://pub.dartlang.org"
+    source: hosted
+    version: "1.0.4"
+  pedantic:
+    dependency: transitive
+    description:
+      name: pedantic
+      url: "https://pub.dartlang.org"
+    source: hosted
+    version: "1.9.2"
+  permission_handler:
+    dependency: "direct main"
+    description:
+      name: permission_handler
+      url: "https://pub.dartlang.org"
+    source: hosted
+    version: "5.1.0+2"
+  permission_handler_platform_interface:
+    dependency: transitive
+    description:
+      name: permission_handler_platform_interface
+      url: "https://pub.dartlang.org"
+    source: hosted
+    version: "2.0.2"
+  platform:
+    dependency: transitive
+    description:
+      name: platform
+      url: "https://pub.dartlang.org"
+    source: hosted
+    version: "2.2.1"
+  plugin_platform_interface:
+    dependency: transitive
+    description:
+      name: plugin_platform_interface
+      url: "https://pub.dartlang.org"
+    source: hosted
+    version: "1.0.3"
+  pointycastle:
+    dependency: "direct main"
+    description:
+      name: pointycastle
+      url: "https://pub.dartlang.org"
+    source: hosted
+    version: "1.0.2"
+  pool:
+    dependency: transitive
+    description:
+      name: pool
+      url: "https://pub.dartlang.org"
+    source: hosted
+    version: "1.4.0"
+  protobuf:
+    dependency: transitive
+    description:
+      name: protobuf
+      url: "https://pub.dartlang.org"
+    source: hosted
+    version: "1.1.3"
+  provider:
+    dependency: "direct main"
+    description:
+      name: provider
+      url: "https://pub.dartlang.org"
+    source: hosted
+    version: "4.0.5"
+  pub_semver:
+    dependency: transitive
+    description:
+      name: pub_semver
+      url: "https://pub.dartlang.org"
+    source: hosted
+    version: "1.4.4"
+  pubspec_parse:
+    dependency: transitive
+    description:
+      name: pubspec_parse
+      url: "https://pub.dartlang.org"
+    source: hosted
+    version: "0.1.8"
+  qr:
+    dependency: transitive
+    description:
+      name: qr
+      url: "https://pub.dartlang.org"
+    source: hosted
+    version: "1.3.0"
+  quiver:
+    dependency: transitive
+    description:
+      name: quiver
+      url: "https://pub.dartlang.org"
+    source: hosted
+    version: "2.1.5"
+  rxdart:
+    dependency: transitive
+    description:
+      name: rxdart
+      url: "https://pub.dartlang.org"
+    source: hosted
+    version: "0.24.1"
+  service_worker:
+    dependency: transitive
+    description:
+      name: service_worker
+      url: "https://pub.dartlang.org"
+    source: hosted
+    version: "0.2.4"
+  shared_preferences:
+    dependency: "direct main"
+    description:
+      name: shared_preferences
+      url: "https://pub.dartlang.org"
+    source: hosted
+    version: "0.5.6+3"
+  shared_preferences_macos:
+    dependency: transitive
+    description:
+      name: shared_preferences_macos
+      url: "https://pub.dartlang.org"
+    source: hosted
+    version: "0.0.1+11"
+  shared_preferences_platform_interface:
+    dependency: transitive
+    description:
+      name: shared_preferences_platform_interface
+      url: "https://pub.dartlang.org"
+    source: hosted
+    version: "1.0.4"
+  shared_preferences_web:
+    dependency: transitive
+    description:
+      name: shared_preferences_web
+      url: "https://pub.dartlang.org"
+    source: hosted
+    version: "0.1.2+7"
+  shelf:
+    dependency: transitive
+    description:
+      name: shelf
+      url: "https://pub.dartlang.org"
+    source: hosted
+    version: "0.7.9"
+  shelf_web_socket:
+    dependency: transitive
+    description:
+      name: shelf_web_socket
+      url: "https://pub.dartlang.org"
+    source: hosted
+    version: "0.2.4+1"
+  sky_engine:
+    dependency: transitive
+    description: flutter
+    source: sdk
+    version: "0.0.99"
+  source_gen:
+    dependency: transitive
+    description:
+      name: source_gen
+      url: "https://pub.dartlang.org"
+    source: hosted
+    version: "0.9.10+3"
+  source_span:
+    dependency: transitive
+    description:
+      name: source_span
+      url: "https://pub.dartlang.org"
+    source: hosted
+    version: "1.8.0-nullsafety.2"
+  stack_trace:
+    dependency: transitive
+    description:
+      name: stack_trace
+      url: "https://pub.dartlang.org"
+    source: hosted
+    version: "1.10.0-nullsafety.1"
+  stream_channel:
+    dependency: transitive
+    description:
+      name: stream_channel
+      url: "https://pub.dartlang.org"
+    source: hosted
+    version: "2.1.0-nullsafety.1"
+  stream_transform:
+    dependency: transitive
+    description:
+      name: stream_transform
+      url: "https://pub.dartlang.org"
+    source: hosted
+    version: "1.2.0"
+  string_scanner:
+    dependency: transitive
+    description:
+      name: string_scanner
+      url: "https://pub.dartlang.org"
+    source: hosted
+    version: "1.1.0-nullsafety.1"
+  term_glyph:
+    dependency: transitive
+    description:
+      name: term_glyph
+      url: "https://pub.dartlang.org"
+    source: hosted
+    version: "1.2.0-nullsafety.1"
+  test_api:
+    dependency: transitive
+    description:
+      name: test_api
+      url: "https://pub.dartlang.org"
+    source: hosted
+    version: "0.2.19-nullsafety.2"
+  time:
+    dependency: transitive
+    description:
+      name: time
+      url: "https://pub.dartlang.org"
+    source: hosted
+    version: "1.4.1"
+  timezone:
+    dependency: transitive
+    description:
+      name: timezone
+      url: "https://pub.dartlang.org"
+    source: hosted
+    version: "0.6.1"
+  timing:
+    dependency: transitive
+    description:
+      name: timing
+      url: "https://pub.dartlang.org"
+    source: hosted
+    version: "0.1.1+3"
+  typed_data:
+    dependency: transitive
+    description:
+      name: typed_data
+      url: "https://pub.dartlang.org"
+    source: hosted
+    version: "1.3.0-nullsafety.3"
+  uni_links:
+    dependency: "direct main"
+    description:
+      name: uni_links
+      url: "https://pub.dartlang.org"
+    source: hosted
+    version: "0.4.0"
+  url_launcher:
+    dependency: "direct main"
+    description:
+      name: url_launcher
+      url: "https://pub.dartlang.org"
+    source: hosted
+    version: "5.2.5"
+  url_launcher_platform_interface:
+    dependency: transitive
+    description:
+      name: url_launcher_platform_interface
+      url: "https://pub.dartlang.org"
+    source: hosted
+    version: "1.0.9"
+  uuid:
+    dependency: "direct main"
+    description:
+      name: uuid
+      url: "https://pub.dartlang.org"
+    source: hosted
+    version: "2.2.0"
+  vector_math:
+    dependency: transitive
+    description:
+      name: vector_math
+      url: "https://pub.dartlang.org"
+    source: hosted
+    version: "2.1.0-nullsafety.3"
+  watcher:
+    dependency: transitive
+    description:
+      name: watcher
+      url: "https://pub.dartlang.org"
+    source: hosted
+    version: "0.9.7+15"
+  web_socket_channel:
+    dependency: transitive
+    description:
+      name: web_socket_channel
+      url: "https://pub.dartlang.org"
+    source: hosted
+    version: "1.2.0"
+  webview_flutter:
+    dependency: "direct main"
+    description:
+      path: "packages/webview_flutter"
+      ref: webview-transparent-background
+      resolved-ref: "9407b271ed9a58ab0a5d536fc14dd6ffe892c190"
+      url: "git://github.com/crizant/plugins"
+    source: git
+    version: "1.0.7"
+  yaml:
+    dependency: transitive
+    description:
+      name: yaml
+      url: "https://pub.dartlang.org"
+    source: hosted
+    version: "2.2.1"
+sdks:
+  dart: ">=2.10.0 <2.11.0"
+  flutter: ">=1.22.0 <2.0.0"
diff --git a/pubspec.yaml b/pubspec.yaml
index ae25ee07e..c8ffe180d 100644
--- a/pubspec.yaml
+++ b/pubspec.yaml
@@ -1,61 +1,61 @@
 name: campus_mobile_experimental
-description: A new Flutter project.
+description: Mobile app platform for campus.
 version: 1.0.0+1
-
 environment:
-  sdk: ">=2.6.0 <3.0.0"
-
+  sdk: ">=2.7.0 <3.0.0"
 dependencies:
-  app_settings: 4.0.4
-  background_fetch: 0.6.0
-  barcode_widget: 1.5.0
-  beacon_broadcast: 0.2.1
-  device_info: 0.4.2+8
-  dio: 3.0.10
-  dots_indicator: 1.2.0
-  encrypt: 4.0.3
-  firebase_analytics: ^7.0.1
-  firebase_core: ^0.7.0
-  firebase_crashlytics: ^0.4.0+1
-  firebase_messaging: ^8.0.0-dev.14
+  app_settings: 4.1.0
+  background_fetch: 1.0.0-nullsafety.2
+  barcode_widget: 2.0.1
+  beacon_broadcast: 0.3.0-nullsafety.0
+  connectivity: 3.0.3
+  device_info: 2.0.0
+  dio: 4.0.0
+  dots_indicator: 2.0.0
+  encrypt: 5.0.0
+  firebase_analytics: 7.1.1
+  firebase_core: 1.0.3
+  firebase_crashlytics: 2.0.0
+  firebase_messaging: 9.1.1
+  flutter:
+    sdk: flutter
   flutter_scandit_plugin:
     git:
       url: https://github.com/UCSD/flutter_scandit.git
-      ref: 3048e56388c378d5ef22149aa50df3c8f3301f29
+      ref: master
   flutter_blue:
     git:
       url: https://github.com/UCSD/flutter_blue.git
-      ref: 9b39bc2da969cce3c1c3f50c3e1882059b7bfbcb
-  flutter_linkify: 3.1.3
-  flutter_secure_storage: 3.3.1+1
-  flutter_sticky_header: 0.4.0
-  flutter:
-    sdk: flutter
-  google_maps_flutter: 1.0.2
-  hive_flutter: 0.3.1
-  hive: 1.4.4+1
-  intl: 0.16.0
-  location: 3.0.2
-  package_info: 0.4.0+18
-  path_provider: 1.6.8
-  pointycastle: 1.0.2
-  provider: 4.0.5
-  shared_preferences: 0.5.6+3
-  url_launcher: 5.2.5
-  uuid: 2.2.0
-  permission_handler: 5.1.0+2
-  webview_flutter:
+      ref: master
+  flutter_linkify: 5.0.2
+  flutter_local_notifications: 5.0.0+1
+  flutter_secure_storage: 4.1.0
+  flutter_sticky_header: 0.6.0
+  get: 3.26.0
+  google_maps_flutter: 2.0.3
+  hive: 2.0.3
+  hive_flutter: 1.0.0
+  intl: 0.17.0
+  liquid_progress_indicator:
     git:
-      path: packages/webview_flutter
-      ref: webview-transparent-background
-      url: "git://github.com/crizant/plugins"
-  uni_links: 0.4.0
+      url: https://github.com/UCSD/liquid_progress_indicator.git
+      ref: master
+  location: 4.1.1
+  package_info: 2.0.0
+  permission_handler: 6.1.1
+  pointycastle: 3.0.1
+  provider: 5.0.0
+  shared_preferences: 2.0.5
+  uni_links2: 0.6.0+2
+  url_launcher: 6.0.3
+  uuid: 3.0.4
+  webview_flutter: 2.0.4
+  wifi_connection: 0.0.4
 dev_dependencies:
-  hive_generator: 0.8.1
-  build_runner: 1.10.3
+  build_runner: # https://github.com/hivedb/hive/issues/605
   flutter_test:
     sdk: flutter
-
+  hive_generator: # https://github.com/hivedb/hive/issues/605
 flutter:
   uses-material-design: true
   assets:
diff --git a/scripts/codemagic-ci/Readme.md b/scripts/codemagic-ci/Readme.md
index 3e1309c0b..7557786c7 100644
--- a/scripts/codemagic-ci/Readme.md
+++ b/scripts/codemagic-ci/Readme.md
@@ -18,9 +18,14 @@
     - Sharepoint integration configuration
     - Value: Encrypted and secured `sp-config.json`
 5. **FIREBASE_IOS**
+    - Firebase config for iOS
     - Value: Encrypted and secured `FIREBASE_IOS_QA.plist` or `FIREBASE_IOS_PROD.plist`
 6. **FIREBASE_ANDROID**
+    - Firebase config for Android
     - Value: Encrypted and secured `FIREBASE_ANDROID_QA.json` or `FIREBASE_ANDROID_PROD.json`
+7. **BUILD_PLATFORM**
+    - Build platform
+    - Accepted: `IOS`, `ANDROID`
 
 
 **_Encrypting Environment Variables_**
diff --git a/scripts/codemagic-ci/build-notifier.js b/scripts/codemagic-ci/build-notifier.js
index ddbd30399..977b42bbf 100644
--- a/scripts/codemagic-ci/build-notifier.js
+++ b/scripts/codemagic-ci/build-notifier.js
@@ -13,37 +13,44 @@ const INTERNAL_TIMEOUT = 20000
 const finalBuildNumber = parseInt(ENV_VARS.buildNumber) + 1000
 const buildArtifacts = {}
 
+ENV_VARS.commitHash = ENV_VARS.commitHash.substring(0, 7)
+
 const buildNotify = async () => {
 	try {
 		const buildTimestamp = moment().format('YYYY-MM-DD h:mm A')
 		const fciProjectLink = 'https://codemagic.io/app/' + ENV_VARS.fciProjectId + '/build/' + ENV_VARS.fciBuildId
 		let buildSuccess = (ENV_VARS.fciBuildStepStatus === 'success') ? true : false
-		let buildApkFile = ''
-		let buildIpaFile = ''
+		let buildApkFile = 'app-release.apk'
+		let buildIpaFile = 'UC_San_Diego.ipa'
 		let prAuthor = ''
+		let saveArtifactApkSuccess = false
+		let saveArtifactIpaSuccess = false
+		let testPlanFilename = ''
+		let testPlanUrl = ''
 
-		ENV_VARS.commitHash = ENV_VARS.commitHash.substring(0, 7)
-
-		// Supplemental GitHub API Metadata for PRs
-		if (ENV_VARS.prNumber) {
-			prAuthor = await githubMeta()
-		}
+		console.log('ENV_VARS.fciBuildStepStatus: ' + ENV_VARS.fciBuildStepStatus)
+		console.log('buildSuccess: ' + buildSuccess)
+		console.log('buildPlatform: ' + ENV_VARS.buildPlatform)
+		// Check build success
+		if (buildSuccess) {
+			// Supplemental GitHub metadata for PRs
+			if (ENV_VARS.prNumber) {
+				prAuthor = await githubMeta()
+			}
 
-		// Extract APK and IPA artifacts
-		ENV_VARS.fciArtifactLinks.forEach((artifact, index) => {
-			if (artifact.name === 'app-release.apk' && artifact.url) {
-				buildApkFile = artifact.name
-			} else if (artifact.name === 'UC_San_Diego.ipa' && artifact.url) {
-				buildIpaFile = artifact.name
+			// Save build artifacts
+			if (ENV_VARS.buildPlatform === 'IOS') {
+				saveArtifactIpaSuccess = await saveArtifact(buildIpaFile)
+			} else if (ENV_VARS.buildPlatform === 'ANDROID') {
+				saveArtifactApkSuccess = await saveArtifact(buildApkFile)
 			}
-		})
 
-		// Save build artifacts
-		const saveArtifactApkSuccess = await saveArtifact(buildApkFile)
-		const saveArtifactIpaSuccess = await saveArtifact(buildIpaFile)
+			// Generate test plan
+			;({ testPlanFilename, testPlanUrl } = await generateTestPlan(prAuthor))
+		}
 
-		// Generate test plan
-		const { testPlanFilename, testPlanUrl } = await generateTestPlan(prAuthor)
+		console.log('saveArtifactIpaSuccess: ' + saveArtifactIpaSuccess)
+		console.log('saveArtifactApkSuccess: ' + saveArtifactApkSuccess)
 
 		// Construct build notifier message
 		let teamsMessage = '#### Campus Mobile Build Notifier\n\n'
@@ -61,26 +68,32 @@ const buildNotify = async () => {
 		}
 
 		// Build Artifacts
-		if (saveArtifactIpaSuccess) {
-			teamsMessage += '<tr style="border-bottom: 1px solid grey"><td align="right"><b>iOS:</b></td><td><a href="https://mobile.ucsd.edu/testflight" style="text-decoration:underline">TestFlight ' + ENV_VARS.appVersion + ' (' + finalBuildNumber + ')</a></td></tr>'
-		} else {
-			teamsMessage += '<tr style="border-bottom: 1px solid grey"><td align="right"><b>iOS:</b></td><td><span style="color:#d60000">N/A</span></td></tr>'
-		}
-
-		if (saveArtifactApkSuccess) {
-			teamsMessage += '<tr style="border-bottom: 1px solid grey"><td align="right"><b>Android:</b></td><td><a href="' + buildArtifacts.buildApkFinalUrl + '" download style="text-decoration:underline">' + buildArtifacts.buildApkFinalFilename + '</a></td></tr>'
-		} else {
-			teamsMessage += '<tr style="border-bottom: 1px solid grey"><td align="right"><b>Android:</b></td><td><span style="color:#d60000">N/A</span></td></tr>'
+		if (ENV_VARS.buildPlatform === 'IOS') {
+			if (saveArtifactIpaSuccess) {
+				teamsMessage += '<tr style="border-bottom: 1px solid grey"><td align="right"><b>iOS:</b></td><td><a href="https://mobile.ucsd.edu/testflight" style="text-decoration:underline">TestFlight ' + ENV_VARS.appVersion + ' (' + finalBuildNumber + ')</a></td></tr>'
+			} else {
+				teamsMessage += '<tr style="border-bottom: 1px solid grey"><td align="right"><b>iOS:</b></td><td><span style="color:#d60000">N/A</span></td></tr>'
+			}
+		} else if (ENV_VARS.buildPlatform === 'ANDROID') {
+			if (saveArtifactApkSuccess) {
+				teamsMessage += '<tr style="border-bottom: 1px solid grey"><td align="right"><b>Android:</b></td><td><a href="' + buildArtifacts.buildApkFinalUrl + '" download style="text-decoration:underline">' + buildArtifacts.buildApkFinalFilename + '</a></td></tr>'
+			} else {
+				teamsMessage += '<tr style="border-bottom: 1px solid grey"><td align="right"><b>Android:</b></td><td><span style="color:#d60000">N/A</span></td></tr>'
+			}
 		}
 
 		// Test plan
-		teamsMessage += '<tr style="border-bottom: 1px solid grey"><td align="right"><b>Testing:</b></td><td><a href="' + testPlanUrl + '" style="text-decoration:underline">' + testPlanFilename + '</a></td></tr>'
+		if (testPlanUrl && testPlanFilename) {
+			teamsMessage += '<tr style="border-bottom: 1px solid grey"><td align="right"><b>Testing:</b></td><td><a href="' + testPlanUrl + '" style="text-decoration:underline">' + testPlanFilename + '</a></td></tr>'
+		}
 
 		const successEmojiList = ['🥇','🏆','🎖','🎉','🎊','🚀','🛫','🏋','💪','👏','💯']
 		const failedEmojiList = ['🙀','😱','😵']
 
 		// Build success or failure
-		if (buildSuccess && saveArtifactApkSuccess && saveArtifactIpaSuccess) {
+		if (buildSuccess &&
+			((saveArtifactApkSuccess && ENV_VARS.buildPlatform === 'ANDROID') ||
+			(saveArtifactIpaSuccess && ENV_VARS.buildPlatform === 'IOS'))) {
 			const successEmoji = successEmojiList[Math.floor(Math.random() * successEmojiList.length)]
 			teamsMessage += '<tr style="border-bottom: 1px solid grey"><td align="right"><b>Status:</b></td><td><span style="color:#12a102">BUILD SUCCESS ' + successEmoji + '</span> (<a href="' + fciProjectLink + '" style="text-decoration:underline">detail</a>)</td></tr>'
 		} else {
@@ -130,7 +143,7 @@ const saveArtifact = async (artifactFilename) => {
 		const fileOptions = { folder: ENV_VARS.prNumber ? SP_CONFIG.spPullRequestBuildFolder : SP_CONFIG.spRegressionBuildFolder }
 
 		// Save build artifacts to SP
-		if (artifactFilename === 'app-release.apk') {
+		if (ENV_VARS.buildPlatform === 'ANDROID') {
 			buildArtifacts.buildApkFilepath = '../../build/app/outputs/apk/release/app-release.apk'
 			buildArtifacts.buildApkFinalFilename = ENV_VARS.appVersion + '-' + finalBuildNumber + buildFilenamePrEnvStr + '.apk'
 			buildArtifacts.buildApkFinalUrl = (SP_CONFIG.spSiteUrl + buildFolder + buildArtifacts.buildApkFinalFilename).replace(/ /g, '%20')
@@ -140,7 +153,7 @@ const saveArtifact = async (artifactFilename) => {
 			console.log('Saving artifact `' + fileOptions.fileName + ' to SP...')
 			await spsave(coreOptions, SP_CONFIG.credentials, fileOptions)
 			return true
-		} else if (artifactFilename === 'UC_San_Diego.ipa') {
+		} else if (ENV_VARS.buildPlatform === 'IOS') {
 			buildArtifacts.buildIpaFilepath = '../../build/ios/ipa/UC San Diego.ipa'
 			buildArtifacts.buildIpaFinalFilename = ENV_VARS.appVersion + '-' + finalBuildNumber + buildFilenamePrEnvStr + '.ipa'
 			buildArtifacts.buildIpaFinalUrl = (SP_CONFIG.spSiteUrl + buildFolder + buildArtifacts.buildIpaFinalFilename).replace(/ /g, '%20')
@@ -151,6 +164,7 @@ const saveArtifact = async (artifactFilename) => {
 			await spsave(coreOptions, SP_CONFIG.credentials, fileOptions)
 			return true
 		}
+		return false
 	} catch(err) {
 		console.log(err)
 		return false
@@ -166,7 +180,11 @@ const generateTestPlan = async (prAuthor) => {
 			testPlanFilename = 'PR-' + ENV_VARS.prNumber + '-Test-Plan-' + ENV_VARS.appVersion + '-' + ENV_VARS.buildEnv + '-' + finalBuildNumber + '.xlsx'
 			testPlanUrl = (SP_CONFIG.spSiteUrl + SP_CONFIG.spPullRequestTestFolder + testPlanFilename + '?web=1').replace(/ /g, '%20')
 			console.log('  (1/3) Downloading PR test plan template ...')
-			fs.writeFileSync(testPlanFilename, await download(SP_CONFIG.prTestPlanTemplateUrl))
+			if (ENV_VARS.buildPlatform === 'IOS') {
+				fs.writeFileSync(testPlanFilename, await download(SP_CONFIG.prTestPlanTemplateUrlIos))
+			} else if (ENV_VARS.buildPlatform === 'ANDROID') {
+				fs.writeFileSync(testPlanFilename, await download(SP_CONFIG.prTestPlanTemplateUrlAndroid))
+			}
 		} else {
 			console.log('Generating regression test plan for branch ' + ENV_VARS.buildBranch)
 			testPlanFilename = 'Regression-Test-Plan-' + ENV_VARS.appVersion + '-' + ENV_VARS.buildEnv + '-' + finalBuildNumber + '.xlsx'
@@ -174,15 +192,27 @@ const generateTestPlan = async (prAuthor) => {
 			switch(ENV_VARS.buildEnv) {
 				case 'PROD':
 					console.log('  (1/3) Downloading PROD regression test plan template ...')
-					fs.writeFileSync(testPlanFilename, await download(SP_CONFIG.prodRegressionTestPlanTemplateUrl))
+					if (ENV_VARS.buildPlatform === 'IOS') {
+						fs.writeFileSync(testPlanFilename, await download(SP_CONFIG.prodRegressionTestPlanTemplateUrlIos))						
+					} else if (ENV_VARS.buildPlatform === 'ANDROID') {
+						fs.writeFileSync(testPlanFilename, await download(SP_CONFIG.prodRegressionTestPlanTemplateUrlAndroid))
+					}
 					break
 				case 'PROD-TEST':
 					console.log('  (1/3) Downloading PROD-TEST regression test plan template ...')
-					fs.writeFileSync(testPlanFilename, await download(SP_CONFIG.prodtestRegressionTestPlanTemplateUrl))
+					if (ENV_VARS.buildPlatform === 'IOS') {
+						fs.writeFileSync(testPlanFilename, await download(SP_CONFIG.prodtestRegressionTestPlanTemplateUrlIos))						
+					} else if (ENV_VARS.buildPlatform === 'ANDROID') {
+						fs.writeFileSync(testPlanFilename, await download(SP_CONFIG.prodtestRegressionTestPlanTemplateUrlAndroid))
+					}
 					break
 				default:
 					console.log('  (1/3) Downloading QA regression test plan template ...')
-					fs.writeFileSync(testPlanFilename, await download(SP_CONFIG.qaRegressionTestPlanTemplateUrl))
+					if (ENV_VARS.buildPlatform === 'IOS') {
+						fs.writeFileSync(testPlanFilename, await download(SP_CONFIG.qaRegressionTestPlanTemplateUrlIos))						
+					} else if (ENV_VARS.buildPlatform === 'ANDROID') {
+						fs.writeFileSync(testPlanFilename, await download(SP_CONFIG.qaRegressionTestPlanTemplateUrlAndroid))
+					}
 			}
 		}
 
diff --git a/scripts/codemagic-ci/post-clone.sh b/scripts/codemagic-ci/post-clone.sh
index 7e46226e6..75c653125 100644
--- a/scripts/codemagic-ci/post-clone.sh
+++ b/scripts/codemagic-ci/post-clone.sh
@@ -51,10 +51,16 @@ else
     exit 1
 fi
 
-
+# 7. BUILD_PLATFORM
+if [ -n "$BUILD_PLATFORM" ]; then
+    echo "BUILD_PLATFORM: Found"
+else
+    echo "Error: BUILD_PLATFORM not found, exiting."
+    exit 1
+fi
 
 echo "Installing Node.js ..."
-curl "https://nodejs.org/dist/latest/node-${VERSION:-$(wget -qO- https://nodejs.org/dist/latest/ | sed -nE 's|.*>node-(.*)\.pkg</a>.*|\1|p')}.pkg" > "$HOME/Downloads/node-latest.pkg" && sudo installer -store -pkg "$HOME/Downloads/node-latest.pkg" -target "/"
+curl "https://nodejs.org/dist/v14.16.0/node-v14.16.0.pkg" > "$HOME/Downloads/node-stable.pkg" && sudo installer -store -pkg "$HOME/Downloads/node-stable.pkg" -target "/"
 node --version
 
 echo "Writing app-config.js from \$APP_CONFIG ..."
@@ -73,15 +79,15 @@ echo $FIREBASE_ANDROID | base64 --decode > ./android/app/google-services.json
 echo "Setting build environment: $BUILD_ENV"
 if [ "$BUILD_ENV" == "PROD" ]; then
     node ./scripts/codemagic-ci/set-env.js PROD $APP_VERSION $PROJECT_BUILD_NUMBER
-    sh ./scripts/codemagic-ci/verify-env.sh PROD
+    sh ./scripts/codemagic-ci/verify-env.sh PROD $BUILD_PLATFORM
 elif [ "$BUILD_ENV" == "PROD-TEST" ]; then
     node ./scripts/codemagic-ci/set-env.js PROD $APP_VERSION $PROJECT_BUILD_NUMBER
-    sh ./scripts/codemagic-ci/verify-env.sh PROD
+    sh ./scripts/codemagic-ci/verify-env.sh PROD $BUILD_PLATFORM
     node ./scripts/codemagic-ci/set-env.js PROD-TEST
-    sh ./scripts/codemagic-ci/verify-env.sh PROD-TEST
+    sh ./scripts/codemagic-ci/verify-env.sh PROD-TEST $BUILD_PLATFORM
 elif [ "$BUILD_ENV" == "QA" ]; then
     node ./scripts/codemagic-ci/set-env.js QA $APP_VERSION $PROJECT_BUILD_NUMBER
-    sh ./scripts/codemagic-ci/verify-env.sh QA
+    sh ./scripts/codemagic-ci/verify-env.sh QA $BUILD_PLATFORM
 else
     echo "Error: BUILD_ENV not found, exiting."
     echo "End: post-clone.sh"
diff --git a/scripts/codemagic-ci/post-publish.sh b/scripts/codemagic-ci/post-publish.sh
index a41882aa9..b21512b31 100644
--- a/scripts/codemagic-ci/post-publish.sh
+++ b/scripts/codemagic-ci/post-publish.sh
@@ -9,13 +9,14 @@ ENV_VARS=$( jq -n \
                   --arg fciProjectId "$FCI_PROJECT_ID" \
                   --arg fciBuildId "$FCI_BUILD_ID" \
                   --arg appVersion "$APP_VERSION" \
+                  --arg buildPlatform "$BUILD_PLATFORM" \
                   --arg buildNumber "$PROJECT_BUILD_NUMBER" \
                   --arg buildEnv "$BUILD_ENV" \
                   --argjson fciArtifactLinks "$FCI_ARTIFACT_LINKS" \
                   --arg buildBranch "$FCI_BRANCH" \
                   --arg commitHash "$FCI_COMMIT" \
                   --arg prNumber "$FCI_PULL_REQUEST_NUMBER" \
-                  '{fciBuildStepStatus: $fciBuildStepStatus, fciProjectId: $fciProjectId, fciBuildId: $fciBuildId, appVersion: $appVersion, buildNumber: $buildNumber, buildEnv: $buildEnv, fciArtifactLinks: $fciArtifactLinks, buildBranch: $buildBranch, commitHash: $commitHash, prNumber: $prNumber}' )
+                  '{fciBuildStepStatus: $fciBuildStepStatus, fciProjectId: $fciProjectId, fciBuildId: $fciBuildId, appVersion: $appVersion, buildPlatform: $buildPlatform, buildNumber: $buildNumber, buildEnv: $buildEnv, fciArtifactLinks: $fciArtifactLinks, buildBranch: $buildBranch, commitHash: $commitHash, prNumber: $prNumber}' )
 
 echo "Writing env-vars.json from \$ENV_VARS ..."
 echo $ENV_VARS > env-vars.json
diff --git a/scripts/codemagic-ci/set-env.js b/scripts/codemagic-ci/set-env.js
index 650e7d218..5211e08df 100644
--- a/scripts/codemagic-ci/set-env.js
+++ b/scripts/codemagic-ci/set-env.js
@@ -84,8 +84,8 @@ const appVersionReplacements = async () => {
 		config.APP_VERSION_REPLACEMENTS.forEach((envItem) => {
 			fs.readFile(envItem.PATH, 'utf8', (err, data) => {
 				const finalBuildNumber = parseInt(buildNumber) + 1000
-				data = data.replaceAll('MARKETING_VERSION = 1.0.0;', 'MARKETING_VERSION = ' + appVersion + ';')
-				data = data.replaceAll('CURRENT_PROJECT_VERSION = 1;', 'CURRENT_PROJECT_VERSION = ' + finalBuildNumber + ';')
+				data = data.replace(/MARKETING_VERSION = 1\.0\.0;/g, 'MARKETING_VERSION = ' + appVersion + ';')
+				data = data.replace(/CURRENT_PROJECT_VERSION = 1;/g, 'CURRENT_PROJECT_VERSION = ' + finalBuildNumber + ';')
 				fs.writeFile(envItem.PATH, data, 'utf8', (err) => {
 					if (err) throw err
 					else console.log(envItem.PATH + ' --> ' + appVersion + ' (' + finalBuildNumber + ')')
diff --git a/scripts/codemagic-ci/verify-env.sh b/scripts/codemagic-ci/verify-env.sh
index cb448f092..50f0f2356 100644
--- a/scripts/codemagic-ci/verify-env.sh
+++ b/scripts/codemagic-ci/verify-env.sh
@@ -1,18 +1,23 @@
 #!/bin/sh
-set -ex
+set -e
 
-echo "Param passed: -------------------------- $1"
+echo "Running verify-env.sh $1"
 
 if [ "$1" == "PROD" ]; then
-    echo "verify-env.sh PROD-----------------------------------------------"
 	qa_slash=$(grep -rio "https.*\/qa" lib | wc -l | sed -e "s/^[ \t]*//")
 	qa_dash=$(grep -rio "https.*-qa" lib | wc -l | sed -e "s/^[ \t]*//")
 	dev_slash=$(grep -rio "https.*\/dev" lib | wc -l | sed -e "s/^[ \t]*//")
 	dev_dash=$(grep -rio "https.*-dev" lib | wc -l | sed -e "s/^[ \t]*//")
 	scandit_android=$(grep -rio "SCANDIT_NATIVE_LICENSE_ANDROID_PH" lib | wc -l | sed -e "s/^[ \t]*//")
 	scandit_ios=$(grep -rio "SCANDIT_NATIVE_LICENSE_IOS_PH" lib | wc -l | sed -e "s/^[ \t]*//")
+	background_android=0
 
-	invalid_count=$((qa_slash + qa_dash + dev_slash + dev_dash + scandit_android + scandit_ios))
+	if [ "$2" == "ANDROID" ]; then
+		echo "$2: Background location check"
+		background_android=$(grep -rio "ACCESS_BACKGROUND_LOCATION" android | wc -l | sed -e "s/^[ \t]*//")
+	fi
+
+	invalid_count=$((qa_slash + qa_dash + dev_slash + dev_dash + scandit_android + scandit_ios + background_android))
 
 	if [ "$invalid_count" -eq 0 ]; then
 		echo "\nverify-env.sh PROD: PASS"
@@ -24,9 +29,12 @@ if [ "$1" == "PROD" ]; then
 		grep -rin "https.*-dev" lib
 		grep -rin "SCANDIT_NATIVE_LICENSE_IOS_PH" lib
 		grep -rin "SCANDIT_NATIVE_LICENSE_ANDROID_PH" lib
+		if [ "$2" == "ANDROID" ]; then
+			grep -rin "ACCESS_BACKGROUND_LOCATION" android
+		fi
+		exit 1
 	fi
 elif [ "$1" == "PROD-TEST" ]; then
-    echo "verify-env.sh PROD-TEST -----------------------------------------------"
 	topics=$(grep -rio "https.*prod/topics.json" lib | wc -l | sed -e "s/^[ \t]*//")
 
 	invalid_count=$((topics))
@@ -39,13 +47,19 @@ elif [ "$1" == "PROD-TEST" ]; then
 		grep -rin "\"freeFood\"" lib
 		grep -rin "SCANDIT_NATIVE_LICENSE_IOS_PH" lib
 		grep -rin "SCANDIT_NATIVE_LICENSE_ANDROID_PH" lib
+		exit 1
 	fi
 elif [ "$1" == "QA" ]; then
-    echo "verify-env.sh QA-----------------------------------------------"
 	scandit_android=$(grep -rio "SCANDIT_NATIVE_LICENSE_ANDROID_PH" lib | wc -l | sed -e "s/^[ \t]*//")
 	scandit_ios=$(grep -rio "SCANDIT_NATIVE_LICENSE_IOS_PH" lib | wc -l | sed -e "s/^[ \t]*//")
+	background_android=0
+
+	if [ "$2" == "ANDROID" ]; then
+		echo "$2: Background location check"
+		background_android=$(grep -rio "ACCESS_BACKGROUND_LOCATION" android | wc -l | sed -e "s/^[ \t]*//")
+	fi
 
-	invalid_count=$((scandit_android + scandit_ios))
+	invalid_count=$((scandit_android + scandit_ios + background_android))
 
 	if [ "$invalid_count" -eq 0 ]; then
 		echo "\nset-env-qa: PASS"
@@ -55,6 +69,10 @@ elif [ "$1" == "QA" ]; then
 		grep -rin "https.*-prod" lib
 		grep -rin "SCANDIT_NATIVE_LICENSE_IOS_PH" lib
 		grep -rin "SCANDIT_NATIVE_LICENSE_ANDROID_PH" lib
+		if [ "$2" == "ANDROID" ]; then
+			grep -rin "ACCESS_BACKGROUND_LOCATION" android
+		fi
+		exit 1
 	fi
 else
 	echo "Error: verify-env.sh: Environment not specified (PROD|PROD-TEST|QA)"
